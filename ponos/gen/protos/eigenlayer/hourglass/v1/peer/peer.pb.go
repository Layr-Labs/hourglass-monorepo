// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: eigenlayer/hourglass/v1/peer/peer.proto

package peer

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PeerInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NetworkAddress string                 `protobuf:"bytes,1,opt,name=network_address,json=networkAddress,proto3" json:"network_address,omitempty"`
	Port           uint32                 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	PublicKey      string                 `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PeerInfo) Reset() {
	*x = PeerInfo{}
	mi := &file_eigenlayer_hourglass_v1_peer_peer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerInfo) ProtoMessage() {}

func (x *PeerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_peer_peer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerInfo.ProtoReflect.Descriptor instead.
func (*PeerInfo) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_peer_peer_proto_rawDescGZIP(), []int{0}
}

func (x *PeerInfo) GetNetworkAddress() string {
	if x != nil {
		return x.NetworkAddress
	}
	return ""
}

func (x *PeerInfo) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *PeerInfo) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

var File_eigenlayer_hourglass_v1_peer_peer_proto protoreflect.FileDescriptor

const file_eigenlayer_hourglass_v1_peer_peer_proto_rawDesc = "" +
	"\n" +
	"'eigenlayer/hourglass/v1/peer/peer.proto\x12\x1ceigenlayer.hourglass.v1.peer\"f\n" +
	"\bPeerInfo\x12'\n" +
	"\x0fnetwork_address\x18\x01 \x01(\tR\x0enetworkAddress\x12\x12\n" +
	"\x04port\x18\x02 \x01(\rR\x04port\x12\x1d\n" +
	"\n" +
	"public_key\x18\x03 \x01(\tR\tpublicKeyB\x98\x02\n" +
	" com.eigenlayer.hourglass.v1.peerB\tPeerProtoP\x01ZUgithub.com/Layr-Labs/hourglass-monorepo/ponos/gen/protos/eigenlayer/hourglass/v1/peer\xa2\x02\x04EHVP\xaa\x02\x1cEigenlayer.Hourglass.V1.Peer\xca\x02\x1cEigenlayer\\Hourglass\\V1\\Peer\xe2\x02(Eigenlayer\\Hourglass\\V1\\Peer\\GPBMetadata\xea\x02\x1fEigenlayer::Hourglass::V1::Peerb\x06proto3"

var (
	file_eigenlayer_hourglass_v1_peer_peer_proto_rawDescOnce sync.Once
	file_eigenlayer_hourglass_v1_peer_peer_proto_rawDescData []byte
)

func file_eigenlayer_hourglass_v1_peer_peer_proto_rawDescGZIP() []byte {
	file_eigenlayer_hourglass_v1_peer_peer_proto_rawDescOnce.Do(func() {
		file_eigenlayer_hourglass_v1_peer_peer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_eigenlayer_hourglass_v1_peer_peer_proto_rawDesc), len(file_eigenlayer_hourglass_v1_peer_peer_proto_rawDesc)))
	})
	return file_eigenlayer_hourglass_v1_peer_peer_proto_rawDescData
}

var file_eigenlayer_hourglass_v1_peer_peer_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_eigenlayer_hourglass_v1_peer_peer_proto_goTypes = []any{
	(*PeerInfo)(nil), // 0: eigenlayer.hourglass.v1.peer.PeerInfo
}
var file_eigenlayer_hourglass_v1_peer_peer_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_eigenlayer_hourglass_v1_peer_peer_proto_init() }
func file_eigenlayer_hourglass_v1_peer_peer_proto_init() {
	if File_eigenlayer_hourglass_v1_peer_peer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_eigenlayer_hourglass_v1_peer_peer_proto_rawDesc), len(file_eigenlayer_hourglass_v1_peer_peer_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_eigenlayer_hourglass_v1_peer_peer_proto_goTypes,
		DependencyIndexes: file_eigenlayer_hourglass_v1_peer_peer_proto_depIdxs,
		MessageInfos:      file_eigenlayer_hourglass_v1_peer_peer_proto_msgTypes,
	}.Build()
	File_eigenlayer_hourglass_v1_peer_peer_proto = out.File
	file_eigenlayer_hourglass_v1_peer_peer_proto_goTypes = nil
	file_eigenlayer_hourglass_v1_peer_peer_proto_depIdxs = nil
}
