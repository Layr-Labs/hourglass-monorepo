// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: eigenlayer/hourglass/v1/executor/executor.proto

package executor

import (
	common "github.com/Layr-Labs/hourglass-monorepo/ponos/gen/protos/eigenlayer/hourglass/v1/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TaskSubmission is the message used to submit a task to the executor from the aggregator
type TaskSubmission struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	TaskId             string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	AggregatorAddress  string                 `protobuf:"bytes,2,opt,name=aggregator_address,json=aggregatorAddress,proto3" json:"aggregator_address,omitempty"`
	AvsAddress         string                 `protobuf:"bytes,3,opt,name=avs_address,json=avsAddress,proto3" json:"avs_address,omitempty"`
	Payload            []byte                 `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	Signature          []byte                 `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"`
	OperatorSetId      uint32                 `protobuf:"varint,6,opt,name=operator_set_id,json=operatorSetId,proto3" json:"operator_set_id,omitempty"`
	ReferenceTimestamp uint32                 `protobuf:"varint,7,opt,name=reference_timestamp,json=referenceTimestamp,proto3" json:"reference_timestamp,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *TaskSubmission) Reset() {
	*x = TaskSubmission{}
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskSubmission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskSubmission) ProtoMessage() {}

func (x *TaskSubmission) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskSubmission.ProtoReflect.Descriptor instead.
func (*TaskSubmission) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescGZIP(), []int{0}
}

func (x *TaskSubmission) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskSubmission) GetAggregatorAddress() string {
	if x != nil {
		return x.AggregatorAddress
	}
	return ""
}

func (x *TaskSubmission) GetAvsAddress() string {
	if x != nil {
		return x.AvsAddress
	}
	return ""
}

func (x *TaskSubmission) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *TaskSubmission) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *TaskSubmission) GetOperatorSetId() uint32 {
	if x != nil {
		return x.OperatorSetId
	}
	return 0
}

func (x *TaskSubmission) GetReferenceTimestamp() uint32 {
	if x != nil {
		return x.ReferenceTimestamp
	}
	return 0
}

type TaskResult struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TaskId          string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	OperatorAddress string                 `protobuf:"bytes,2,opt,name=operator_address,json=operatorAddress,proto3" json:"operator_address,omitempty"`
	Output          []byte                 `protobuf:"bytes,3,opt,name=output,proto3" json:"output,omitempty"`
	Signature       []byte                 `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	AvsAddress      string                 `protobuf:"bytes,5,opt,name=avs_address,json=avsAddress,proto3" json:"avs_address,omitempty"`
	OperatorSetId   uint32                 `protobuf:"varint,6,opt,name=operator_set_id,json=operatorSetId,proto3" json:"operator_set_id,omitempty"`
	OutputDigest    []byte                 `protobuf:"bytes,7,opt,name=output_digest,json=outputDigest,proto3" json:"output_digest,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TaskResult) Reset() {
	*x = TaskResult{}
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResult) ProtoMessage() {}

func (x *TaskResult) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResult.ProtoReflect.Descriptor instead.
func (*TaskResult) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescGZIP(), []int{1}
}

func (x *TaskResult) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskResult) GetOperatorAddress() string {
	if x != nil {
		return x.OperatorAddress
	}
	return ""
}

func (x *TaskResult) GetOutput() []byte {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *TaskResult) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *TaskResult) GetAvsAddress() string {
	if x != nil {
		return x.AvsAddress
	}
	return ""
}

func (x *TaskResult) GetOperatorSetId() uint32 {
	if x != nil {
		return x.OperatorSetId
	}
	return 0
}

func (x *TaskResult) GetOutputDigest() []byte {
	if x != nil {
		return x.OutputDigest
	}
	return nil
}

// KubernetesConfig contains Kubernetes-specific configuration for a performer
type KubernetesConfig struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ServiceAccountName string                 `protobuf:"bytes,1,opt,name=service_account_name,json=serviceAccountName,proto3" json:"service_account_name,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *KubernetesConfig) Reset() {
	*x = KubernetesConfig{}
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KubernetesConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesConfig) ProtoMessage() {}

func (x *KubernetesConfig) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesConfig.ProtoReflect.Descriptor instead.
func (*KubernetesConfig) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescGZIP(), []int{2}
}

func (x *KubernetesConfig) GetServiceAccountName() string {
	if x != nil {
		return x.ServiceAccountName
	}
	return ""
}

// DeployArtifactRequest is the message used to deploy a new artifact to an AVS performer
type DeployArtifactRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AvsAddress    string                 `protobuf:"bytes,1,opt,name=avs_address,json=avsAddress,proto3" json:"avs_address,omitempty"`
	Digest        string                 `protobuf:"bytes,2,opt,name=digest,proto3" json:"digest,omitempty"`
	RegistryUrl   string                 `protobuf:"bytes,3,opt,name=registry_url,json=registryUrl,proto3" json:"registry_url,omitempty"`
	Env           []*PerformerEnv        `protobuf:"bytes,4,rep,name=env,proto3" json:"env,omitempty"`
	Kubernetes    *KubernetesConfig      `protobuf:"bytes,5,opt,name=kubernetes,proto3" json:"kubernetes,omitempty"`
	Auth          *common.AuthSignature  `protobuf:"bytes,6,opt,name=auth,proto3" json:"auth,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeployArtifactRequest) Reset() {
	*x = DeployArtifactRequest{}
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeployArtifactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployArtifactRequest) ProtoMessage() {}

func (x *DeployArtifactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployArtifactRequest.ProtoReflect.Descriptor instead.
func (*DeployArtifactRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescGZIP(), []int{3}
}

func (x *DeployArtifactRequest) GetAvsAddress() string {
	if x != nil {
		return x.AvsAddress
	}
	return ""
}

func (x *DeployArtifactRequest) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

func (x *DeployArtifactRequest) GetRegistryUrl() string {
	if x != nil {
		return x.RegistryUrl
	}
	return ""
}

func (x *DeployArtifactRequest) GetEnv() []*PerformerEnv {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *DeployArtifactRequest) GetKubernetes() *KubernetesConfig {
	if x != nil {
		return x.Kubernetes
	}
	return nil
}

func (x *DeployArtifactRequest) GetAuth() *common.AuthSignature {
	if x != nil {
		return x.Auth
	}
	return nil
}

type DeployArtifactResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	DeploymentId  string                 `protobuf:"bytes,3,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeployArtifactResponse) Reset() {
	*x = DeployArtifactResponse{}
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeployArtifactResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployArtifactResponse) ProtoMessage() {}

func (x *DeployArtifactResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployArtifactResponse.ProtoReflect.Descriptor instead.
func (*DeployArtifactResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescGZIP(), []int{4}
}

func (x *DeployArtifactResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeployArtifactResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeployArtifactResponse) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

// ListPerformersRequest is the message used to list all performers
type ListPerformersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional: filter by AVS address
	AvsAddress    string                `protobuf:"bytes,1,opt,name=avs_address,json=avsAddress,proto3" json:"avs_address,omitempty"`
	Auth          *common.AuthSignature `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPerformersRequest) Reset() {
	*x = ListPerformersRequest{}
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPerformersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPerformersRequest) ProtoMessage() {}

func (x *ListPerformersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPerformersRequest.ProtoReflect.Descriptor instead.
func (*ListPerformersRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescGZIP(), []int{5}
}

func (x *ListPerformersRequest) GetAvsAddress() string {
	if x != nil {
		return x.AvsAddress
	}
	return ""
}

func (x *ListPerformersRequest) GetAuth() *common.AuthSignature {
	if x != nil {
		return x.Auth
	}
	return nil
}

type PerformerEnv struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	ValueFromEnv  string                 `protobuf:"bytes,3,opt,name=value_from_env,json=valueFromEnv,proto3" json:"value_from_env,omitempty"`
	KubernetesEnv *KubernetesEnv         `protobuf:"bytes,4,opt,name=kubernetes_env,json=kubernetesEnv,proto3" json:"kubernetes_env,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PerformerEnv) Reset() {
	*x = PerformerEnv{}
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PerformerEnv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerformerEnv) ProtoMessage() {}

func (x *PerformerEnv) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerformerEnv.ProtoReflect.Descriptor instead.
func (*PerformerEnv) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescGZIP(), []int{6}
}

func (x *PerformerEnv) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PerformerEnv) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *PerformerEnv) GetValueFromEnv() string {
	if x != nil {
		return x.ValueFromEnv
	}
	return ""
}

func (x *PerformerEnv) GetKubernetesEnv() *KubernetesEnv {
	if x != nil {
		return x.KubernetesEnv
	}
	return nil
}

// KubernetesEnv represents a Kubernetes environment variable source
type KubernetesEnv struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ValueFrom     *EnvValueFrom          `protobuf:"bytes,1,opt,name=value_from,json=valueFrom,proto3" json:"value_from,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KubernetesEnv) Reset() {
	*x = KubernetesEnv{}
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KubernetesEnv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesEnv) ProtoMessage() {}

func (x *KubernetesEnv) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesEnv.ProtoReflect.Descriptor instead.
func (*KubernetesEnv) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescGZIP(), []int{7}
}

func (x *KubernetesEnv) GetValueFrom() *EnvValueFrom {
	if x != nil {
		return x.ValueFrom
	}
	return nil
}

// EnvValueFrom represents a source for the value of an environment variable
type EnvValueFrom struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SecretKeyRef    *SecretKeyRef          `protobuf:"bytes,1,opt,name=secret_key_ref,json=secretKeyRef,proto3" json:"secret_key_ref,omitempty"`
	ConfigMapKeyRef *ConfigMapKeyRef       `protobuf:"bytes,2,opt,name=config_map_key_ref,json=configMapKeyRef,proto3" json:"config_map_key_ref,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *EnvValueFrom) Reset() {
	*x = EnvValueFrom{}
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnvValueFrom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvValueFrom) ProtoMessage() {}

func (x *EnvValueFrom) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvValueFrom.ProtoReflect.Descriptor instead.
func (*EnvValueFrom) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescGZIP(), []int{8}
}

func (x *EnvValueFrom) GetSecretKeyRef() *SecretKeyRef {
	if x != nil {
		return x.SecretKeyRef
	}
	return nil
}

func (x *EnvValueFrom) GetConfigMapKeyRef() *ConfigMapKeyRef {
	if x != nil {
		return x.ConfigMapKeyRef
	}
	return nil
}

// SecretKeyRef selects a key of a secret in the pod's namespace
type SecretKeyRef struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Key           string                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SecretKeyRef) Reset() {
	*x = SecretKeyRef{}
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecretKeyRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretKeyRef) ProtoMessage() {}

func (x *SecretKeyRef) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretKeyRef.ProtoReflect.Descriptor instead.
func (*SecretKeyRef) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescGZIP(), []int{9}
}

func (x *SecretKeyRef) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SecretKeyRef) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// ConfigMapKeyRef selects a key of a config map in the pod's namespace
type ConfigMapKeyRef struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Key           string                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigMapKeyRef) Reset() {
	*x = ConfigMapKeyRef{}
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigMapKeyRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigMapKeyRef) ProtoMessage() {}

func (x *ConfigMapKeyRef) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigMapKeyRef.ProtoReflect.Descriptor instead.
func (*ConfigMapKeyRef) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescGZIP(), []int{10}
}

func (x *ConfigMapKeyRef) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConfigMapKeyRef) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// Performer contains information about a single performer
type Performer struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	PerformerId        string                 `protobuf:"bytes,1,opt,name=performer_id,json=performerId,proto3" json:"performer_id,omitempty"`
	AvsAddress         string                 `protobuf:"bytes,2,opt,name=avs_address,json=avsAddress,proto3" json:"avs_address,omitempty"`
	Status             string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	ArtifactRegistry   string                 `protobuf:"bytes,4,opt,name=artifact_registry,json=artifactRegistry,proto3" json:"artifact_registry,omitempty"`
	ArtifactDigest     string                 `protobuf:"bytes,5,opt,name=artifact_digest,json=artifactDigest,proto3" json:"artifact_digest,omitempty"`
	ResourceHealthy    bool                   `protobuf:"varint,6,opt,name=resource_healthy,json=resourceHealthy,proto3" json:"resource_healthy,omitempty"`
	ApplicationHealthy bool                   `protobuf:"varint,7,opt,name=application_healthy,json=applicationHealthy,proto3" json:"application_healthy,omitempty"`
	LastHealthCheck    string                 `protobuf:"bytes,8,opt,name=last_health_check,json=lastHealthCheck,proto3" json:"last_health_check,omitempty"`
	ContainerId        string                 `protobuf:"bytes,9,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	ArtifactTag        string                 `protobuf:"bytes,10,opt,name=artifact_tag,json=artifactTag,proto3" json:"artifact_tag,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Performer) Reset() {
	*x = Performer{}
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Performer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Performer) ProtoMessage() {}

func (x *Performer) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Performer.ProtoReflect.Descriptor instead.
func (*Performer) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescGZIP(), []int{11}
}

func (x *Performer) GetPerformerId() string {
	if x != nil {
		return x.PerformerId
	}
	return ""
}

func (x *Performer) GetAvsAddress() string {
	if x != nil {
		return x.AvsAddress
	}
	return ""
}

func (x *Performer) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Performer) GetArtifactRegistry() string {
	if x != nil {
		return x.ArtifactRegistry
	}
	return ""
}

func (x *Performer) GetArtifactDigest() string {
	if x != nil {
		return x.ArtifactDigest
	}
	return ""
}

func (x *Performer) GetResourceHealthy() bool {
	if x != nil {
		return x.ResourceHealthy
	}
	return false
}

func (x *Performer) GetApplicationHealthy() bool {
	if x != nil {
		return x.ApplicationHealthy
	}
	return false
}

func (x *Performer) GetLastHealthCheck() string {
	if x != nil {
		return x.LastHealthCheck
	}
	return ""
}

func (x *Performer) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *Performer) GetArtifactTag() string {
	if x != nil {
		return x.ArtifactTag
	}
	return ""
}

// ListPerformersResponse contains the list of all performers
type ListPerformersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Performers    []*Performer           `protobuf:"bytes,1,rep,name=performers,proto3" json:"performers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPerformersResponse) Reset() {
	*x = ListPerformersResponse{}
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPerformersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPerformersResponse) ProtoMessage() {}

func (x *ListPerformersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPerformersResponse.ProtoReflect.Descriptor instead.
func (*ListPerformersResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescGZIP(), []int{12}
}

func (x *ListPerformersResponse) GetPerformers() []*Performer {
	if x != nil {
		return x.Performers
	}
	return nil
}

// RemovePerformerRequest is the message used to remove a performer
type RemovePerformerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PerformerId   string                 `protobuf:"bytes,1,opt,name=performer_id,json=performerId,proto3" json:"performer_id,omitempty"`
	Auth          *common.AuthSignature  `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemovePerformerRequest) Reset() {
	*x = RemovePerformerRequest{}
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemovePerformerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePerformerRequest) ProtoMessage() {}

func (x *RemovePerformerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePerformerRequest.ProtoReflect.Descriptor instead.
func (*RemovePerformerRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescGZIP(), []int{13}
}

func (x *RemovePerformerRequest) GetPerformerId() string {
	if x != nil {
		return x.PerformerId
	}
	return ""
}

func (x *RemovePerformerRequest) GetAuth() *common.AuthSignature {
	if x != nil {
		return x.Auth
	}
	return nil
}

// RemovePerformerResponse contains the result of performer removal
type RemovePerformerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemovePerformerResponse) Reset() {
	*x = RemovePerformerResponse{}
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemovePerformerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePerformerResponse) ProtoMessage() {}

func (x *RemovePerformerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePerformerResponse.ProtoReflect.Descriptor instead.
func (*RemovePerformerResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescGZIP(), []int{14}
}

func (x *RemovePerformerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RemovePerformerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// GetChallengeTokenRequest is used to request a challenge token for authentication
type GetChallengeTokenRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	OperatorAddress string                 `protobuf:"bytes,1,opt,name=operator_address,json=operatorAddress,proto3" json:"operator_address,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetChallengeTokenRequest) Reset() {
	*x = GetChallengeTokenRequest{}
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChallengeTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChallengeTokenRequest) ProtoMessage() {}

func (x *GetChallengeTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChallengeTokenRequest.ProtoReflect.Descriptor instead.
func (*GetChallengeTokenRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescGZIP(), []int{15}
}

func (x *GetChallengeTokenRequest) GetOperatorAddress() string {
	if x != nil {
		return x.OperatorAddress
	}
	return ""
}

// GetChallengeTokenResponse returns a challenge token for authentication
type GetChallengeTokenResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ChallengeToken string                 `protobuf:"bytes,1,opt,name=challenge_token,json=challengeToken,proto3" json:"challenge_token,omitempty"`
	ExpiresAt      int64                  `protobuf:"varint,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"` // Unix timestamp when token expires
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetChallengeTokenResponse) Reset() {
	*x = GetChallengeTokenResponse{}
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChallengeTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChallengeTokenResponse) ProtoMessage() {}

func (x *GetChallengeTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChallengeTokenResponse.ProtoReflect.Descriptor instead.
func (*GetChallengeTokenResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescGZIP(), []int{16}
}

func (x *GetChallengeTokenResponse) GetChallengeToken() string {
	if x != nil {
		return x.ChallengeToken
	}
	return ""
}

func (x *GetChallengeTokenResponse) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

var File_eigenlayer_hourglass_v1_executor_executor_proto protoreflect.FileDescriptor

const file_eigenlayer_hourglass_v1_executor_executor_proto_rawDesc = "" +
	"\n" +
	"/eigenlayer/hourglass/v1/executor/executor.proto\x12\x17eigenlayer.hourglass.v1\x1a)eigenlayer/hourglass/v1/common/auth.proto\"\x8a\x02\n" +
	"\x0eTaskSubmission\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12-\n" +
	"\x12aggregator_address\x18\x02 \x01(\tR\x11aggregatorAddress\x12\x1f\n" +
	"\vavs_address\x18\x03 \x01(\tR\n" +
	"avsAddress\x12\x18\n" +
	"\apayload\x18\x04 \x01(\fR\apayload\x12\x1c\n" +
	"\tsignature\x18\x05 \x01(\fR\tsignature\x12&\n" +
	"\x0foperator_set_id\x18\x06 \x01(\rR\roperatorSetId\x12/\n" +
	"\x13reference_timestamp\x18\a \x01(\rR\x12referenceTimestamp\"\xf4\x01\n" +
	"\n" +
	"TaskResult\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12)\n" +
	"\x10operator_address\x18\x02 \x01(\tR\x0foperatorAddress\x12\x16\n" +
	"\x06output\x18\x03 \x01(\fR\x06output\x12\x1c\n" +
	"\tsignature\x18\x04 \x01(\fR\tsignature\x12\x1f\n" +
	"\vavs_address\x18\x05 \x01(\tR\n" +
	"avsAddress\x12&\n" +
	"\x0foperator_set_id\x18\x06 \x01(\rR\roperatorSetId\x12#\n" +
	"\routput_digest\x18\a \x01(\fR\foutputDigest\"D\n" +
	"\x10KubernetesConfig\x120\n" +
	"\x14service_account_name\x18\x01 \x01(\tR\x12serviceAccountName\"\xba\x02\n" +
	"\x15DeployArtifactRequest\x12\x1f\n" +
	"\vavs_address\x18\x01 \x01(\tR\n" +
	"avsAddress\x12\x16\n" +
	"\x06digest\x18\x02 \x01(\tR\x06digest\x12!\n" +
	"\fregistry_url\x18\x03 \x01(\tR\vregistryUrl\x127\n" +
	"\x03env\x18\x04 \x03(\v2%.eigenlayer.hourglass.v1.PerformerEnvR\x03env\x12I\n" +
	"\n" +
	"kubernetes\x18\x05 \x01(\v2).eigenlayer.hourglass.v1.KubernetesConfigR\n" +
	"kubernetes\x12A\n" +
	"\x04auth\x18\x06 \x01(\v2-.eigenlayer.hourglass.v1.common.AuthSignatureR\x04auth\"q\n" +
	"\x16DeployArtifactResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12#\n" +
	"\rdeployment_id\x18\x03 \x01(\tR\fdeploymentId\"{\n" +
	"\x15ListPerformersRequest\x12\x1f\n" +
	"\vavs_address\x18\x01 \x01(\tR\n" +
	"avsAddress\x12A\n" +
	"\x04auth\x18\x02 \x01(\v2-.eigenlayer.hourglass.v1.common.AuthSignatureR\x04auth\"\xad\x01\n" +
	"\fPerformerEnv\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\x12$\n" +
	"\x0evalue_from_env\x18\x03 \x01(\tR\fvalueFromEnv\x12M\n" +
	"\x0ekubernetes_env\x18\x04 \x01(\v2&.eigenlayer.hourglass.v1.KubernetesEnvR\rkubernetesEnv\"U\n" +
	"\rKubernetesEnv\x12D\n" +
	"\n" +
	"value_from\x18\x01 \x01(\v2%.eigenlayer.hourglass.v1.EnvValueFromR\tvalueFrom\"\xb2\x01\n" +
	"\fEnvValueFrom\x12K\n" +
	"\x0esecret_key_ref\x18\x01 \x01(\v2%.eigenlayer.hourglass.v1.SecretKeyRefR\fsecretKeyRef\x12U\n" +
	"\x12config_map_key_ref\x18\x02 \x01(\v2(.eigenlayer.hourglass.v1.ConfigMapKeyRefR\x0fconfigMapKeyRef\"4\n" +
	"\fSecretKeyRef\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x10\n" +
	"\x03key\x18\x02 \x01(\tR\x03key\"7\n" +
	"\x0fConfigMapKeyRef\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x10\n" +
	"\x03key\x18\x02 \x01(\tR\x03key\"\x8b\x03\n" +
	"\tPerformer\x12!\n" +
	"\fperformer_id\x18\x01 \x01(\tR\vperformerId\x12\x1f\n" +
	"\vavs_address\x18\x02 \x01(\tR\n" +
	"avsAddress\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12+\n" +
	"\x11artifact_registry\x18\x04 \x01(\tR\x10artifactRegistry\x12'\n" +
	"\x0fartifact_digest\x18\x05 \x01(\tR\x0eartifactDigest\x12)\n" +
	"\x10resource_healthy\x18\x06 \x01(\bR\x0fresourceHealthy\x12/\n" +
	"\x13application_healthy\x18\a \x01(\bR\x12applicationHealthy\x12*\n" +
	"\x11last_health_check\x18\b \x01(\tR\x0flastHealthCheck\x12!\n" +
	"\fcontainer_id\x18\t \x01(\tR\vcontainerId\x12!\n" +
	"\fartifact_tag\x18\n" +
	" \x01(\tR\vartifactTag\"\\\n" +
	"\x16ListPerformersResponse\x12B\n" +
	"\n" +
	"performers\x18\x01 \x03(\v2\".eigenlayer.hourglass.v1.PerformerR\n" +
	"performers\"~\n" +
	"\x16RemovePerformerRequest\x12!\n" +
	"\fperformer_id\x18\x01 \x01(\tR\vperformerId\x12A\n" +
	"\x04auth\x18\x02 \x01(\v2-.eigenlayer.hourglass.v1.common.AuthSignatureR\x04auth\"M\n" +
	"\x17RemovePerformerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"E\n" +
	"\x18GetChallengeTokenRequest\x12)\n" +
	"\x10operator_address\x18\x01 \x01(\tR\x0foperatorAddress\"c\n" +
	"\x19GetChallengeTokenResponse\x12'\n" +
	"\x0fchallenge_token\x18\x01 \x01(\tR\x0echallengeToken\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x02 \x01(\x03R\texpiresAt2o\n" +
	"\x0fExecutorService\x12\\\n" +
	"\n" +
	"SubmitTask\x12'.eigenlayer.hourglass.v1.TaskSubmission\x1a#.eigenlayer.hourglass.v1.TaskResult\"\x002\xfb\x03\n" +
	"\x19ExecutorManagementService\x12s\n" +
	"\x0eDeployArtifact\x12..eigenlayer.hourglass.v1.DeployArtifactRequest\x1a/.eigenlayer.hourglass.v1.DeployArtifactResponse\"\x00\x12s\n" +
	"\x0eListPerformers\x12..eigenlayer.hourglass.v1.ListPerformersRequest\x1a/.eigenlayer.hourglass.v1.ListPerformersResponse\"\x00\x12v\n" +
	"\x0fRemovePerformer\x12/.eigenlayer.hourglass.v1.RemovePerformerRequest\x1a0.eigenlayer.hourglass.v1.RemovePerformerResponse\"\x00\x12|\n" +
	"\x11GetChallengeToken\x121.eigenlayer.hourglass.v1.GetChallengeTokenRequest\x1a2.eigenlayer.hourglass.v1.GetChallengeTokenResponse\"\x00B\x85\x02\n" +
	"\x1bcom.eigenlayer.hourglass.v1B\rExecutorProtoP\x01ZYgithub.com/Layr-Labs/hourglass-monorepo/ponos/gen/protos/eigenlayer/hourglass/v1/executor\xa2\x02\x03EHX\xaa\x02\x17Eigenlayer.Hourglass.V1\xca\x02\x17Eigenlayer\\Hourglass\\V1\xe2\x02#Eigenlayer\\Hourglass\\V1\\GPBMetadata\xea\x02\x19Eigenlayer::Hourglass::V1b\x06proto3"

var (
	file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescOnce sync.Once
	file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescData []byte
)

func file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescGZIP() []byte {
	file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescOnce.Do(func() {
		file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_eigenlayer_hourglass_v1_executor_executor_proto_rawDesc), len(file_eigenlayer_hourglass_v1_executor_executor_proto_rawDesc)))
	})
	return file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescData
}

var file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_eigenlayer_hourglass_v1_executor_executor_proto_goTypes = []any{
	(*TaskSubmission)(nil),            // 0: eigenlayer.hourglass.v1.TaskSubmission
	(*TaskResult)(nil),                // 1: eigenlayer.hourglass.v1.TaskResult
	(*KubernetesConfig)(nil),          // 2: eigenlayer.hourglass.v1.KubernetesConfig
	(*DeployArtifactRequest)(nil),     // 3: eigenlayer.hourglass.v1.DeployArtifactRequest
	(*DeployArtifactResponse)(nil),    // 4: eigenlayer.hourglass.v1.DeployArtifactResponse
	(*ListPerformersRequest)(nil),     // 5: eigenlayer.hourglass.v1.ListPerformersRequest
	(*PerformerEnv)(nil),              // 6: eigenlayer.hourglass.v1.PerformerEnv
	(*KubernetesEnv)(nil),             // 7: eigenlayer.hourglass.v1.KubernetesEnv
	(*EnvValueFrom)(nil),              // 8: eigenlayer.hourglass.v1.EnvValueFrom
	(*SecretKeyRef)(nil),              // 9: eigenlayer.hourglass.v1.SecretKeyRef
	(*ConfigMapKeyRef)(nil),           // 10: eigenlayer.hourglass.v1.ConfigMapKeyRef
	(*Performer)(nil),                 // 11: eigenlayer.hourglass.v1.Performer
	(*ListPerformersResponse)(nil),    // 12: eigenlayer.hourglass.v1.ListPerformersResponse
	(*RemovePerformerRequest)(nil),    // 13: eigenlayer.hourglass.v1.RemovePerformerRequest
	(*RemovePerformerResponse)(nil),   // 14: eigenlayer.hourglass.v1.RemovePerformerResponse
	(*GetChallengeTokenRequest)(nil),  // 15: eigenlayer.hourglass.v1.GetChallengeTokenRequest
	(*GetChallengeTokenResponse)(nil), // 16: eigenlayer.hourglass.v1.GetChallengeTokenResponse
	(*common.AuthSignature)(nil),      // 17: eigenlayer.hourglass.v1.common.AuthSignature
}
var file_eigenlayer_hourglass_v1_executor_executor_proto_depIdxs = []int32{
	6,  // 0: eigenlayer.hourglass.v1.DeployArtifactRequest.env:type_name -> eigenlayer.hourglass.v1.PerformerEnv
	2,  // 1: eigenlayer.hourglass.v1.DeployArtifactRequest.kubernetes:type_name -> eigenlayer.hourglass.v1.KubernetesConfig
	17, // 2: eigenlayer.hourglass.v1.DeployArtifactRequest.auth:type_name -> eigenlayer.hourglass.v1.common.AuthSignature
	17, // 3: eigenlayer.hourglass.v1.ListPerformersRequest.auth:type_name -> eigenlayer.hourglass.v1.common.AuthSignature
	7,  // 4: eigenlayer.hourglass.v1.PerformerEnv.kubernetes_env:type_name -> eigenlayer.hourglass.v1.KubernetesEnv
	8,  // 5: eigenlayer.hourglass.v1.KubernetesEnv.value_from:type_name -> eigenlayer.hourglass.v1.EnvValueFrom
	9,  // 6: eigenlayer.hourglass.v1.EnvValueFrom.secret_key_ref:type_name -> eigenlayer.hourglass.v1.SecretKeyRef
	10, // 7: eigenlayer.hourglass.v1.EnvValueFrom.config_map_key_ref:type_name -> eigenlayer.hourglass.v1.ConfigMapKeyRef
	11, // 8: eigenlayer.hourglass.v1.ListPerformersResponse.performers:type_name -> eigenlayer.hourglass.v1.Performer
	17, // 9: eigenlayer.hourglass.v1.RemovePerformerRequest.auth:type_name -> eigenlayer.hourglass.v1.common.AuthSignature
	0,  // 10: eigenlayer.hourglass.v1.ExecutorService.SubmitTask:input_type -> eigenlayer.hourglass.v1.TaskSubmission
	3,  // 11: eigenlayer.hourglass.v1.ExecutorManagementService.DeployArtifact:input_type -> eigenlayer.hourglass.v1.DeployArtifactRequest
	5,  // 12: eigenlayer.hourglass.v1.ExecutorManagementService.ListPerformers:input_type -> eigenlayer.hourglass.v1.ListPerformersRequest
	13, // 13: eigenlayer.hourglass.v1.ExecutorManagementService.RemovePerformer:input_type -> eigenlayer.hourglass.v1.RemovePerformerRequest
	15, // 14: eigenlayer.hourglass.v1.ExecutorManagementService.GetChallengeToken:input_type -> eigenlayer.hourglass.v1.GetChallengeTokenRequest
	1,  // 15: eigenlayer.hourglass.v1.ExecutorService.SubmitTask:output_type -> eigenlayer.hourglass.v1.TaskResult
	4,  // 16: eigenlayer.hourglass.v1.ExecutorManagementService.DeployArtifact:output_type -> eigenlayer.hourglass.v1.DeployArtifactResponse
	12, // 17: eigenlayer.hourglass.v1.ExecutorManagementService.ListPerformers:output_type -> eigenlayer.hourglass.v1.ListPerformersResponse
	14, // 18: eigenlayer.hourglass.v1.ExecutorManagementService.RemovePerformer:output_type -> eigenlayer.hourglass.v1.RemovePerformerResponse
	16, // 19: eigenlayer.hourglass.v1.ExecutorManagementService.GetChallengeToken:output_type -> eigenlayer.hourglass.v1.GetChallengeTokenResponse
	15, // [15:20] is the sub-list for method output_type
	10, // [10:15] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_eigenlayer_hourglass_v1_executor_executor_proto_init() }
func file_eigenlayer_hourglass_v1_executor_executor_proto_init() {
	if File_eigenlayer_hourglass_v1_executor_executor_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_eigenlayer_hourglass_v1_executor_executor_proto_rawDesc), len(file_eigenlayer_hourglass_v1_executor_executor_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_eigenlayer_hourglass_v1_executor_executor_proto_goTypes,
		DependencyIndexes: file_eigenlayer_hourglass_v1_executor_executor_proto_depIdxs,
		MessageInfos:      file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes,
	}.Build()
	File_eigenlayer_hourglass_v1_executor_executor_proto = out.File
	file_eigenlayer_hourglass_v1_executor_executor_proto_goTypes = nil
	file_eigenlayer_hourglass_v1_executor_executor_proto_depIdxs = nil
}
