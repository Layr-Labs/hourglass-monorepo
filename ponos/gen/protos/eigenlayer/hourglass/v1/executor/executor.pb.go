// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: eigenlayer/hourglass/v1/executor/executor.proto

package executor

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TaskSubmission is the message used to submit a task to the executor from the aggregator
type TaskSubmission struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	TaskId            string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	AggregatorAddress string                 `protobuf:"bytes,2,opt,name=aggregator_address,json=aggregatorAddress,proto3" json:"aggregator_address,omitempty"`
	AvsAddress        string                 `protobuf:"bytes,3,opt,name=avs_address,json=avsAddress,proto3" json:"avs_address,omitempty"`
	Payload           []byte                 `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	Signature         []byte                 `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *TaskSubmission) Reset() {
	*x = TaskSubmission{}
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskSubmission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskSubmission) ProtoMessage() {}

func (x *TaskSubmission) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskSubmission.ProtoReflect.Descriptor instead.
func (*TaskSubmission) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescGZIP(), []int{0}
}

func (x *TaskSubmission) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskSubmission) GetAggregatorAddress() string {
	if x != nil {
		return x.AggregatorAddress
	}
	return ""
}

func (x *TaskSubmission) GetAvsAddress() string {
	if x != nil {
		return x.AvsAddress
	}
	return ""
}

func (x *TaskSubmission) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *TaskSubmission) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type TaskResult struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TaskId          string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	OperatorAddress string                 `protobuf:"bytes,2,opt,name=operator_address,json=operatorAddress,proto3" json:"operator_address,omitempty"`
	Output          []byte                 `protobuf:"bytes,3,opt,name=output,proto3" json:"output,omitempty"`
	Signature       []byte                 `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	AvsAddress      string                 `protobuf:"bytes,5,opt,name=avs_address,json=avsAddress,proto3" json:"avs_address,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TaskResult) Reset() {
	*x = TaskResult{}
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResult) ProtoMessage() {}

func (x *TaskResult) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResult.ProtoReflect.Descriptor instead.
func (*TaskResult) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescGZIP(), []int{1}
}

func (x *TaskResult) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskResult) GetOperatorAddress() string {
	if x != nil {
		return x.OperatorAddress
	}
	return ""
}

func (x *TaskResult) GetOutput() []byte {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *TaskResult) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *TaskResult) GetAvsAddress() string {
	if x != nil {
		return x.AvsAddress
	}
	return ""
}

// DeployArtifactRequest is the message used to deploy a new artifact to an AVS performer
type DeployArtifactRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AvsAddress    string                 `protobuf:"bytes,1,opt,name=avs_address,json=avsAddress,proto3" json:"avs_address,omitempty"`
	Digest        string                 `protobuf:"bytes,2,opt,name=digest,proto3" json:"digest,omitempty"`
	RegistryUrl   string                 `protobuf:"bytes,3,opt,name=registry_url,json=registryUrl,proto3" json:"registry_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeployArtifactRequest) Reset() {
	*x = DeployArtifactRequest{}
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeployArtifactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployArtifactRequest) ProtoMessage() {}

func (x *DeployArtifactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployArtifactRequest.ProtoReflect.Descriptor instead.
func (*DeployArtifactRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescGZIP(), []int{2}
}

func (x *DeployArtifactRequest) GetAvsAddress() string {
	if x != nil {
		return x.AvsAddress
	}
	return ""
}

func (x *DeployArtifactRequest) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

func (x *DeployArtifactRequest) GetRegistryUrl() string {
	if x != nil {
		return x.RegistryUrl
	}
	return ""
}

type DeployArtifactResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	DeploymentId  string                 `protobuf:"bytes,3,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeployArtifactResponse) Reset() {
	*x = DeployArtifactResponse{}
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeployArtifactResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployArtifactResponse) ProtoMessage() {}

func (x *DeployArtifactResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployArtifactResponse.ProtoReflect.Descriptor instead.
func (*DeployArtifactResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescGZIP(), []int{3}
}

func (x *DeployArtifactResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeployArtifactResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeployArtifactResponse) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

var File_eigenlayer_hourglass_v1_executor_executor_proto protoreflect.FileDescriptor

const file_eigenlayer_hourglass_v1_executor_executor_proto_rawDesc = "" +
	"\n" +
	"/eigenlayer/hourglass/v1/executor/executor.proto\x12\x17eigenlayer.hourglass.v1\"\xb1\x01\n" +
	"\x0eTaskSubmission\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12-\n" +
	"\x12aggregator_address\x18\x02 \x01(\tR\x11aggregatorAddress\x12\x1f\n" +
	"\vavs_address\x18\x03 \x01(\tR\n" +
	"avsAddress\x12\x18\n" +
	"\apayload\x18\x04 \x01(\fR\apayload\x12\x1c\n" +
	"\tsignature\x18\x05 \x01(\fR\tsignature\"\xa7\x01\n" +
	"\n" +
	"TaskResult\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12)\n" +
	"\x10operator_address\x18\x02 \x01(\tR\x0foperatorAddress\x12\x16\n" +
	"\x06output\x18\x03 \x01(\fR\x06output\x12\x1c\n" +
	"\tsignature\x18\x04 \x01(\fR\tsignature\x12\x1f\n" +
	"\vavs_address\x18\x05 \x01(\tR\n" +
	"avsAddress\"s\n" +
	"\x15DeployArtifactRequest\x12\x1f\n" +
	"\vavs_address\x18\x01 \x01(\tR\n" +
	"avsAddress\x12\x16\n" +
	"\x06digest\x18\x02 \x01(\tR\x06digest\x12!\n" +
	"\fregistry_url\x18\x03 \x01(\tR\vregistryUrl\"q\n" +
	"\x16DeployArtifactResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12#\n" +
	"\rdeployment_id\x18\x03 \x01(\tR\fdeploymentId2\xe4\x01\n" +
	"\x0fExecutorService\x12\\\n" +
	"\n" +
	"SubmitTask\x12'.eigenlayer.hourglass.v1.TaskSubmission\x1a#.eigenlayer.hourglass.v1.TaskResult\"\x00\x12s\n" +
	"\x0eDeployArtifact\x12..eigenlayer.hourglass.v1.DeployArtifactRequest\x1a/.eigenlayer.hourglass.v1.DeployArtifactResponse\"\x00B\x85\x02\n" +
	"\x1bcom.eigenlayer.hourglass.v1B\rExecutorProtoP\x01ZYgithub.com/Layr-Labs/hourglass-monorepo/ponos/gen/protos/eigenlayer/hourglass/v1/executor\xa2\x02\x03EHX\xaa\x02\x17Eigenlayer.Hourglass.V1\xca\x02\x17Eigenlayer\\Hourglass\\V1\xe2\x02#Eigenlayer\\Hourglass\\V1\\GPBMetadata\xea\x02\x19Eigenlayer::Hourglass::V1b\x06proto3"

var (
	file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescOnce sync.Once
	file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescData []byte
)

func file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescGZIP() []byte {
	file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescOnce.Do(func() {
		file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_eigenlayer_hourglass_v1_executor_executor_proto_rawDesc), len(file_eigenlayer_hourglass_v1_executor_executor_proto_rawDesc)))
	})
	return file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescData
}

var file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_eigenlayer_hourglass_v1_executor_executor_proto_goTypes = []any{
	(*TaskSubmission)(nil),         // 0: eigenlayer.hourglass.v1.TaskSubmission
	(*TaskResult)(nil),             // 1: eigenlayer.hourglass.v1.TaskResult
	(*DeployArtifactRequest)(nil),  // 2: eigenlayer.hourglass.v1.DeployArtifactRequest
	(*DeployArtifactResponse)(nil), // 3: eigenlayer.hourglass.v1.DeployArtifactResponse
}
var file_eigenlayer_hourglass_v1_executor_executor_proto_depIdxs = []int32{
	0, // 0: eigenlayer.hourglass.v1.ExecutorService.SubmitTask:input_type -> eigenlayer.hourglass.v1.TaskSubmission
	2, // 1: eigenlayer.hourglass.v1.ExecutorService.DeployArtifact:input_type -> eigenlayer.hourglass.v1.DeployArtifactRequest
	1, // 2: eigenlayer.hourglass.v1.ExecutorService.SubmitTask:output_type -> eigenlayer.hourglass.v1.TaskResult
	3, // 3: eigenlayer.hourglass.v1.ExecutorService.DeployArtifact:output_type -> eigenlayer.hourglass.v1.DeployArtifactResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_eigenlayer_hourglass_v1_executor_executor_proto_init() }
func file_eigenlayer_hourglass_v1_executor_executor_proto_init() {
	if File_eigenlayer_hourglass_v1_executor_executor_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_eigenlayer_hourglass_v1_executor_executor_proto_rawDesc), len(file_eigenlayer_hourglass_v1_executor_executor_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eigenlayer_hourglass_v1_executor_executor_proto_goTypes,
		DependencyIndexes: file_eigenlayer_hourglass_v1_executor_executor_proto_depIdxs,
		MessageInfos:      file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes,
	}.Build()
	File_eigenlayer_hourglass_v1_executor_executor_proto = out.File
	file_eigenlayer_hourglass_v1_executor_executor_proto_goTypes = nil
	file_eigenlayer_hourglass_v1_executor_executor_proto_depIdxs = nil
}
