// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: eigenlayer/hourglass/v1/executor/executor.proto

package executor

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HandshakeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AggregatorAddress          string `protobuf:"bytes,1,opt,name=aggregator_address,json=aggregatorAddress,proto3" json:"aggregator_address,omitempty"`                              // address of the aggregator so the operator knows who sent the message
	AvsAddress                 string `protobuf:"bytes,2,opt,name=avs_address,json=avsAddress,proto3" json:"avs_address,omitempty"`                                                   // address of the AVS so the aggregator knows who sent the message
	Nonce                      string `protobuf:"bytes,3,opt,name=nonce,proto3" json:"nonce,omitempty"`                                                                               // nonce, generated by the aggregator
	AggregatorNonceSig         []byte `protobuf:"bytes,4,opt,name=aggregator_nonce_sig,json=aggregatorNonceSig,proto3" json:"aggregator_nonce_sig,omitempty"`                         // nonce signed with the aggregator's key. used by the operator to verify identity of aggregator
	DestinationOperatorAddress string `protobuf:"bytes,5,opt,name=destination_operator_address,json=destinationOperatorAddress,proto3" json:"destination_operator_address,omitempty"` // address of operator the message is intended for (operator can self-check, more for debugging)
}

func (x *HandshakeRequest) Reset() {
	*x = HandshakeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandshakeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandshakeRequest) ProtoMessage() {}

func (x *HandshakeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandshakeRequest.ProtoReflect.Descriptor instead.
func (*HandshakeRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescGZIP(), []int{0}
}

func (x *HandshakeRequest) GetAggregatorAddress() string {
	if x != nil {
		return x.AggregatorAddress
	}
	return ""
}

func (x *HandshakeRequest) GetAvsAddress() string {
	if x != nil {
		return x.AvsAddress
	}
	return ""
}

func (x *HandshakeRequest) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

func (x *HandshakeRequest) GetAggregatorNonceSig() []byte {
	if x != nil {
		return x.AggregatorNonceSig
	}
	return nil
}

func (x *HandshakeRequest) GetDestinationOperatorAddress() string {
	if x != nil {
		return x.DestinationOperatorAddress
	}
	return ""
}

type HandshakeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorSignedNonce []byte `protobuf:"bytes,1,opt,name=operator_signed_nonce,json=operatorSignedNonce,proto3" json:"operator_signed_nonce,omitempty"` // nonce signed with the operator's key for the aggregator to validate
	AuthToken           string `protobuf:"bytes,2,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty"`
	AuthTokenSignature  []byte `protobuf:"bytes,3,opt,name=auth_token_signature,json=authTokenSignature,proto3" json:"auth_token_signature,omitempty"` // signature of the auth token signed with the operator's key to verify
}

func (x *HandshakeResponse) Reset() {
	*x = HandshakeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandshakeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandshakeResponse) ProtoMessage() {}

func (x *HandshakeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandshakeResponse.ProtoReflect.Descriptor instead.
func (*HandshakeResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescGZIP(), []int{1}
}

func (x *HandshakeResponse) GetOperatorSignedNonce() []byte {
	if x != nil {
		return x.OperatorSignedNonce
	}
	return nil
}

func (x *HandshakeResponse) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *HandshakeResponse) GetAuthTokenSignature() []byte {
	if x != nil {
		return x.AuthTokenSignature
	}
	return nil
}

type AuthenticateConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AggregatorAddress            string `protobuf:"bytes,1,opt,name=aggregator_address,json=aggregatorAddress,proto3" json:"aggregator_address,omitempty"`                                      // address of the aggregator that wants to connect
	OperatorSignedNonce          string `protobuf:"bytes,2,opt,name=operator_signed_nonce,json=operatorSignedNonce,proto3" json:"operator_signed_nonce,omitempty"`                              // the signed nonce the operator sent back in the handshake
	OperatorSignedNonceSignature string `protobuf:"bytes,3,opt,name=operator_signed_nonce_signature,json=operatorSignedNonceSignature,proto3" json:"operator_signed_nonce_signature,omitempty"` // signature of the operator_signed_nonce signed with aggregator key to verify
}

func (x *AuthenticateConnection) Reset() {
	*x = AuthenticateConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticateConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateConnection) ProtoMessage() {}

func (x *AuthenticateConnection) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateConnection.ProtoReflect.Descriptor instead.
func (*AuthenticateConnection) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescGZIP(), []int{2}
}

func (x *AuthenticateConnection) GetAggregatorAddress() string {
	if x != nil {
		return x.AggregatorAddress
	}
	return ""
}

func (x *AuthenticateConnection) GetOperatorSignedNonce() string {
	if x != nil {
		return x.OperatorSignedNonce
	}
	return ""
}

func (x *AuthenticateConnection) GetOperatorSignedNonceSignature() string {
	if x != nil {
		return x.OperatorSignedNonceSignature
	}
	return ""
}

type AuthenticateConnectionAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AuthenticateConnectionAck) Reset() {
	*x = AuthenticateConnectionAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticateConnectionAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateConnectionAck) ProtoMessage() {}

func (x *AuthenticateConnectionAck) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateConnectionAck.ProtoReflect.Descriptor instead.
func (*AuthenticateConnectionAck) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescGZIP(), []int{3}
}

type Ping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentTime uint64 `protobuf:"varint,1,opt,name=current_time,json=currentTime,proto3" json:"current_time,omitempty"`
}

func (x *Ping) Reset() {
	*x = Ping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ping) ProtoMessage() {}

func (x *Ping) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ping.ProtoReflect.Descriptor instead.
func (*Ping) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescGZIP(), []int{4}
}

func (x *Ping) GetCurrentTime() uint64 {
	if x != nil {
		return x.CurrentTime
	}
	return 0
}

type Pong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentTime uint64 `protobuf:"varint,1,opt,name=current_time,json=currentTime,proto3" json:"current_time,omitempty"`
}

func (x *Pong) Reset() {
	*x = Pong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pong) ProtoMessage() {}

func (x *Pong) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pong.ProtoReflect.Descriptor instead.
func (*Pong) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescGZIP(), []int{5}
}

func (x *Pong) GetCurrentTime() uint64 {
	if x != nil {
		return x.CurrentTime
	}
	return 0
}

type RequestPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//
	//	*RequestPayload_AuthenticateConnection
	//	*RequestPayload_Ping
	Payload isRequestPayload_Payload `protobuf_oneof:"payload"`
}

func (x *RequestPayload) Reset() {
	*x = RequestPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestPayload) ProtoMessage() {}

func (x *RequestPayload) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestPayload.ProtoReflect.Descriptor instead.
func (*RequestPayload) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescGZIP(), []int{6}
}

func (m *RequestPayload) GetPayload() isRequestPayload_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *RequestPayload) GetAuthenticateConnection() *AuthenticateConnection {
	if x, ok := x.GetPayload().(*RequestPayload_AuthenticateConnection); ok {
		return x.AuthenticateConnection
	}
	return nil
}

func (x *RequestPayload) GetPing() *Ping {
	if x, ok := x.GetPayload().(*RequestPayload_Ping); ok {
		return x.Ping
	}
	return nil
}

type isRequestPayload_Payload interface {
	isRequestPayload_Payload()
}

type RequestPayload_AuthenticateConnection struct {
	AuthenticateConnection *AuthenticateConnection `protobuf:"bytes,1,opt,name=authenticate_connection,json=authenticateConnection,proto3,oneof"`
}

type RequestPayload_Ping struct {
	Ping *Ping `protobuf:"bytes,2,opt,name=ping,proto3,oneof"`
}

func (*RequestPayload_AuthenticateConnection) isRequestPayload_Payload() {}

func (*RequestPayload_Ping) isRequestPayload_Payload() {}

type ResponsePayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//
	//	*ResponsePayload_AuthenticateConnectionAck
	//	*ResponsePayload_Pong
	Payload isResponsePayload_Payload `protobuf_oneof:"payload"`
}

func (x *ResponsePayload) Reset() {
	*x = ResponsePayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponsePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponsePayload) ProtoMessage() {}

func (x *ResponsePayload) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponsePayload.ProtoReflect.Descriptor instead.
func (*ResponsePayload) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescGZIP(), []int{7}
}

func (m *ResponsePayload) GetPayload() isResponsePayload_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *ResponsePayload) GetAuthenticateConnectionAck() *AuthenticateConnectionAck {
	if x, ok := x.GetPayload().(*ResponsePayload_AuthenticateConnectionAck); ok {
		return x.AuthenticateConnectionAck
	}
	return nil
}

func (x *ResponsePayload) GetPong() *Pong {
	if x, ok := x.GetPayload().(*ResponsePayload_Pong); ok {
		return x.Pong
	}
	return nil
}

type isResponsePayload_Payload interface {
	isResponsePayload_Payload()
}

type ResponsePayload_AuthenticateConnectionAck struct {
	AuthenticateConnectionAck *AuthenticateConnectionAck `protobuf:"bytes,1,opt,name=authenticate_connection_ack,json=authenticateConnectionAck,proto3,oneof"`
}

type ResponsePayload_Pong struct {
	Pong *Pong `protobuf:"bytes,2,opt,name=pong,proto3,oneof"`
}

func (*ResponsePayload_AuthenticateConnectionAck) isResponsePayload_Payload() {}

func (*ResponsePayload_Pong) isResponsePayload_Payload() {}

type WorkStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId string          `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	AuthToken string          `protobuf:"bytes,2,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty"`
	Payload   *RequestPayload `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *WorkStreamRequest) Reset() {
	*x = WorkStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkStreamRequest) ProtoMessage() {}

func (x *WorkStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkStreamRequest.ProtoReflect.Descriptor instead.
func (*WorkStreamRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescGZIP(), []int{8}
}

func (x *WorkStreamRequest) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *WorkStreamRequest) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *WorkStreamRequest) GetPayload() *RequestPayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type WorkStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId string           `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	AuthToken string           `protobuf:"bytes,2,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty"`
	Payload   *ResponsePayload `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *WorkStreamResponse) Reset() {
	*x = WorkStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkStreamResponse) ProtoMessage() {}

func (x *WorkStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkStreamResponse.ProtoReflect.Descriptor instead.
func (*WorkStreamResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescGZIP(), []int{9}
}

func (x *WorkStreamResponse) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *WorkStreamResponse) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *WorkStreamResponse) GetPayload() *ResponsePayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

var File_eigenlayer_hourglass_v1_executor_executor_proto protoreflect.FileDescriptor

var file_eigenlayer_hourglass_v1_executor_executor_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x68, 0x6f, 0x75,
	0x72, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x6f, 0x72, 0x2f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x20, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x68, 0x6f,
	0x75, 0x72, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x6f, 0x72, 0x22, 0xec, 0x01, 0x0a, 0x10, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x73, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x76,
	0x73, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x30,
	0x0a, 0x14, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x61, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x53, 0x69, 0x67,
	0x12, 0x40, 0x0a, 0x1c, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x22, 0x98, 0x01, 0x0a, 0x11, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x6e, 0x6f, 0x6e, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x13, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x30, 0x0a, 0x14, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x61, 0x75, 0x74, 0x68, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0xc2, 0x01,
	0x0a, 0x16, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x1f, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x1c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x22, 0x1b, 0x0a, 0x19, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x22,
	0x29, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x29, 0x0a, 0x04, 0x50, 0x6f,
	0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xce, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x73, 0x0a, 0x17, 0x61, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x65, 0x69, 0x67, 0x65,
	0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x68, 0x6f, 0x75, 0x72, 0x67, 0x6c, 0x61, 0x73, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x16, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a,
	0x04, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x69,
	0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x68, 0x6f, 0x75, 0x72, 0x67, 0x6c, 0x61,
	0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x50,
	0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x42, 0x09, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xd9, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x7d, 0x0a, 0x1b, 0x61, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3b, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x68, 0x6f, 0x75,
	0x72, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x6f, 0x72, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x19,
	0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x12, 0x3c, 0x0a, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x2e, 0x68, 0x6f, 0x75, 0x72, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x50, 0x6f, 0x6e, 0x67, 0x48,
	0x00, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x22, 0x9d, 0x01, 0x0a, 0x11, 0x57, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x74,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x4a, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x2e, 0x68, 0x6f, 0x75, 0x72, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x22, 0x9f, 0x01, 0x0a, 0x12, 0x57, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75,
	0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x4b, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x68, 0x6f, 0x75, 0x72, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x32, 0x88, 0x02, 0x0a, 0x0f, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x76, 0x0a, 0x09, 0x48, 0x61, 0x6e, 0x64,
	0x73, 0x68, 0x61, 0x6b, 0x65, 0x12, 0x32, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x68, 0x6f, 0x75, 0x72, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61,
	0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x65, 0x69, 0x67, 0x65,
	0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x68, 0x6f, 0x75, 0x72, 0x67, 0x6c, 0x61, 0x73, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x48, 0x61, 0x6e,
	0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x7d, 0x0a, 0x0a, 0x57, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x33,
	0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x68, 0x6f, 0x75, 0x72,
	0x67, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f,
	0x72, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x2e, 0x68, 0x6f, 0x75, 0x72, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42,
	0xb4, 0x02, 0x0a, 0x24, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x68, 0x6f, 0x75, 0x72, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x42, 0x0d, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x59, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4c, 0x61, 0x79, 0x72, 0x2d, 0x4c, 0x61, 0x62, 0x73, 0x2f,
	0x68, 0x6f, 0x75, 0x72, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x2d, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x65,
	0x70, 0x6f, 0x2f, 0x70, 0x6f, 0x6e, 0x6f, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2f, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x68,
	0x6f, 0x75, 0x72, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x6f, 0x72, 0xa2, 0x02, 0x04, 0x45, 0x48, 0x56, 0x45, 0xaa, 0x02, 0x20, 0x45, 0x69,
	0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x48, 0x6f, 0x75, 0x72, 0x67, 0x6c, 0x61,
	0x73, 0x73, 0x2e, 0x56, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0xca, 0x02,
	0x20, 0x45, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5c, 0x48, 0x6f, 0x75, 0x72,
	0x67, 0x6c, 0x61, 0x73, 0x73, 0x5c, 0x56, 0x31, 0x5c, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f,
	0x72, 0xe2, 0x02, 0x2c, 0x45, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5c, 0x48,
	0x6f, 0x75, 0x72, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x5c, 0x56, 0x31, 0x5c, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x6f, 0x72, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x23, 0x45, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x3a, 0x3a, 0x48,
	0x6f, 0x75, 0x72, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x3a, 0x3a, 0x56, 0x31, 0x3a, 0x3a, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescOnce sync.Once
	file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescData = file_eigenlayer_hourglass_v1_executor_executor_proto_rawDesc
)

func file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescGZIP() []byte {
	file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescOnce.Do(func() {
		file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescData = protoimpl.X.CompressGZIP(file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescData)
	})
	return file_eigenlayer_hourglass_v1_executor_executor_proto_rawDescData
}

var file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_eigenlayer_hourglass_v1_executor_executor_proto_goTypes = []any{
	(*HandshakeRequest)(nil),          // 0: eigenlayer.hourglass.v1.executor.HandshakeRequest
	(*HandshakeResponse)(nil),         // 1: eigenlayer.hourglass.v1.executor.HandshakeResponse
	(*AuthenticateConnection)(nil),    // 2: eigenlayer.hourglass.v1.executor.AuthenticateConnection
	(*AuthenticateConnectionAck)(nil), // 3: eigenlayer.hourglass.v1.executor.AuthenticateConnectionAck
	(*Ping)(nil),                      // 4: eigenlayer.hourglass.v1.executor.Ping
	(*Pong)(nil),                      // 5: eigenlayer.hourglass.v1.executor.Pong
	(*RequestPayload)(nil),            // 6: eigenlayer.hourglass.v1.executor.RequestPayload
	(*ResponsePayload)(nil),           // 7: eigenlayer.hourglass.v1.executor.ResponsePayload
	(*WorkStreamRequest)(nil),         // 8: eigenlayer.hourglass.v1.executor.WorkStreamRequest
	(*WorkStreamResponse)(nil),        // 9: eigenlayer.hourglass.v1.executor.WorkStreamResponse
}
var file_eigenlayer_hourglass_v1_executor_executor_proto_depIdxs = []int32{
	2, // 0: eigenlayer.hourglass.v1.executor.RequestPayload.authenticate_connection:type_name -> eigenlayer.hourglass.v1.executor.AuthenticateConnection
	4, // 1: eigenlayer.hourglass.v1.executor.RequestPayload.ping:type_name -> eigenlayer.hourglass.v1.executor.Ping
	3, // 2: eigenlayer.hourglass.v1.executor.ResponsePayload.authenticate_connection_ack:type_name -> eigenlayer.hourglass.v1.executor.AuthenticateConnectionAck
	5, // 3: eigenlayer.hourglass.v1.executor.ResponsePayload.pong:type_name -> eigenlayer.hourglass.v1.executor.Pong
	6, // 4: eigenlayer.hourglass.v1.executor.WorkStreamRequest.payload:type_name -> eigenlayer.hourglass.v1.executor.RequestPayload
	7, // 5: eigenlayer.hourglass.v1.executor.WorkStreamResponse.payload:type_name -> eigenlayer.hourglass.v1.executor.ResponsePayload
	0, // 6: eigenlayer.hourglass.v1.executor.ExecutorService.Handshake:input_type -> eigenlayer.hourglass.v1.executor.HandshakeRequest
	8, // 7: eigenlayer.hourglass.v1.executor.ExecutorService.WorkStream:input_type -> eigenlayer.hourglass.v1.executor.WorkStreamRequest
	1, // 8: eigenlayer.hourglass.v1.executor.ExecutorService.Handshake:output_type -> eigenlayer.hourglass.v1.executor.HandshakeResponse
	9, // 9: eigenlayer.hourglass.v1.executor.ExecutorService.WorkStream:output_type -> eigenlayer.hourglass.v1.executor.WorkStreamResponse
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_eigenlayer_hourglass_v1_executor_executor_proto_init() }
func file_eigenlayer_hourglass_v1_executor_executor_proto_init() {
	if File_eigenlayer_hourglass_v1_executor_executor_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*HandshakeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*HandshakeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*AuthenticateConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*AuthenticateConnectionAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Ping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Pong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*RequestPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ResponsePayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*WorkStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*WorkStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[6].OneofWrappers = []any{
		(*RequestPayload_AuthenticateConnection)(nil),
		(*RequestPayload_Ping)(nil),
	}
	file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes[7].OneofWrappers = []any{
		(*ResponsePayload_AuthenticateConnectionAck)(nil),
		(*ResponsePayload_Pong)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eigenlayer_hourglass_v1_executor_executor_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eigenlayer_hourglass_v1_executor_executor_proto_goTypes,
		DependencyIndexes: file_eigenlayer_hourglass_v1_executor_executor_proto_depIdxs,
		MessageInfos:      file_eigenlayer_hourglass_v1_executor_executor_proto_msgTypes,
	}.Build()
	File_eigenlayer_hourglass_v1_executor_executor_proto = out.File
	file_eigenlayer_hourglass_v1_executor_executor_proto_rawDesc = nil
	file_eigenlayer_hourglass_v1_executor_executor_proto_goTypes = nil
	file_eigenlayer_hourglass_v1_executor_executor_proto_depIdxs = nil
}
