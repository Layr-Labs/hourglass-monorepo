// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: eigenlayer/hourglass/v1/avsPerformer/avsPerformer.proto

package avsPerformer

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId     string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	AvsAddress string `protobuf:"bytes,2,opt,name=avs_address,json=avsAddress,proto3" json:"avs_address,omitempty"`
	Input      []byte `protobuf:"bytes,3,opt,name=input,proto3" json:"input,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eigenlayer_hourglass_v1_avsPerformer_avsPerformer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_avsPerformer_avsPerformer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_avsPerformer_avsPerformer_proto_rawDescGZIP(), []int{0}
}

func (x *Task) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *Task) GetAvsAddress() string {
	if x != nil {
		return x.AvsAddress
	}
	return ""
}

func (x *Task) GetInput() []byte {
	if x != nil {
		return x.Input
	}
	return nil
}

type Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId     string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	AvsAddress string `protobuf:"bytes,2,opt,name=avs_address,json=avsAddress,proto3" json:"avs_address,omitempty"`
	Output     []byte `protobuf:"bytes,3,opt,name=output,proto3" json:"output,omitempty"`
}

func (x *Result) Reset() {
	*x = Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eigenlayer_hourglass_v1_avsPerformer_avsPerformer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_avsPerformer_avsPerformer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_avsPerformer_avsPerformer_proto_rawDescGZIP(), []int{1}
}

func (x *Result) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *Result) GetAvsAddress() string {
	if x != nil {
		return x.AvsAddress
	}
	return ""
}

func (x *Result) GetOutput() []byte {
	if x != nil {
		return x.Output
	}
	return nil
}

type ExecuteTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task *Task `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *ExecuteTaskRequest) Reset() {
	*x = ExecuteTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eigenlayer_hourglass_v1_avsPerformer_avsPerformer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteTaskRequest) ProtoMessage() {}

func (x *ExecuteTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_avsPerformer_avsPerformer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteTaskRequest.ProtoReflect.Descriptor instead.
func (*ExecuteTaskRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_avsPerformer_avsPerformer_proto_rawDescGZIP(), []int{2}
}

func (x *ExecuteTaskRequest) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

type ExecuteTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ExecuteTaskResponse) Reset() {
	*x = ExecuteTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eigenlayer_hourglass_v1_avsPerformer_avsPerformer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteTaskResponse) ProtoMessage() {}

func (x *ExecuteTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_avsPerformer_avsPerformer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteTaskResponse.ProtoReflect.Descriptor instead.
func (*ExecuteTaskResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_avsPerformer_avsPerformer_proto_rawDescGZIP(), []int{3}
}

func (x *ExecuteTaskResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

var File_eigenlayer_hourglass_v1_avsPerformer_avsPerformer_proto protoreflect.FileDescriptor

var file_eigenlayer_hourglass_v1_avsPerformer_avsPerformer_proto_rawDesc = []byte{
	0x0a, 0x37, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x68, 0x6f, 0x75,
	0x72, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x76, 0x73, 0x50, 0x65, 0x72,
	0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x2f, 0x61, 0x76, 0x73, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72,
	0x6d, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x24, 0x65, 0x69, 0x67, 0x65, 0x6e,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x68, 0x6f, 0x75, 0x72, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x61, 0x76, 0x73, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x22,
	0x56, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x73, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x76, 0x73, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x5a, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76,
	0x73, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x61, 0x76, 0x73, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x22, 0x54, 0x0a, 0x12, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x04, 0x74, 0x61, 0x73,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x2e, 0x68, 0x6f, 0x75, 0x72, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x61, 0x76, 0x73, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x22, 0x5b, 0x0a, 0x13, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x44, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x68, 0x6f,
	0x75, 0x72, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x76, 0x73, 0x50, 0x65,
	0x72, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0x93, 0x01, 0x0a, 0x0a, 0x41, 0x76, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x0b, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x38, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x68, 0x6f, 0x75, 0x72, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x61, 0x76, 0x73, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x2e, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x39, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x68, 0x6f, 0x75,
	0x72, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x76, 0x73, 0x50, 0x65, 0x72,
	0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0xd0, 0x02, 0x0a,
	0x28, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e,
	0x68, 0x6f, 0x75, 0x72, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x76, 0x73,
	0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x42, 0x11, 0x41, 0x76, 0x73, 0x50, 0x65,
	0x72, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x5d,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4c, 0x61, 0x79, 0x72, 0x2d,
	0x4c, 0x61, 0x62, 0x73, 0x2f, 0x68, 0x6f, 0x75, 0x72, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x2d, 0x6d,
	0x6f, 0x6e, 0x6f, 0x72, 0x65, 0x70, 0x6f, 0x2f, 0x70, 0x6f, 0x6e, 0x6f, 0x73, 0x2f, 0x67, 0x65,
	0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x2f, 0x68, 0x6f, 0x75, 0x72, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x2f, 0x76, 0x31,
	0x2f, 0x61, 0x76, 0x73, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0xa2, 0x02, 0x04,
	0x45, 0x48, 0x56, 0x41, 0xaa, 0x02, 0x24, 0x45, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x2e, 0x48, 0x6f, 0x75, 0x72, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x56, 0x31, 0x2e, 0x41,
	0x76, 0x73, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0xca, 0x02, 0x24, 0x45, 0x69,
	0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5c, 0x48, 0x6f, 0x75, 0x72, 0x67, 0x6c, 0x61,
	0x73, 0x73, 0x5c, 0x56, 0x31, 0x5c, 0x41, 0x76, 0x73, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d,
	0x65, 0x72, 0xe2, 0x02, 0x30, 0x45, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5c,
	0x48, 0x6f, 0x75, 0x72, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x5c, 0x56, 0x31, 0x5c, 0x41, 0x76, 0x73,
	0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x27, 0x45, 0x69, 0x67, 0x65, 0x6e, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x3a, 0x3a, 0x48, 0x6f, 0x75, 0x72, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x3a, 0x3a, 0x56,
	0x31, 0x3a, 0x3a, 0x41, 0x76, 0x73, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eigenlayer_hourglass_v1_avsPerformer_avsPerformer_proto_rawDescOnce sync.Once
	file_eigenlayer_hourglass_v1_avsPerformer_avsPerformer_proto_rawDescData = file_eigenlayer_hourglass_v1_avsPerformer_avsPerformer_proto_rawDesc
)

func file_eigenlayer_hourglass_v1_avsPerformer_avsPerformer_proto_rawDescGZIP() []byte {
	file_eigenlayer_hourglass_v1_avsPerformer_avsPerformer_proto_rawDescOnce.Do(func() {
		file_eigenlayer_hourglass_v1_avsPerformer_avsPerformer_proto_rawDescData = protoimpl.X.CompressGZIP(file_eigenlayer_hourglass_v1_avsPerformer_avsPerformer_proto_rawDescData)
	})
	return file_eigenlayer_hourglass_v1_avsPerformer_avsPerformer_proto_rawDescData
}

var file_eigenlayer_hourglass_v1_avsPerformer_avsPerformer_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_eigenlayer_hourglass_v1_avsPerformer_avsPerformer_proto_goTypes = []any{
	(*Task)(nil),                // 0: eigenlayer.hourglass.v1.avsPerformer.Task
	(*Result)(nil),              // 1: eigenlayer.hourglass.v1.avsPerformer.Result
	(*ExecuteTaskRequest)(nil),  // 2: eigenlayer.hourglass.v1.avsPerformer.ExecuteTaskRequest
	(*ExecuteTaskResponse)(nil), // 3: eigenlayer.hourglass.v1.avsPerformer.ExecuteTaskResponse
}
var file_eigenlayer_hourglass_v1_avsPerformer_avsPerformer_proto_depIdxs = []int32{
	0, // 0: eigenlayer.hourglass.v1.avsPerformer.ExecuteTaskRequest.task:type_name -> eigenlayer.hourglass.v1.avsPerformer.Task
	1, // 1: eigenlayer.hourglass.v1.avsPerformer.ExecuteTaskResponse.result:type_name -> eigenlayer.hourglass.v1.avsPerformer.Result
	2, // 2: eigenlayer.hourglass.v1.avsPerformer.AvsService.ExecuteTask:input_type -> eigenlayer.hourglass.v1.avsPerformer.ExecuteTaskRequest
	3, // 3: eigenlayer.hourglass.v1.avsPerformer.AvsService.ExecuteTask:output_type -> eigenlayer.hourglass.v1.avsPerformer.ExecuteTaskResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_eigenlayer_hourglass_v1_avsPerformer_avsPerformer_proto_init() }
func file_eigenlayer_hourglass_v1_avsPerformer_avsPerformer_proto_init() {
	if File_eigenlayer_hourglass_v1_avsPerformer_avsPerformer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_eigenlayer_hourglass_v1_avsPerformer_avsPerformer_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eigenlayer_hourglass_v1_avsPerformer_avsPerformer_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eigenlayer_hourglass_v1_avsPerformer_avsPerformer_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ExecuteTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eigenlayer_hourglass_v1_avsPerformer_avsPerformer_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ExecuteTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eigenlayer_hourglass_v1_avsPerformer_avsPerformer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eigenlayer_hourglass_v1_avsPerformer_avsPerformer_proto_goTypes,
		DependencyIndexes: file_eigenlayer_hourglass_v1_avsPerformer_avsPerformer_proto_depIdxs,
		MessageInfos:      file_eigenlayer_hourglass_v1_avsPerformer_avsPerformer_proto_msgTypes,
	}.Build()
	File_eigenlayer_hourglass_v1_avsPerformer_avsPerformer_proto = out.File
	file_eigenlayer_hourglass_v1_avsPerformer_avsPerformer_proto_rawDesc = nil
	file_eigenlayer_hourglass_v1_avsPerformer_avsPerformer_proto_goTypes = nil
	file_eigenlayer_hourglass_v1_avsPerformer_avsPerformer_proto_depIdxs = nil
}
