// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: eigenlayer/hourglass/v1/aggregator/aggregator.proto

package aggregator

import (
	common "github.com/Layr-Labs/hourglass-monorepo/ponos/gen/protos/eigenlayer/hourglass/v1/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegisterAvsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AvsAddress    string                 `protobuf:"bytes,1,opt,name=avs_address,json=avsAddress,proto3" json:"avs_address,omitempty"`
	ChainIds      []uint32               `protobuf:"varint,2,rep,packed,name=chain_ids,json=chainIds,proto3" json:"chain_ids,omitempty"`
	Auth          *common.AuthSignature  `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterAvsRequest) Reset() {
	*x = RegisterAvsRequest{}
	mi := &file_eigenlayer_hourglass_v1_aggregator_aggregator_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterAvsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterAvsRequest) ProtoMessage() {}

func (x *RegisterAvsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_aggregator_aggregator_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterAvsRequest.ProtoReflect.Descriptor instead.
func (*RegisterAvsRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_aggregator_aggregator_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterAvsRequest) GetAvsAddress() string {
	if x != nil {
		return x.AvsAddress
	}
	return ""
}

func (x *RegisterAvsRequest) GetChainIds() []uint32 {
	if x != nil {
		return x.ChainIds
	}
	return nil
}

func (x *RegisterAvsRequest) GetAuth() *common.AuthSignature {
	if x != nil {
		return x.Auth
	}
	return nil
}

type RegisterAvsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterAvsResponse) Reset() {
	*x = RegisterAvsResponse{}
	mi := &file_eigenlayer_hourglass_v1_aggregator_aggregator_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterAvsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterAvsResponse) ProtoMessage() {}

func (x *RegisterAvsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_aggregator_aggregator_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterAvsResponse.ProtoReflect.Descriptor instead.
func (*RegisterAvsResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_aggregator_aggregator_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterAvsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DeRegisterAvsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AvsAddress    string                 `protobuf:"bytes,1,opt,name=avs_address,json=avsAddress,proto3" json:"avs_address,omitempty"`
	Auth          *common.AuthSignature  `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeRegisterAvsRequest) Reset() {
	*x = DeRegisterAvsRequest{}
	mi := &file_eigenlayer_hourglass_v1_aggregator_aggregator_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeRegisterAvsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeRegisterAvsRequest) ProtoMessage() {}

func (x *DeRegisterAvsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_aggregator_aggregator_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeRegisterAvsRequest.ProtoReflect.Descriptor instead.
func (*DeRegisterAvsRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_aggregator_aggregator_proto_rawDescGZIP(), []int{2}
}

func (x *DeRegisterAvsRequest) GetAvsAddress() string {
	if x != nil {
		return x.AvsAddress
	}
	return ""
}

func (x *DeRegisterAvsRequest) GetAuth() *common.AuthSignature {
	if x != nil {
		return x.Auth
	}
	return nil
}

type DeRegisterAvsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeRegisterAvsResponse) Reset() {
	*x = DeRegisterAvsResponse{}
	mi := &file_eigenlayer_hourglass_v1_aggregator_aggregator_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeRegisterAvsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeRegisterAvsResponse) ProtoMessage() {}

func (x *DeRegisterAvsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_aggregator_aggregator_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeRegisterAvsResponse.ProtoReflect.Descriptor instead.
func (*DeRegisterAvsResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_aggregator_aggregator_proto_rawDescGZIP(), []int{3}
}

func (x *DeRegisterAvsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// AggregatorGetChallengeTokenRequest is used to request a challenge token for authentication
type AggregatorGetChallengeTokenRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	AggregatorAddress string                 `protobuf:"bytes,1,opt,name=aggregator_address,json=aggregatorAddress,proto3" json:"aggregator_address,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *AggregatorGetChallengeTokenRequest) Reset() {
	*x = AggregatorGetChallengeTokenRequest{}
	mi := &file_eigenlayer_hourglass_v1_aggregator_aggregator_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregatorGetChallengeTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregatorGetChallengeTokenRequest) ProtoMessage() {}

func (x *AggregatorGetChallengeTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_aggregator_aggregator_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregatorGetChallengeTokenRequest.ProtoReflect.Descriptor instead.
func (*AggregatorGetChallengeTokenRequest) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_aggregator_aggregator_proto_rawDescGZIP(), []int{4}
}

func (x *AggregatorGetChallengeTokenRequest) GetAggregatorAddress() string {
	if x != nil {
		return x.AggregatorAddress
	}
	return ""
}

// AggregatorGetChallengeTokenResponse returns a challenge token for authentication
type AggregatorGetChallengeTokenResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ChallengeToken string                 `protobuf:"bytes,1,opt,name=challenge_token,json=challengeToken,proto3" json:"challenge_token,omitempty"`
	ExpiresAt      int64                  `protobuf:"varint,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"` // Unix timestamp when token expires
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AggregatorGetChallengeTokenResponse) Reset() {
	*x = AggregatorGetChallengeTokenResponse{}
	mi := &file_eigenlayer_hourglass_v1_aggregator_aggregator_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregatorGetChallengeTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregatorGetChallengeTokenResponse) ProtoMessage() {}

func (x *AggregatorGetChallengeTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eigenlayer_hourglass_v1_aggregator_aggregator_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregatorGetChallengeTokenResponse.ProtoReflect.Descriptor instead.
func (*AggregatorGetChallengeTokenResponse) Descriptor() ([]byte, []int) {
	return file_eigenlayer_hourglass_v1_aggregator_aggregator_proto_rawDescGZIP(), []int{5}
}

func (x *AggregatorGetChallengeTokenResponse) GetChallengeToken() string {
	if x != nil {
		return x.ChallengeToken
	}
	return ""
}

func (x *AggregatorGetChallengeTokenResponse) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

var File_eigenlayer_hourglass_v1_aggregator_aggregator_proto protoreflect.FileDescriptor

const file_eigenlayer_hourglass_v1_aggregator_aggregator_proto_rawDesc = "" +
	"\n" +
	"3eigenlayer/hourglass/v1/aggregator/aggregator.proto\x12\x17eigenlayer.hourglass.v1\x1a)eigenlayer/hourglass/v1/common/auth.proto\"\x95\x01\n" +
	"\x12RegisterAvsRequest\x12\x1f\n" +
	"\vavs_address\x18\x01 \x01(\tR\n" +
	"avsAddress\x12\x1b\n" +
	"\tchain_ids\x18\x02 \x03(\rR\bchainIds\x12A\n" +
	"\x04auth\x18\x03 \x01(\v2-.eigenlayer.hourglass.v1.common.AuthSignatureR\x04auth\"/\n" +
	"\x13RegisterAvsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"z\n" +
	"\x14DeRegisterAvsRequest\x12\x1f\n" +
	"\vavs_address\x18\x01 \x01(\tR\n" +
	"avsAddress\x12A\n" +
	"\x04auth\x18\x02 \x01(\v2-.eigenlayer.hourglass.v1.common.AuthSignatureR\x04auth\"1\n" +
	"\x15DeRegisterAvsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"S\n" +
	"\"AggregatorGetChallengeTokenRequest\x12-\n" +
	"\x12aggregator_address\x18\x01 \x01(\tR\x11aggregatorAddress\"m\n" +
	"#AggregatorGetChallengeTokenResponse\x12'\n" +
	"\x0fchallenge_token\x18\x01 \x01(\tR\x0echallengeToken\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x02 \x01(\x03R\texpiresAt2\x8e\x03\n" +
	"\x1bAggregatorManagementService\x12j\n" +
	"\vRegisterAvs\x12+.eigenlayer.hourglass.v1.RegisterAvsRequest\x1a,.eigenlayer.hourglass.v1.RegisterAvsResponse\"\x00\x12p\n" +
	"\rDeRegisterAvs\x12-.eigenlayer.hourglass.v1.DeRegisterAvsRequest\x1a..eigenlayer.hourglass.v1.DeRegisterAvsResponse\"\x00\x12\x90\x01\n" +
	"\x11GetChallengeToken\x12;.eigenlayer.hourglass.v1.AggregatorGetChallengeTokenRequest\x1a<.eigenlayer.hourglass.v1.AggregatorGetChallengeTokenResponse\"\x00B\x89\x02\n" +
	"\x1bcom.eigenlayer.hourglass.v1B\x0fAggregatorProtoP\x01Z[github.com/Layr-Labs/hourglass-monorepo/ponos/gen/protos/eigenlayer/hourglass/v1/aggregator\xa2\x02\x03EHX\xaa\x02\x17Eigenlayer.Hourglass.V1\xca\x02\x17Eigenlayer\\Hourglass\\V1\xe2\x02#Eigenlayer\\Hourglass\\V1\\GPBMetadata\xea\x02\x19Eigenlayer::Hourglass::V1b\x06proto3"

var (
	file_eigenlayer_hourglass_v1_aggregator_aggregator_proto_rawDescOnce sync.Once
	file_eigenlayer_hourglass_v1_aggregator_aggregator_proto_rawDescData []byte
)

func file_eigenlayer_hourglass_v1_aggregator_aggregator_proto_rawDescGZIP() []byte {
	file_eigenlayer_hourglass_v1_aggregator_aggregator_proto_rawDescOnce.Do(func() {
		file_eigenlayer_hourglass_v1_aggregator_aggregator_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_eigenlayer_hourglass_v1_aggregator_aggregator_proto_rawDesc), len(file_eigenlayer_hourglass_v1_aggregator_aggregator_proto_rawDesc)))
	})
	return file_eigenlayer_hourglass_v1_aggregator_aggregator_proto_rawDescData
}

var file_eigenlayer_hourglass_v1_aggregator_aggregator_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_eigenlayer_hourglass_v1_aggregator_aggregator_proto_goTypes = []any{
	(*RegisterAvsRequest)(nil),                  // 0: eigenlayer.hourglass.v1.RegisterAvsRequest
	(*RegisterAvsResponse)(nil),                 // 1: eigenlayer.hourglass.v1.RegisterAvsResponse
	(*DeRegisterAvsRequest)(nil),                // 2: eigenlayer.hourglass.v1.DeRegisterAvsRequest
	(*DeRegisterAvsResponse)(nil),               // 3: eigenlayer.hourglass.v1.DeRegisterAvsResponse
	(*AggregatorGetChallengeTokenRequest)(nil),  // 4: eigenlayer.hourglass.v1.AggregatorGetChallengeTokenRequest
	(*AggregatorGetChallengeTokenResponse)(nil), // 5: eigenlayer.hourglass.v1.AggregatorGetChallengeTokenResponse
	(*common.AuthSignature)(nil),                // 6: eigenlayer.hourglass.v1.common.AuthSignature
}
var file_eigenlayer_hourglass_v1_aggregator_aggregator_proto_depIdxs = []int32{
	6, // 0: eigenlayer.hourglass.v1.RegisterAvsRequest.auth:type_name -> eigenlayer.hourglass.v1.common.AuthSignature
	6, // 1: eigenlayer.hourglass.v1.DeRegisterAvsRequest.auth:type_name -> eigenlayer.hourglass.v1.common.AuthSignature
	0, // 2: eigenlayer.hourglass.v1.AggregatorManagementService.RegisterAvs:input_type -> eigenlayer.hourglass.v1.RegisterAvsRequest
	2, // 3: eigenlayer.hourglass.v1.AggregatorManagementService.DeRegisterAvs:input_type -> eigenlayer.hourglass.v1.DeRegisterAvsRequest
	4, // 4: eigenlayer.hourglass.v1.AggregatorManagementService.GetChallengeToken:input_type -> eigenlayer.hourglass.v1.AggregatorGetChallengeTokenRequest
	1, // 5: eigenlayer.hourglass.v1.AggregatorManagementService.RegisterAvs:output_type -> eigenlayer.hourglass.v1.RegisterAvsResponse
	3, // 6: eigenlayer.hourglass.v1.AggregatorManagementService.DeRegisterAvs:output_type -> eigenlayer.hourglass.v1.DeRegisterAvsResponse
	5, // 7: eigenlayer.hourglass.v1.AggregatorManagementService.GetChallengeToken:output_type -> eigenlayer.hourglass.v1.AggregatorGetChallengeTokenResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_eigenlayer_hourglass_v1_aggregator_aggregator_proto_init() }
func file_eigenlayer_hourglass_v1_aggregator_aggregator_proto_init() {
	if File_eigenlayer_hourglass_v1_aggregator_aggregator_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_eigenlayer_hourglass_v1_aggregator_aggregator_proto_rawDesc), len(file_eigenlayer_hourglass_v1_aggregator_aggregator_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eigenlayer_hourglass_v1_aggregator_aggregator_proto_goTypes,
		DependencyIndexes: file_eigenlayer_hourglass_v1_aggregator_aggregator_proto_depIdxs,
		MessageInfos:      file_eigenlayer_hourglass_v1_aggregator_aggregator_proto_msgTypes,
	}.Build()
	File_eigenlayer_hourglass_v1_aggregator_aggregator_proto = out.File
	file_eigenlayer_hourglass_v1_aggregator_aggregator_proto_goTypes = nil
	file_eigenlayer_hourglass_v1_aggregator_aggregator_proto_depIdxs = nil
}
