#!/usr/bin/env bash

# Read the chain config that was generated by generateTestChainState.sh
chainConfig="./internal/testData/chain-config.json"

if [ ! -f "$chainConfig" ]; then
    echo "Error: chain-config.json not found at $chainConfig"
    echo "Please run generateTestChainState.sh first"
    exit 1
fi

keysDir="./internal/testData/web3signer/keys"
keystoresDir="./internal/testData/web3signer/keystores"
passwordsDir="./internal/testData/web3signer/passwords"

# Create directories if they don't exist
mkdir -p "$keysDir"
mkdir -p "$keystoresDir"
mkdir -p "$passwordsDir"

echo "Generating Web3Signer keys for operators from chain-config.json..."

# Function to generate Web3Signer key for an account
generateWeb3SignerKey() {
    local name=$1
    local address=$2
    local pk=$3

    if [ -z "$address" ] || [ -z "$pk" ]; then
        echo "Skipping $name - missing address or private key"
        return
    fi

    echo "Processing $name:"
    echo "  Address: $address"
    echo "  PrivateKey: $pk"

    filePath="${keysDir}/${address}.yaml"
    echo "  Creating key file at: $filePath"

    password="test"

    # Import the wallet
    cast wallet import --keystore-dir $keystoresDir --unsafe-password $password --private-key "0x$pk" "${address}.json"

    # Save the password
    echo -n "$password" > "${passwordsDir}/${address}.txt"

    # Create the Web3Signer key file
    cat << EOF > "$filePath"
type: "file-raw"
keyType: "SECP256K1"  # For ETH1
privateKey: "0x${pk}"
EOF

    echo "  âœ“ Done"
    echo ""
}

# Process all operator accounts only (not stakers)
echo "=== Generating Web3Signer Keys for Operators ==="

generateWeb3SignerKey "Aggregator Operator" \
    $(jq -r '.operatorAccountAddress' "$chainConfig") \
    $(jq -r '.operatorAccountPk' "$chainConfig")

generateWeb3SignerKey "Executor Operator 1" \
    $(jq -r '.execOperatorAccountAddress' "$chainConfig") \
    $(jq -r '.execOperatorAccountPk' "$chainConfig")

generateWeb3SignerKey "Executor Operator 2" \
    $(jq -r '.execOperator2AccountAddress' "$chainConfig") \
    $(jq -r '.execOperator2AccountPk' "$chainConfig")

generateWeb3SignerKey "Executor Operator 3" \
    $(jq -r '.execOperator3AccountAddress' "$chainConfig") \
    $(jq -r '.execOperator3AccountPk' "$chainConfig")

generateWeb3SignerKey "Executor Operator 4" \
    $(jq -r '.execOperator4AccountAddress' "$chainConfig") \
    $(jq -r '.execOperator4AccountPk' "$chainConfig")

echo "Web3Signer key generation complete!"
echo "Keys directory: $keysDir"
echo "Keystores directory: $keystoresDir"
echo "Passwords directory: $passwordsDir"
echo ""
echo "Generated keys for:"
echo "  - 1 Aggregator operator"
echo "  - 4 Executor operators"