name: build hourglass operator

on:
  push:
    branches:
      - "**"
    tags:
      - 'v*'

jobs:
  gofmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
      - name: Check formatting
        run: |
          cd hourglass-operator
          if [ -n "$(gofmt -l .)" ]; then
            echo "The following files are not formatted properly:"
            gofmt -d .
            exit 1
          fi
          echo "All files are formatted correctly."
  test:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
      - name: Run tests
        run: |
          cd hourglass-operator
          make test
  check-manifests:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
      - name: Run tests
        run: |
          cd hourglass-operator
          make generate manifests
          
          if [ -n "$(git status --porcelain)" ]; then
            echo "Generated manifests are not up to date. Please run 'make generate manifests' and commit the changes."
            git status
            exit 1
          else
            echo "Generated manifests are up to date."
          fi
  build-container:
    runs-on: protocol-gha-runners-hourglass
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: "public.ecr.aws/z6g0f8n7"
          REPOSITORY: "eigenlayer/hourglass-operator"
        run: |
          echo "Building docker image for version ${{ github.sha }}"
          cd hourglass-operator
          docker buildx build --platform "linux/amd64,linux/arm64" -t $REGISTRY/$REPOSITORY:${{ github.sha }} -t $REGISTRY/$REPOSITORY:latest --push .
