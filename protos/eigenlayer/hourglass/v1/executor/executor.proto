syntax = "proto3";

package eigenlayer.hourglass.v1.executor;

option go_package = "github.com/Layr-Labs/go-ponos/gen/protos/eigenlayer/hourglass/v1/executor";

message HandshakeRequest {
  string aggregator_address = 1;            // address of the aggregator so the operator knows who sent the message
  string nonce = 2;                         // nonce, generated by the aggregator
  string aggregator_signed_nonce = 3;       // nonce signed with the aggregator's key. used by the operator to verify identity of aggregator
  string destination_operator_address = 4;  // address of operator the message is intended for (operator can self-check, more for debugging)
}

message HandshakeResponse {
  string operator_address = 1;              // operator address who signed the message (should be the same as whats in the request)
  string operator_signed_nonce = 2;         // nonce signed with the operator's key for the aggregator to validate
}

// gRPC service
service ExecutorService {
  rpc Handshake(HandshakeRequest) returns (HandshakeResponse) {}
}


message PeerInfo {
  string network_address = 1;
  uint32 port = 2;
  string public_key = 3;
}
