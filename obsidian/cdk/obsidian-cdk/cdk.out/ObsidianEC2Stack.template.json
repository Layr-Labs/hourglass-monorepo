{
 "Resources": {
  "ArtifactsArtifactsBucket87810096": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "BucketName": "obsidian-artifacts-767397703211-us-east-1",
    "LifecycleConfiguration": {
     "Rules": [
      {
       "Id": "delete-old-versions",
       "NoncurrentVersionExpiration": {
        "NoncurrentDays": 30
       },
       "Status": "Enabled"
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ObsidianEC2Stack/Artifacts/ArtifactsBucket/Resource"
   }
  },
  "BuildPipelineObsidianBuildProjectRoleFD7A68AE": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codebuild.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ObsidianEC2Stack/BuildPipeline/ObsidianBuildProject/Role/Resource"
   }
  },
  "BuildPipelineObsidianBuildProjectRoleDefaultPolicyDCE4B5E7": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ArtifactsArtifactsBucket87810096",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ArtifactsArtifactsBucket87810096",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:logs:us-east-1:767397703211:log-group:/aws/codebuild/",
           {
            "Ref": "BuildPipelineObsidianBuildProject50DCE231"
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:logs:us-east-1:767397703211:log-group:/aws/codebuild/",
           {
            "Ref": "BuildPipelineObsidianBuildProject50DCE231"
           }
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "codebuild:BatchPutCodeCoverages",
        "codebuild:BatchPutTestCases",
        "codebuild:CreateReport",
        "codebuild:CreateReportGroup",
        "codebuild:UpdateReport"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:codebuild:us-east-1:767397703211:report-group/",
          {
           "Ref": "BuildPipelineObsidianBuildProject50DCE231"
          },
          "-*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "BuildPipelineObsidianBuildProjectRoleDefaultPolicyDCE4B5E7",
    "Roles": [
     {
      "Ref": "BuildPipelineObsidianBuildProjectRoleFD7A68AE"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ObsidianEC2Stack/BuildPipeline/ObsidianBuildProject/Role/DefaultPolicy/Resource"
   }
  },
  "BuildPipelineObsidianBuildProject50DCE231": {
   "Type": "AWS::CodeBuild::Project",
   "Properties": {
    "Artifacts": {
     "Location": {
      "Ref": "ArtifactsArtifactsBucket87810096"
     },
     "NamespaceType": "NONE",
     "OverrideArtifactName": true,
     "Packaging": "ZIP",
     "Path": "build-artifacts",
     "Type": "S3"
    },
    "Cache": {
     "Type": "NO_CACHE"
    },
    "Description": "Build and deploy Obsidian binary to S3",
    "EncryptionKey": "alias/aws/s3",
    "Environment": {
     "ComputeType": "BUILD_GENERAL1_MEDIUM",
     "EnvironmentVariables": [
      {
       "Name": "ARTIFACTS_BUCKET",
       "Type": "PLAINTEXT",
       "Value": {
        "Ref": "ArtifactsArtifactsBucket87810096"
       }
      },
      {
       "Name": "AWS_ACCOUNT_ID",
       "Type": "PLAINTEXT",
       "Value": "767397703211"
      },
      {
       "Name": "AWS_REGION",
       "Type": "PLAINTEXT",
       "Value": "us-east-1"
      }
     ],
     "Image": "aws/codebuild/standard:7.0",
     "ImagePullCredentialsType": "CODEBUILD",
     "PrivilegedMode": false,
     "Type": "LINUX_CONTAINER"
    },
    "Name": "obsidian-build",
    "ServiceRole": {
     "Fn::GetAtt": [
      "BuildPipelineObsidianBuildProjectRoleFD7A68AE",
      "Arn"
     ]
    },
    "Source": {
     "BuildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"install\": {\n      \"runtime-versions\": {\n        \"golang\": \"1.21\"\n      },\n      \"commands\": [\n        \"echo Installing dependencies...\",\n        \"apt-get update -y\",\n        \"apt-get install -y protobuf-compiler\",\n        \"go install google.golang.org/protobuf/cmd/protoc-gen-go@latest\",\n        \"go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest\"\n      ]\n    },\n    \"pre_build\": {\n      \"commands\": [\n        \"echo Pre-build phase started on `date`\",\n        \"export VERSION=$(git describe --tags --always --dirty)\",\n        \"export BUILD_TIME=$(date -u +%Y-%m-%dT%H:%M:%SZ)\",\n        \"export GIT_COMMIT=$(git rev-parse HEAD)\",\n        \"echo \\\"Building version: $VERSION\\\"\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"echo Build started on `date`\",\n        \"cd obsidian\",\n        \"make proto\",\n        \"GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags \\\"-X main.Version=$VERSION -X main.BuildTime=$BUILD_TIME -X main.GitCommit=$GIT_COMMIT\\\" -o obsidian-linux-amd64 ./cmd/obsidian\",\n        \"echo Build completed on `date`\"\n      ]\n    },\n    \"post_build\": {\n      \"commands\": [\n        \"echo Post-build phase started on `date`\",\n        \"# Upload versioned binary\",\n        \"aws s3 cp obsidian-linux-amd64 s3://$ARTIFACTS_BUCKET/binaries/obsidian-linux-amd64-$VERSION\",\n        \"# Update latest pointer\",\n        \"aws s3 cp obsidian-linux-amd64 s3://$ARTIFACTS_BUCKET/binaries/obsidian-linux-amd64-latest\",\n        \"# Create and upload tarball with config\",\n        \"tar -czf obsidian-$VERSION.tar.gz obsidian-linux-amd64 config/production.yaml\",\n        \"aws s3 cp obsidian-$VERSION.tar.gz s3://$ARTIFACTS_BUCKET/releases/obsidian-$VERSION.tar.gz\",\n        \"aws s3 cp obsidian-$VERSION.tar.gz s3://$ARTIFACTS_BUCKET/releases/obsidian-latest.tar.gz\",\n        \"echo \\\"Binary uploaded to s3://$ARTIFACTS_BUCKET/binaries/obsidian-linux-amd64-latest\\\"\"\n      ]\n    }\n  },\n  \"artifacts\": {\n    \"files\": [\n      \"obsidian-linux-amd64\",\n      \"config/production.yaml\"\n    ],\n    \"name\": \"obsidian-$VERSION\"\n  }\n}",
     "Location": "https://github.com/hourglass/obsidian.git",
     "ReportBuildStatus": true,
     "Type": "GITHUB"
    },
    "Triggers": {
     "FilterGroups": [
      [
       {
        "Pattern": "PUSH",
        "Type": "EVENT"
       },
       {
        "Pattern": "refs/heads/main",
        "Type": "HEAD_REF"
       }
      ]
     ],
     "Webhook": true
    }
   },
   "Metadata": {
    "aws:cdk:path": "ObsidianEC2Stack/BuildPipeline/ObsidianBuildProject/Resource"
   }
  },
  "BuildTriggerBuildTriggerFunctionServiceRoleDACBC55F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ObsidianEC2Stack/BuildTrigger/BuildTriggerFunction/ServiceRole/Resource"
   }
  },
  "BuildTriggerBuildTriggerFunctionServiceRoleDefaultPolicy08135B70": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "codebuild:BatchGetBuilds",
        "codebuild:StartBuild"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "BuildPipelineObsidianBuildProject50DCE231",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "BuildTriggerBuildTriggerFunctionServiceRoleDefaultPolicy08135B70",
    "Roles": [
     {
      "Ref": "BuildTriggerBuildTriggerFunctionServiceRoleDACBC55F"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ObsidianEC2Stack/BuildTrigger/BuildTriggerFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "BuildTriggerBuildTriggerFunctionE297823E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": {
      "Fn::Join": [
       "",
       [
        "\n        const AWS = require('aws-sdk');\n        const codebuild = new AWS.CodeBuild();\n        \n        exports.handler = async (event) => {\n          const params = {\n            projectName: '",
        {
         "Ref": "BuildPipelineObsidianBuildProject50DCE231"
        },
        "',\n            sourceVersion: event.branch || 'main'\n          };\n          \n          try {\n            const result = await codebuild.startBuild(params).promise();\n            return {\n              statusCode: 200,\n              body: JSON.stringify({\n                message: 'Build started successfully',\n                buildId: result.build.id,\n                buildArn: result.build.arn\n              })\n            };\n          } catch (error) {\n            return {\n              statusCode: 500,\n              body: JSON.stringify({\n                message: 'Failed to start build',\n                error: error.message\n              })\n            };\n          }\n        };\n      "
       ]
      ]
     }
    },
    "FunctionName": "obsidian-build-trigger",
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "BuildTriggerBuildTriggerFunctionServiceRoleDACBC55F",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "BuildTriggerBuildTriggerFunctionServiceRoleDefaultPolicy08135B70",
    "BuildTriggerBuildTriggerFunctionServiceRoleDACBC55F"
   ],
   "Metadata": {
    "aws:cdk:path": "ObsidianEC2Stack/BuildTrigger/BuildTriggerFunction/Resource"
   }
  },
  "ObsidianVPCEA28C635": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "ObsidianEC2Stack/ObsidianVPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ObsidianEC2Stack/ObsidianVPC/Resource"
   }
  },
  "ObsidianVPCPublicSubnet1Subnet6E5CF338": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1a",
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "ObsidianEC2Stack/ObsidianVPC/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "ObsidianVPCEA28C635"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ObsidianEC2Stack/ObsidianVPC/PublicSubnet1/Subnet"
   }
  },
  "ObsidianVPCPublicSubnet1RouteTable60AD37EF": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "ObsidianEC2Stack/ObsidianVPC/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "ObsidianVPCEA28C635"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ObsidianEC2Stack/ObsidianVPC/PublicSubnet1/RouteTable"
   }
  },
  "ObsidianVPCPublicSubnet1RouteTableAssociationDBB7DB3F": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "ObsidianVPCPublicSubnet1RouteTable60AD37EF"
    },
    "SubnetId": {
     "Ref": "ObsidianVPCPublicSubnet1Subnet6E5CF338"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ObsidianEC2Stack/ObsidianVPC/PublicSubnet1/RouteTableAssociation"
   }
  },
  "ObsidianVPCPublicSubnet1DefaultRoute5DAF22B9": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "ObsidianVPCIGW78465481"
    },
    "RouteTableId": {
     "Ref": "ObsidianVPCPublicSubnet1RouteTable60AD37EF"
    }
   },
   "DependsOn": [
    "ObsidianVPCVPCGW0A1D0967"
   ],
   "Metadata": {
    "aws:cdk:path": "ObsidianEC2Stack/ObsidianVPC/PublicSubnet1/DefaultRoute"
   }
  },
  "ObsidianVPCPublicSubnet1EIPFFA2A4E6": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "ObsidianEC2Stack/ObsidianVPC/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ObsidianEC2Stack/ObsidianVPC/PublicSubnet1/EIP"
   }
  },
  "ObsidianVPCPublicSubnet1NATGatewayBC02EFB4": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "ObsidianVPCPublicSubnet1EIPFFA2A4E6",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "ObsidianVPCPublicSubnet1Subnet6E5CF338"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "ObsidianEC2Stack/ObsidianVPC/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "ObsidianVPCPublicSubnet1DefaultRoute5DAF22B9",
    "ObsidianVPCPublicSubnet1RouteTableAssociationDBB7DB3F"
   ],
   "Metadata": {
    "aws:cdk:path": "ObsidianEC2Stack/ObsidianVPC/PublicSubnet1/NATGateway"
   }
  },
  "ObsidianVPCPublicSubnet2SubnetEC5E69F9": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1b",
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "ObsidianEC2Stack/ObsidianVPC/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "ObsidianVPCEA28C635"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ObsidianEC2Stack/ObsidianVPC/PublicSubnet2/Subnet"
   }
  },
  "ObsidianVPCPublicSubnet2RouteTable5A441F69": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "ObsidianEC2Stack/ObsidianVPC/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "ObsidianVPCEA28C635"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ObsidianEC2Stack/ObsidianVPC/PublicSubnet2/RouteTable"
   }
  },
  "ObsidianVPCPublicSubnet2RouteTableAssociationB1161739": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "ObsidianVPCPublicSubnet2RouteTable5A441F69"
    },
    "SubnetId": {
     "Ref": "ObsidianVPCPublicSubnet2SubnetEC5E69F9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ObsidianEC2Stack/ObsidianVPC/PublicSubnet2/RouteTableAssociation"
   }
  },
  "ObsidianVPCPublicSubnet2DefaultRoute68ECB4E8": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "ObsidianVPCIGW78465481"
    },
    "RouteTableId": {
     "Ref": "ObsidianVPCPublicSubnet2RouteTable5A441F69"
    }
   },
   "DependsOn": [
    "ObsidianVPCVPCGW0A1D0967"
   ],
   "Metadata": {
    "aws:cdk:path": "ObsidianEC2Stack/ObsidianVPC/PublicSubnet2/DefaultRoute"
   }
  },
  "ObsidianVPCPrivateSubnet1Subnet8B53CAD6": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1a",
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "ObsidianEC2Stack/ObsidianVPC/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "ObsidianVPCEA28C635"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ObsidianEC2Stack/ObsidianVPC/PrivateSubnet1/Subnet"
   }
  },
  "ObsidianVPCPrivateSubnet1RouteTableCCC363B0": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "ObsidianEC2Stack/ObsidianVPC/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "ObsidianVPCEA28C635"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ObsidianEC2Stack/ObsidianVPC/PrivateSubnet1/RouteTable"
   }
  },
  "ObsidianVPCPrivateSubnet1RouteTableAssociation622B9CA0": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "ObsidianVPCPrivateSubnet1RouteTableCCC363B0"
    },
    "SubnetId": {
     "Ref": "ObsidianVPCPrivateSubnet1Subnet8B53CAD6"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ObsidianEC2Stack/ObsidianVPC/PrivateSubnet1/RouteTableAssociation"
   }
  },
  "ObsidianVPCPrivateSubnet1DefaultRoute665B69DC": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "ObsidianVPCPublicSubnet1NATGatewayBC02EFB4"
    },
    "RouteTableId": {
     "Ref": "ObsidianVPCPrivateSubnet1RouteTableCCC363B0"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ObsidianEC2Stack/ObsidianVPC/PrivateSubnet1/DefaultRoute"
   }
  },
  "ObsidianVPCPrivateSubnet2SubnetD726D1B1": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1b",
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "ObsidianEC2Stack/ObsidianVPC/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "ObsidianVPCEA28C635"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ObsidianEC2Stack/ObsidianVPC/PrivateSubnet2/Subnet"
   }
  },
  "ObsidianVPCPrivateSubnet2RouteTableC6D57B4D": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "ObsidianEC2Stack/ObsidianVPC/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "ObsidianVPCEA28C635"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ObsidianEC2Stack/ObsidianVPC/PrivateSubnet2/RouteTable"
   }
  },
  "ObsidianVPCPrivateSubnet2RouteTableAssociation9BBDB654": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "ObsidianVPCPrivateSubnet2RouteTableC6D57B4D"
    },
    "SubnetId": {
     "Ref": "ObsidianVPCPrivateSubnet2SubnetD726D1B1"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ObsidianEC2Stack/ObsidianVPC/PrivateSubnet2/RouteTableAssociation"
   }
  },
  "ObsidianVPCPrivateSubnet2DefaultRoute1EC745BE": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "ObsidianVPCPublicSubnet1NATGatewayBC02EFB4"
    },
    "RouteTableId": {
     "Ref": "ObsidianVPCPrivateSubnet2RouteTableC6D57B4D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ObsidianEC2Stack/ObsidianVPC/PrivateSubnet2/DefaultRoute"
   }
  },
  "ObsidianVPCIGW78465481": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "ObsidianEC2Stack/ObsidianVPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ObsidianEC2Stack/ObsidianVPC/IGW"
   }
  },
  "ObsidianVPCVPCGW0A1D0967": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "ObsidianVPCIGW78465481"
    },
    "VpcId": {
     "Ref": "ObsidianVPCEA28C635"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ObsidianEC2Stack/ObsidianVPC/VPCGW"
   }
  },
  "ObsidianVPCRestrictDefaultSecurityGroupCustomResource2A873BD3": {
   "Type": "Custom::VpcRestrictDefaultSG",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
      "Arn"
     ]
    },
    "DefaultSecurityGroupId": {
     "Fn::GetAtt": [
      "ObsidianVPCEA28C635",
      "DefaultSecurityGroup"
     ]
    },
    "Account": "767397703211"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ObsidianEC2Stack/ObsidianVPC/RestrictDefaultSecurityGroupCustomResource/Default"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": [
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:RevokeSecurityGroupIngress",
          "ec2:RevokeSecurityGroupEgress"
         ],
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:aws:ec2:us-east-1:767397703211:security-group/",
             {
              "Fn::GetAtt": [
               "ObsidianVPCEA28C635",
               "DefaultSecurityGroup"
              ]
             }
            ]
           ]
          }
         ]
        }
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ObsidianEC2Stack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-767397703211-us-east-1",
     "S3Key": "7f18a11296f35510ee16538afec983ed6312e12afbf81b777089a9f8e34e2474.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
   },
   "DependsOn": [
    "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
   ],
   "Metadata": {
    "aws:cdk:path": "ObsidianEC2Stack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler",
    "aws:asset:path": "asset.7f18a11296f35510ee16538afec983ed6312e12afbf81b777089a9f8e34e2474",
    "aws:asset:property": "Code"
   }
  },
  "ObsidianSecurityGroup1ACE74AC": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for Obsidian instances",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow HTTP traffic",
      "FromPort": 8080,
      "IpProtocol": "tcp",
      "ToPort": 8080
     },
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow gRPC traffic",
      "FromPort": 9090,
      "IpProtocol": "tcp",
      "ToPort": 9090
     },
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow metrics traffic",
      "FromPort": 9091,
      "IpProtocol": "tcp",
      "ToPort": 9091
     }
    ],
    "VpcId": {
     "Ref": "ObsidianVPCEA28C635"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ObsidianEC2Stack/ObsidianSecurityGroup/Resource"
   }
  },
  "ObsidianInstanceRole0321FBBC": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSSMManagedInstanceCore"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ObsidianEC2Stack/ObsidianInstanceRole/Resource"
   }
  },
  "ObsidianInstanceRoleDefaultPolicyB8CC292A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cloudwatch:PutMetricData",
        "ecr:BatchCheckLayerAvailability",
        "ecr:BatchGetImage",
        "ecr:DescribeImages",
        "ecr:GetAuthorizationToken",
        "ecr:GetDownloadUrlForLayer",
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "secretsmanager:DescribeSecret",
        "secretsmanager:GetSecretValue"
       ],
       "Effect": "Allow",
       "Resource": "arn:aws:secretsmanager:us-east-1:767397703211:secret:obsidian/*"
      },
      {
       "Action": [
        "s3:GetObject",
        "s3:ListBucket"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ArtifactsArtifactsBucket87810096",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ArtifactsArtifactsBucket87810096",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ObsidianInstanceRoleDefaultPolicyB8CC292A",
    "Roles": [
     {
      "Ref": "ObsidianInstanceRole0321FBBC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ObsidianEC2Stack/ObsidianInstanceRole/DefaultPolicy/Resource"
   }
  },
  "ObsidianLaunchTemplateProfile18964046": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "ObsidianInstanceRole0321FBBC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ObsidianEC2Stack/ObsidianLaunchTemplate/Profile"
   }
  },
  "ObsidianLaunchTemplate79735FF0": {
   "Type": "AWS::EC2::LaunchTemplate",
   "Properties": {
    "LaunchTemplateData": {
     "BlockDeviceMappings": [
      {
       "DeviceName": "/dev/xvda",
       "Ebs": {
        "Encrypted": true,
        "VolumeSize": 100,
        "VolumeType": "gp3"
       }
      }
     ],
     "IamInstanceProfile": {
      "Arn": {
       "Fn::GetAtt": [
        "ObsidianLaunchTemplateProfile18964046",
        "Arn"
       ]
      }
     },
     "ImageId": {
      "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amikernel510hvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
     },
     "InstanceType": "m5.2xlarge",
     "SecurityGroupIds": [
      {
       "Fn::GetAtt": [
        "ObsidianSecurityGroup1ACE74AC",
        "GroupId"
       ]
      }
     ],
     "TagSpecifications": [
      {
       "ResourceType": "instance",
       "Tags": [
        {
         "Key": "Name",
         "Value": "ObsidianEC2Stack/ObsidianLaunchTemplate"
        }
       ]
      },
      {
       "ResourceType": "volume",
       "Tags": [
        {
         "Key": "Name",
         "Value": "ObsidianEC2Stack/ObsidianLaunchTemplate"
        }
       ]
      }
     ],
     "UserData": {
      "Fn::Base64": {
       "Fn::Join": [
        "",
        [
         "#!/bin/bash\nyum update -y\nyum install -y docker\nservice docker start\nusermod -a -G docker ec2-user\ncurl -L \"https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\nchmod +x /usr/local/bin/docker-compose\nmkdir -p /opt/obsidian\ncd /opt/obsidian\ncat > /opt/obsidian/config.yaml << EOF\nserver:\n  port: 8080\n  grpcPort: 9090\n  maxConnections: 1000\n  readTimeout: 30s\n  writeTimeout: 30s\n  shutdownTimeout: 30s\n\norchestrator:\n  resources:\n    maxCpu: \"4\"\n    maxMemory: \"8Gi\"\n    maxDisk: \"50Gi\"\n    maxContainers: 10\n  queue:\n    maxQueueSize: 1000\n    taskTimeout: 5m\n    retryPolicy:\n      maxRetries: 3\n      backoffMultiplier: 2\n  container:\n    runtime: \"docker\"\n    network: \"bridge\"\n    pullPolicy: \"IfNotPresent\"\n\nregistry:\n  registries:\n    - name: \"ecr\"\n      type: \"aws-ecr\"\n      region: \"us-east-1\"\n      credentialSource: \"iam-role\"\n\nproxy:\n  backends: []\n\nlogging:\n  level: \"info\"\n  format: \"json\"\n  outputPath: \"/var/log/obsidian/obsidian.log\"\n\nmonitoring:\n  metricsEnabled: true\n  metricsPort: 9091\nEOF\naws s3 cp s3://",
         {
          "Ref": "ArtifactsArtifactsBucket87810096"
         },
         "/binaries/obsidian-linux-amd64-latest /opt/obsidian/obsidian\nchmod +x /opt/obsidian/obsidian\nif [ ! -f /opt/obsidian/obsidian ]; then\n  echo \"ERROR: Failed to download Obsidian binary from S3\"\n  exit 1\nfi\ncat > /etc/systemd/system/obsidian.service << EOF\n[Unit]\nDescription=Obsidian Gateway\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nType=simple\nExecStart=/opt/obsidian/obsidian --config=/opt/obsidian/config.yaml\nRestart=always\nRestartSec=10\nStandardOutput=journal\nStandardError=journal\nSyslogIdentifier=obsidian\n\n[Install]\nWantedBy=multi-user.target\nEOF\nsystemctl daemon-reload\nsystemctl enable obsidian\nsystemctl start obsidian"
        ]
       ]
      }
     }
    },
    "TagSpecifications": [
     {
      "ResourceType": "launch-template",
      "Tags": [
       {
        "Key": "Name",
        "Value": "ObsidianEC2Stack/ObsidianLaunchTemplate"
       }
      ]
     }
    ]
   },
   "DependsOn": [
    "ObsidianInstanceRoleDefaultPolicyB8CC292A",
    "ObsidianInstanceRole0321FBBC"
   ],
   "Metadata": {
    "aws:cdk:path": "ObsidianEC2Stack/ObsidianLaunchTemplate/Resource"
   }
  },
  "ObsidianASGF6FBBDA5": {
   "Type": "AWS::AutoScaling::AutoScalingGroup",
   "Properties": {
    "HealthCheckGracePeriod": 300,
    "HealthCheckType": "EC2",
    "LaunchTemplate": {
     "LaunchTemplateId": {
      "Ref": "ObsidianLaunchTemplate79735FF0"
     },
     "Version": {
      "Fn::GetAtt": [
       "ObsidianLaunchTemplate79735FF0",
       "LatestVersionNumber"
      ]
     }
    },
    "MaxSize": "1",
    "MinSize": "1",
    "VPCZoneIdentifier": [
     {
      "Ref": "ObsidianVPCPrivateSubnet1Subnet8B53CAD6"
     },
     {
      "Ref": "ObsidianVPCPrivateSubnet2SubnetD726D1B1"
     }
    ]
   },
   "UpdatePolicy": {
    "AutoScalingScheduledAction": {
     "IgnoreUnmodifiedGroupSizeProperties": true
    }
   },
   "Metadata": {
    "aws:cdk:path": "ObsidianEC2Stack/ObsidianASG/ASG"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/3WR3WrDMAyFn6X3rtdmT5CVrRTGFpLS26EoauvWsYMttxTjdx9J+kMHuzpHn4SOQJmcz2dyNoGzn2JznGpVy1gx4FHA2f9E/yrjW8AjsVhszeiSQNtQHZRuZCycPRAO3atNQkErY2k19XTQwmqFl2Ho7lbGMxikwtmt0pSEhrZuQMaPYJCVNf3QzSdBmMm46bCnm2IhilBrhVWozXjbw5U2MK2hHvNH/mC59xYV3AKGRm/eV0UvX8BLYDrDRRROnYDpsXhlmJyh+8B4ybXKmQH3LRkWFWFwii9LZ0M33PAEPiEY3K+p7TSM2c8kCQhsPYJWZidjHthWY3Ff+Jel1NPvwF1gUZK3wSGJRfBs20e5Nf+0CmdPqiEncu+JK4adMrvhW+CgJSaXhLENyYN/OWWZnGdyNjl4paYuGFYtyXLUX8ohxvtPAgAA"
   },
   "Metadata": {
    "aws:cdk:path": "ObsidianEC2Stack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "ArtifactsArtifactsBucketName30AED189": {
   "Description": "S3 bucket for Obsidian artifacts",
   "Value": {
    "Ref": "ArtifactsArtifactsBucket87810096"
   }
  },
  "BuildPipelineBuildProjectName1280CBCD": {
   "Description": "CodeBuild project name",
   "Value": {
    "Ref": "BuildPipelineObsidianBuildProject50DCE231"
   }
  },
  "BuildTriggerBuildTriggerFunctionNameEF078459": {
   "Description": "Lambda function to trigger builds",
   "Value": {
    "Ref": "BuildTriggerBuildTriggerFunctionE297823E"
   }
  },
  "BuildTriggerTriggerBuildCommand1B54EC12": {
   "Description": "Command to trigger a build",
   "Value": {
    "Fn::Join": [
     "",
     [
      "aws lambda invoke --function-name ",
      {
       "Ref": "BuildTriggerBuildTriggerFunctionE297823E"
      },
      " --payload '{\"branch\":\"main\"}' response.json"
     ]
    ]
   }
  },
  "ObsidianEndpoint": {
   "Description": "Obsidian Gateway endpoint",
   "Value": {
    "Fn::Join": [
     "",
     [
      "http://",
      {
       "Fn::GetAtt": [
        "ObsidianSecurityGroup1ACE74AC",
        "GroupId"
       ]
      },
      ".us-east-1.elb.amazonaws.com:8080"
     ]
    ]
   }
  },
  "SecurityGroupId": {
   "Description": "Security group ID for Obsidian instances",
   "Value": {
    "Fn::GetAtt": [
     "ObsidianSecurityGroup1ACE74AC",
     "GroupId"
    ]
   }
  }
 },
 "Parameters": {
  "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amikernel510hvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": {
   "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
   "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-kernel-5.10-hvm-x86_64-gp2"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}