// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: api/proto/registry.proto

package registry

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegistryType int32

const (
	RegistryType_REGISTRY_TYPE_UNSPECIFIED RegistryType = 0
	RegistryType_REGISTRY_TYPE_ECR         RegistryType = 1
	RegistryType_REGISTRY_TYPE_GHCR        RegistryType = 2
	RegistryType_REGISTRY_TYPE_DOCKER_HUB  RegistryType = 3
)

// Enum value maps for RegistryType.
var (
	RegistryType_name = map[int32]string{
		0: "REGISTRY_TYPE_UNSPECIFIED",
		1: "REGISTRY_TYPE_ECR",
		2: "REGISTRY_TYPE_GHCR",
		3: "REGISTRY_TYPE_DOCKER_HUB",
	}
	RegistryType_value = map[string]int32{
		"REGISTRY_TYPE_UNSPECIFIED": 0,
		"REGISTRY_TYPE_ECR":         1,
		"REGISTRY_TYPE_GHCR":        2,
		"REGISTRY_TYPE_DOCKER_HUB":  3,
	}
)

func (x RegistryType) Enum() *RegistryType {
	p := new(RegistryType)
	*p = x
	return p
}

func (x RegistryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RegistryType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_registry_proto_enumTypes[0].Descriptor()
}

func (RegistryType) Type() protoreflect.EnumType {
	return &file_api_proto_registry_proto_enumTypes[0]
}

func (x RegistryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RegistryType.Descriptor instead.
func (RegistryType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_registry_proto_rawDescGZIP(), []int{0}
}

type CredentialSource int32

const (
	CredentialSource_CREDENTIAL_SOURCE_UNSPECIFIED CredentialSource = 0
	CredentialSource_CREDENTIAL_SOURCE_IAM_ROLE    CredentialSource = 1
	CredentialSource_CREDENTIAL_SOURCE_SECRET      CredentialSource = 2
	CredentialSource_CREDENTIAL_SOURCE_ENV         CredentialSource = 3
)

// Enum value maps for CredentialSource.
var (
	CredentialSource_name = map[int32]string{
		0: "CREDENTIAL_SOURCE_UNSPECIFIED",
		1: "CREDENTIAL_SOURCE_IAM_ROLE",
		2: "CREDENTIAL_SOURCE_SECRET",
		3: "CREDENTIAL_SOURCE_ENV",
	}
	CredentialSource_value = map[string]int32{
		"CREDENTIAL_SOURCE_UNSPECIFIED": 0,
		"CREDENTIAL_SOURCE_IAM_ROLE":    1,
		"CREDENTIAL_SOURCE_SECRET":      2,
		"CREDENTIAL_SOURCE_ENV":         3,
	}
)

func (x CredentialSource) Enum() *CredentialSource {
	p := new(CredentialSource)
	*p = x
	return p
}

func (x CredentialSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CredentialSource) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_registry_proto_enumTypes[1].Descriptor()
}

func (CredentialSource) Type() protoreflect.EnumType {
	return &file_api_proto_registry_proto_enumTypes[1]
}

func (x CredentialSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CredentialSource.Descriptor instead.
func (CredentialSource) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_registry_proto_rawDescGZIP(), []int{1}
}

type ImageReference struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reference     string                 `protobuf:"bytes,1,opt,name=reference,proto3" json:"reference,omitempty"` // e.g., "ghcr.io/org/image:tag"
	RegistryName  string                 `protobuf:"bytes,2,opt,name=registry_name,json=registryName,proto3" json:"registry_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageReference) Reset() {
	*x = ImageReference{}
	mi := &file_api_proto_registry_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageReference) ProtoMessage() {}

func (x *ImageReference) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_registry_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageReference.ProtoReflect.Descriptor instead.
func (*ImageReference) Descriptor() ([]byte, []int) {
	return file_api_proto_registry_proto_rawDescGZIP(), []int{0}
}

func (x *ImageReference) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *ImageReference) GetRegistryName() string {
	if x != nil {
		return x.RegistryName
	}
	return ""
}

type Image struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Digest        string                 `protobuf:"bytes,2,opt,name=digest,proto3" json:"digest,omitempty"`
	Reference     string                 `protobuf:"bytes,3,opt,name=reference,proto3" json:"reference,omitempty"`
	SizeBytes     int64                  `protobuf:"varint,4,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	PulledAt      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=pulled_at,json=pulledAt,proto3" json:"pulled_at,omitempty"`
	Tags          []string               `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,8,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Image) Reset() {
	*x = Image{}
	mi := &file_api_proto_registry_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_registry_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_api_proto_registry_proto_rawDescGZIP(), []int{1}
}

func (x *Image) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Image) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

func (x *Image) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *Image) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

func (x *Image) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Image) GetPulledAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PulledAt
	}
	return nil
}

func (x *Image) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Image) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type ImageID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageID) Reset() {
	*x = ImageID{}
	mi := &file_api_proto_registry_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageID) ProtoMessage() {}

func (x *ImageID) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_registry_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageID.ProtoReflect.Descriptor instead.
func (*ImageID) Descriptor() ([]byte, []int) {
	return file_api_proto_registry_proto_rawDescGZIP(), []int{2}
}

func (x *ImageID) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListImagesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filter        string                 `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string                 `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListImagesRequest) Reset() {
	*x = ListImagesRequest{}
	mi := &file_api_proto_registry_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListImagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImagesRequest) ProtoMessage() {}

func (x *ListImagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_registry_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImagesRequest.ProtoReflect.Descriptor instead.
func (*ListImagesRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_registry_proto_rawDescGZIP(), []int{3}
}

func (x *ListImagesRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListImagesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListImagesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ImageList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Images        []*Image               `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageList) Reset() {
	*x = ImageList{}
	mi := &file_api_proto_registry_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageList) ProtoMessage() {}

func (x *ImageList) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_registry_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageList.ProtoReflect.Descriptor instead.
func (*ImageList) Descriptor() ([]byte, []int) {
	return file_api_proto_registry_proto_rawDescGZIP(), []int{4}
}

func (x *ImageList) GetImages() []*Image {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *ImageList) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type RegistryConfig struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Name             string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type             RegistryType           `protobuf:"varint,2,opt,name=type,proto3,enum=obsidian.registry.v1.RegistryType" json:"type,omitempty"`
	Url              string                 `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Region           string                 `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	CredentialSource CredentialSource       `protobuf:"varint,5,opt,name=credential_source,json=credentialSource,proto3,enum=obsidian.registry.v1.CredentialSource" json:"credential_source,omitempty"`
	SecretName       string                 `protobuf:"bytes,6,opt,name=secret_name,json=secretName,proto3" json:"secret_name,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RegistryConfig) Reset() {
	*x = RegistryConfig{}
	mi := &file_api_proto_registry_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegistryConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistryConfig) ProtoMessage() {}

func (x *RegistryConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_registry_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistryConfig.ProtoReflect.Descriptor instead.
func (*RegistryConfig) Descriptor() ([]byte, []int) {
	return file_api_proto_registry_proto_rawDescGZIP(), []int{5}
}

func (x *RegistryConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegistryConfig) GetType() RegistryType {
	if x != nil {
		return x.Type
	}
	return RegistryType_REGISTRY_TYPE_UNSPECIFIED
}

func (x *RegistryConfig) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *RegistryConfig) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *RegistryConfig) GetCredentialSource() CredentialSource {
	if x != nil {
		return x.CredentialSource
	}
	return CredentialSource_CREDENTIAL_SOURCE_UNSPECIFIED
}

func (x *RegistryConfig) GetSecretName() string {
	if x != nil {
		return x.SecretName
	}
	return ""
}

type Registry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          RegistryType           `protobuf:"varint,2,opt,name=type,proto3,enum=obsidian.registry.v1.RegistryType" json:"type,omitempty"`
	Url           string                 `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Enabled       bool                   `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Registry) Reset() {
	*x = Registry{}
	mi := &file_api_proto_registry_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Registry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Registry) ProtoMessage() {}

func (x *Registry) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_registry_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Registry.ProtoReflect.Descriptor instead.
func (*Registry) Descriptor() ([]byte, []int) {
	return file_api_proto_registry_proto_rawDescGZIP(), []int{6}
}

func (x *Registry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Registry) GetType() RegistryType {
	if x != nil {
		return x.Type
	}
	return RegistryType_REGISTRY_TYPE_UNSPECIFIED
}

func (x *Registry) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Registry) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Registry) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type RegistryCredentials struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RegistryName  string                 `protobuf:"bytes,1,opt,name=registry_name,json=registryName,proto3" json:"registry_name,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Token         string                 `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegistryCredentials) Reset() {
	*x = RegistryCredentials{}
	mi := &file_api_proto_registry_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegistryCredentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistryCredentials) ProtoMessage() {}

func (x *RegistryCredentials) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_registry_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistryCredentials.ProtoReflect.Descriptor instead.
func (*RegistryCredentials) Descriptor() ([]byte, []int) {
	return file_api_proto_registry_proto_rawDescGZIP(), []int{7}
}

func (x *RegistryCredentials) GetRegistryName() string {
	if x != nil {
		return x.RegistryName
	}
	return ""
}

func (x *RegistryCredentials) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RegistryCredentials) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RegistryCredentials) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ScanResult struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	ImageId                 string                 `protobuf:"bytes,1,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	ScannedAt               *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=scanned_at,json=scannedAt,proto3" json:"scanned_at,omitempty"`
	CriticalVulnerabilities int32                  `protobuf:"varint,3,opt,name=critical_vulnerabilities,json=criticalVulnerabilities,proto3" json:"critical_vulnerabilities,omitempty"`
	HighVulnerabilities     int32                  `protobuf:"varint,4,opt,name=high_vulnerabilities,json=highVulnerabilities,proto3" json:"high_vulnerabilities,omitempty"`
	MediumVulnerabilities   int32                  `protobuf:"varint,5,opt,name=medium_vulnerabilities,json=mediumVulnerabilities,proto3" json:"medium_vulnerabilities,omitempty"`
	LowVulnerabilities      int32                  `protobuf:"varint,6,opt,name=low_vulnerabilities,json=lowVulnerabilities,proto3" json:"low_vulnerabilities,omitempty"`
	Vulnerabilities         []*Vulnerability       `protobuf:"bytes,7,rep,name=vulnerabilities,proto3" json:"vulnerabilities,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ScanResult) Reset() {
	*x = ScanResult{}
	mi := &file_api_proto_registry_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanResult) ProtoMessage() {}

func (x *ScanResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_registry_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanResult.ProtoReflect.Descriptor instead.
func (*ScanResult) Descriptor() ([]byte, []int) {
	return file_api_proto_registry_proto_rawDescGZIP(), []int{8}
}

func (x *ScanResult) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *ScanResult) GetScannedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ScannedAt
	}
	return nil
}

func (x *ScanResult) GetCriticalVulnerabilities() int32 {
	if x != nil {
		return x.CriticalVulnerabilities
	}
	return 0
}

func (x *ScanResult) GetHighVulnerabilities() int32 {
	if x != nil {
		return x.HighVulnerabilities
	}
	return 0
}

func (x *ScanResult) GetMediumVulnerabilities() int32 {
	if x != nil {
		return x.MediumVulnerabilities
	}
	return 0
}

func (x *ScanResult) GetLowVulnerabilities() int32 {
	if x != nil {
		return x.LowVulnerabilities
	}
	return 0
}

func (x *ScanResult) GetVulnerabilities() []*Vulnerability {
	if x != nil {
		return x.Vulnerabilities
	}
	return nil
}

type Vulnerability struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	CveId            string                 `protobuf:"bytes,1,opt,name=cve_id,json=cveId,proto3" json:"cve_id,omitempty"`
	Severity         string                 `protobuf:"bytes,2,opt,name=severity,proto3" json:"severity,omitempty"`
	PackageName      string                 `protobuf:"bytes,3,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	InstalledVersion string                 `protobuf:"bytes,4,opt,name=installed_version,json=installedVersion,proto3" json:"installed_version,omitempty"`
	FixedVersion     string                 `protobuf:"bytes,5,opt,name=fixed_version,json=fixedVersion,proto3" json:"fixed_version,omitempty"`
	Description      string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Vulnerability) Reset() {
	*x = Vulnerability{}
	mi := &file_api_proto_registry_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Vulnerability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vulnerability) ProtoMessage() {}

func (x *Vulnerability) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_registry_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vulnerability.ProtoReflect.Descriptor instead.
func (*Vulnerability) Descriptor() ([]byte, []int) {
	return file_api_proto_registry_proto_rawDescGZIP(), []int{9}
}

func (x *Vulnerability) GetCveId() string {
	if x != nil {
		return x.CveId
	}
	return ""
}

func (x *Vulnerability) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *Vulnerability) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *Vulnerability) GetInstalledVersion() string {
	if x != nil {
		return x.InstalledVersion
	}
	return ""
}

func (x *Vulnerability) GetFixedVersion() string {
	if x != nil {
		return x.FixedVersion
	}
	return ""
}

func (x *Vulnerability) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Policy struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ImageId       string                 `protobuf:"bytes,1,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	Allowed       bool                   `protobuf:"varint,2,opt,name=allowed,proto3" json:"allowed,omitempty"`
	Violations    []string               `protobuf:"bytes,3,rep,name=violations,proto3" json:"violations,omitempty"`
	EvaluatedAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=evaluated_at,json=evaluatedAt,proto3" json:"evaluated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Policy) Reset() {
	*x = Policy{}
	mi := &file_api_proto_registry_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Policy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Policy) ProtoMessage() {}

func (x *Policy) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_registry_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Policy.ProtoReflect.Descriptor instead.
func (*Policy) Descriptor() ([]byte, []int) {
	return file_api_proto_registry_proto_rawDescGZIP(), []int{10}
}

func (x *Policy) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *Policy) GetAllowed() bool {
	if x != nil {
		return x.Allowed
	}
	return false
}

func (x *Policy) GetViolations() []string {
	if x != nil {
		return x.Violations
	}
	return nil
}

func (x *Policy) GetEvaluatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.EvaluatedAt
	}
	return nil
}

var File_api_proto_registry_proto protoreflect.FileDescriptor

const file_api_proto_registry_proto_rawDesc = "" +
	"\n" +
	"\x18api/proto/registry.proto\x12\x14obsidian.registry.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bgoogle/protobuf/empty.proto\"S\n" +
	"\x0eImageReference\x12\x1c\n" +
	"\treference\x18\x01 \x01(\tR\treference\x12#\n" +
	"\rregistry_name\x18\x02 \x01(\tR\fregistryName\"\xf0\x02\n" +
	"\x05Image\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06digest\x18\x02 \x01(\tR\x06digest\x12\x1c\n" +
	"\treference\x18\x03 \x01(\tR\treference\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\x04 \x01(\x03R\tsizeBytes\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x127\n" +
	"\tpulled_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\bpulledAt\x12\x12\n" +
	"\x04tags\x18\a \x03(\tR\x04tags\x12?\n" +
	"\x06labels\x18\b \x03(\v2'.obsidian.registry.v1.Image.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x19\n" +
	"\aImageID\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"g\n" +
	"\x11ListImagesRequest\x12\x16\n" +
	"\x06filter\x18\x01 \x01(\tR\x06filter\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\"h\n" +
	"\tImageList\x123\n" +
	"\x06images\x18\x01 \x03(\v2\x1b.obsidian.registry.v1.ImageR\x06images\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\xfc\x01\n" +
	"\x0eRegistryConfig\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x126\n" +
	"\x04type\x18\x02 \x01(\x0e2\".obsidian.registry.v1.RegistryTypeR\x04type\x12\x10\n" +
	"\x03url\x18\x03 \x01(\tR\x03url\x12\x16\n" +
	"\x06region\x18\x04 \x01(\tR\x06region\x12S\n" +
	"\x11credential_source\x18\x05 \x01(\x0e2&.obsidian.registry.v1.CredentialSourceR\x10credentialSource\x12\x1f\n" +
	"\vsecret_name\x18\x06 \x01(\tR\n" +
	"secretName\"\xbd\x01\n" +
	"\bRegistry\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x126\n" +
	"\x04type\x18\x02 \x01(\x0e2\".obsidian.registry.v1.RegistryTypeR\x04type\x12\x10\n" +
	"\x03url\x18\x03 \x01(\tR\x03url\x12\x18\n" +
	"\aenabled\x18\x04 \x01(\bR\aenabled\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"\x88\x01\n" +
	"\x13RegistryCredentials\x12#\n" +
	"\rregistry_name\x18\x01 \x01(\tR\fregistryName\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\x12\x14\n" +
	"\x05token\x18\x04 \x01(\tR\x05token\"\x87\x03\n" +
	"\n" +
	"ScanResult\x12\x19\n" +
	"\bimage_id\x18\x01 \x01(\tR\aimageId\x129\n" +
	"\n" +
	"scanned_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tscannedAt\x129\n" +
	"\x18critical_vulnerabilities\x18\x03 \x01(\x05R\x17criticalVulnerabilities\x121\n" +
	"\x14high_vulnerabilities\x18\x04 \x01(\x05R\x13highVulnerabilities\x125\n" +
	"\x16medium_vulnerabilities\x18\x05 \x01(\x05R\x15mediumVulnerabilities\x12/\n" +
	"\x13low_vulnerabilities\x18\x06 \x01(\x05R\x12lowVulnerabilities\x12M\n" +
	"\x0fvulnerabilities\x18\a \x03(\v2#.obsidian.registry.v1.VulnerabilityR\x0fvulnerabilities\"\xd9\x01\n" +
	"\rVulnerability\x12\x15\n" +
	"\x06cve_id\x18\x01 \x01(\tR\x05cveId\x12\x1a\n" +
	"\bseverity\x18\x02 \x01(\tR\bseverity\x12!\n" +
	"\fpackage_name\x18\x03 \x01(\tR\vpackageName\x12+\n" +
	"\x11installed_version\x18\x04 \x01(\tR\x10installedVersion\x12#\n" +
	"\rfixed_version\x18\x05 \x01(\tR\ffixedVersion\x12 \n" +
	"\vdescription\x18\x06 \x01(\tR\vdescription\"\x9c\x01\n" +
	"\x06Policy\x12\x19\n" +
	"\bimage_id\x18\x01 \x01(\tR\aimageId\x12\x18\n" +
	"\aallowed\x18\x02 \x01(\bR\aallowed\x12\x1e\n" +
	"\n" +
	"violations\x18\x03 \x03(\tR\n" +
	"violations\x12=\n" +
	"\fevaluated_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\vevaluatedAt*z\n" +
	"\fRegistryType\x12\x1d\n" +
	"\x19REGISTRY_TYPE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11REGISTRY_TYPE_ECR\x10\x01\x12\x16\n" +
	"\x12REGISTRY_TYPE_GHCR\x10\x02\x12\x1c\n" +
	"\x18REGISTRY_TYPE_DOCKER_HUB\x10\x03*\x8e\x01\n" +
	"\x10CredentialSource\x12!\n" +
	"\x1dCREDENTIAL_SOURCE_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aCREDENTIAL_SOURCE_IAM_ROLE\x10\x01\x12\x1c\n" +
	"\x18CREDENTIAL_SOURCE_SECRET\x10\x02\x12\x19\n" +
	"\x15CREDENTIAL_SOURCE_ENV\x10\x032\x99\x05\n" +
	"\x0fRegistryService\x12N\n" +
	"\tPullImage\x12$.obsidian.registry.v1.ImageReference\x1a\x1b.obsidian.registry.v1.Image\x12F\n" +
	"\bGetImage\x12\x1d.obsidian.registry.v1.ImageID\x1a\x1b.obsidian.registry.v1.Image\x12V\n" +
	"\n" +
	"ListImages\x12'.obsidian.registry.v1.ListImagesRequest\x1a\x1f.obsidian.registry.v1.ImageList\x12D\n" +
	"\vDeleteImage\x12\x1d.obsidian.registry.v1.ImageID\x1a\x16.google.protobuf.Empty\x12S\n" +
	"\vAddRegistry\x12$.obsidian.registry.v1.RegistryConfig\x1a\x1e.obsidian.registry.v1.Registry\x12^\n" +
	"\x19UpdateRegistryCredentials\x12).obsidian.registry.v1.RegistryCredentials\x1a\x16.google.protobuf.Empty\x12L\n" +
	"\tScanImage\x12\x1d.obsidian.registry.v1.ImageID\x1a .obsidian.registry.v1.ScanResult\x12M\n" +
	"\x0eGetImagePolicy\x12\x1d.obsidian.registry.v1.ImageID\x1a\x1c.obsidian.registry.v1.PolicyB2Z0github.com/hourglass/obsidian/api/proto/registryb\x06proto3"

var (
	file_api_proto_registry_proto_rawDescOnce sync.Once
	file_api_proto_registry_proto_rawDescData []byte
)

func file_api_proto_registry_proto_rawDescGZIP() []byte {
	file_api_proto_registry_proto_rawDescOnce.Do(func() {
		file_api_proto_registry_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_registry_proto_rawDesc), len(file_api_proto_registry_proto_rawDesc)))
	})
	return file_api_proto_registry_proto_rawDescData
}

var file_api_proto_registry_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_proto_registry_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_api_proto_registry_proto_goTypes = []any{
	(RegistryType)(0),             // 0: obsidian.registry.v1.RegistryType
	(CredentialSource)(0),         // 1: obsidian.registry.v1.CredentialSource
	(*ImageReference)(nil),        // 2: obsidian.registry.v1.ImageReference
	(*Image)(nil),                 // 3: obsidian.registry.v1.Image
	(*ImageID)(nil),               // 4: obsidian.registry.v1.ImageID
	(*ListImagesRequest)(nil),     // 5: obsidian.registry.v1.ListImagesRequest
	(*ImageList)(nil),             // 6: obsidian.registry.v1.ImageList
	(*RegistryConfig)(nil),        // 7: obsidian.registry.v1.RegistryConfig
	(*Registry)(nil),              // 8: obsidian.registry.v1.Registry
	(*RegistryCredentials)(nil),   // 9: obsidian.registry.v1.RegistryCredentials
	(*ScanResult)(nil),            // 10: obsidian.registry.v1.ScanResult
	(*Vulnerability)(nil),         // 11: obsidian.registry.v1.Vulnerability
	(*Policy)(nil),                // 12: obsidian.registry.v1.Policy
	nil,                           // 13: obsidian.registry.v1.Image.LabelsEntry
	(*timestamppb.Timestamp)(nil), // 14: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 15: google.protobuf.Empty
}
var file_api_proto_registry_proto_depIdxs = []int32{
	14, // 0: obsidian.registry.v1.Image.created_at:type_name -> google.protobuf.Timestamp
	14, // 1: obsidian.registry.v1.Image.pulled_at:type_name -> google.protobuf.Timestamp
	13, // 2: obsidian.registry.v1.Image.labels:type_name -> obsidian.registry.v1.Image.LabelsEntry
	3,  // 3: obsidian.registry.v1.ImageList.images:type_name -> obsidian.registry.v1.Image
	0,  // 4: obsidian.registry.v1.RegistryConfig.type:type_name -> obsidian.registry.v1.RegistryType
	1,  // 5: obsidian.registry.v1.RegistryConfig.credential_source:type_name -> obsidian.registry.v1.CredentialSource
	0,  // 6: obsidian.registry.v1.Registry.type:type_name -> obsidian.registry.v1.RegistryType
	14, // 7: obsidian.registry.v1.Registry.created_at:type_name -> google.protobuf.Timestamp
	14, // 8: obsidian.registry.v1.ScanResult.scanned_at:type_name -> google.protobuf.Timestamp
	11, // 9: obsidian.registry.v1.ScanResult.vulnerabilities:type_name -> obsidian.registry.v1.Vulnerability
	14, // 10: obsidian.registry.v1.Policy.evaluated_at:type_name -> google.protobuf.Timestamp
	2,  // 11: obsidian.registry.v1.RegistryService.PullImage:input_type -> obsidian.registry.v1.ImageReference
	4,  // 12: obsidian.registry.v1.RegistryService.GetImage:input_type -> obsidian.registry.v1.ImageID
	5,  // 13: obsidian.registry.v1.RegistryService.ListImages:input_type -> obsidian.registry.v1.ListImagesRequest
	4,  // 14: obsidian.registry.v1.RegistryService.DeleteImage:input_type -> obsidian.registry.v1.ImageID
	7,  // 15: obsidian.registry.v1.RegistryService.AddRegistry:input_type -> obsidian.registry.v1.RegistryConfig
	9,  // 16: obsidian.registry.v1.RegistryService.UpdateRegistryCredentials:input_type -> obsidian.registry.v1.RegistryCredentials
	4,  // 17: obsidian.registry.v1.RegistryService.ScanImage:input_type -> obsidian.registry.v1.ImageID
	4,  // 18: obsidian.registry.v1.RegistryService.GetImagePolicy:input_type -> obsidian.registry.v1.ImageID
	3,  // 19: obsidian.registry.v1.RegistryService.PullImage:output_type -> obsidian.registry.v1.Image
	3,  // 20: obsidian.registry.v1.RegistryService.GetImage:output_type -> obsidian.registry.v1.Image
	6,  // 21: obsidian.registry.v1.RegistryService.ListImages:output_type -> obsidian.registry.v1.ImageList
	15, // 22: obsidian.registry.v1.RegistryService.DeleteImage:output_type -> google.protobuf.Empty
	8,  // 23: obsidian.registry.v1.RegistryService.AddRegistry:output_type -> obsidian.registry.v1.Registry
	15, // 24: obsidian.registry.v1.RegistryService.UpdateRegistryCredentials:output_type -> google.protobuf.Empty
	10, // 25: obsidian.registry.v1.RegistryService.ScanImage:output_type -> obsidian.registry.v1.ScanResult
	12, // 26: obsidian.registry.v1.RegistryService.GetImagePolicy:output_type -> obsidian.registry.v1.Policy
	19, // [19:27] is the sub-list for method output_type
	11, // [11:19] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_api_proto_registry_proto_init() }
func file_api_proto_registry_proto_init() {
	if File_api_proto_registry_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_registry_proto_rawDesc), len(file_api_proto_registry_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_registry_proto_goTypes,
		DependencyIndexes: file_api_proto_registry_proto_depIdxs,
		EnumInfos:         file_api_proto_registry_proto_enumTypes,
		MessageInfos:      file_api_proto_registry_proto_msgTypes,
	}.Build()
	File_api_proto_registry_proto = out.File
	file_api_proto_registry_proto_goTypes = nil
	file_api_proto_registry_proto_depIdxs = nil
}
