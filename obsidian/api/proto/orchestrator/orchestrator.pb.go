// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: api/proto/orchestrator.proto

package orchestrator

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ContainerState int32

const (
	ContainerState_CONTAINER_STATE_UNSPECIFIED ContainerState = 0
	ContainerState_CONTAINER_STATE_CREATED     ContainerState = 1
	ContainerState_CONTAINER_STATE_RUNNING     ContainerState = 2
	ContainerState_CONTAINER_STATE_STOPPED     ContainerState = 3
	ContainerState_CONTAINER_STATE_FAILED      ContainerState = 4
)

// Enum value maps for ContainerState.
var (
	ContainerState_name = map[int32]string{
		0: "CONTAINER_STATE_UNSPECIFIED",
		1: "CONTAINER_STATE_CREATED",
		2: "CONTAINER_STATE_RUNNING",
		3: "CONTAINER_STATE_STOPPED",
		4: "CONTAINER_STATE_FAILED",
	}
	ContainerState_value = map[string]int32{
		"CONTAINER_STATE_UNSPECIFIED": 0,
		"CONTAINER_STATE_CREATED":     1,
		"CONTAINER_STATE_RUNNING":     2,
		"CONTAINER_STATE_STOPPED":     3,
		"CONTAINER_STATE_FAILED":      4,
	}
)

func (x ContainerState) Enum() *ContainerState {
	p := new(ContainerState)
	*p = x
	return p
}

func (x ContainerState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContainerState) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_orchestrator_proto_enumTypes[0].Descriptor()
}

func (ContainerState) Type() protoreflect.EnumType {
	return &file_api_proto_orchestrator_proto_enumTypes[0]
}

func (x ContainerState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContainerState.Descriptor instead.
func (ContainerState) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_orchestrator_proto_rawDescGZIP(), []int{0}
}

type TaskState int32

const (
	TaskState_TASK_STATE_UNSPECIFIED TaskState = 0
	TaskState_TASK_STATE_QUEUED      TaskState = 1
	TaskState_TASK_STATE_RUNNING     TaskState = 2
	TaskState_TASK_STATE_SUCCESS     TaskState = 3
	TaskState_TASK_STATE_FAILED      TaskState = 4
	TaskState_TASK_STATE_TIMEOUT     TaskState = 5
	TaskState_TASK_STATE_CANCELLED   TaskState = 6
)

// Enum value maps for TaskState.
var (
	TaskState_name = map[int32]string{
		0: "TASK_STATE_UNSPECIFIED",
		1: "TASK_STATE_QUEUED",
		2: "TASK_STATE_RUNNING",
		3: "TASK_STATE_SUCCESS",
		4: "TASK_STATE_FAILED",
		5: "TASK_STATE_TIMEOUT",
		6: "TASK_STATE_CANCELLED",
	}
	TaskState_value = map[string]int32{
		"TASK_STATE_UNSPECIFIED": 0,
		"TASK_STATE_QUEUED":      1,
		"TASK_STATE_RUNNING":     2,
		"TASK_STATE_SUCCESS":     3,
		"TASK_STATE_FAILED":      4,
		"TASK_STATE_TIMEOUT":     5,
		"TASK_STATE_CANCELLED":   6,
	}
)

func (x TaskState) Enum() *TaskState {
	p := new(TaskState)
	*p = x
	return p
}

func (x TaskState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskState) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_orchestrator_proto_enumTypes[1].Descriptor()
}

func (TaskState) Type() protoreflect.EnumType {
	return &file_api_proto_orchestrator_proto_enumTypes[1]
}

func (x TaskState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskState.Descriptor instead.
func (TaskState) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_orchestrator_proto_rawDescGZIP(), []int{1}
}

type CreateContainerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ImageId       string                 `protobuf:"bytes,1,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	Resources     *Resources             `protobuf:"bytes,2,opt,name=resources,proto3" json:"resources,omitempty"`
	Environment   map[string]string      `protobuf:"bytes,3,rep,name=environment,proto3" json:"environment,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Network       string                 `protobuf:"bytes,4,opt,name=network,proto3" json:"network,omitempty"`
	Command       []string               `protobuf:"bytes,5,rep,name=command,proto3" json:"command,omitempty"`
	Args          []string               `protobuf:"bytes,6,rep,name=args,proto3" json:"args,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateContainerRequest) Reset() {
	*x = CreateContainerRequest{}
	mi := &file_api_proto_orchestrator_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContainerRequest) ProtoMessage() {}

func (x *CreateContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_orchestrator_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContainerRequest.ProtoReflect.Descriptor instead.
func (*CreateContainerRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_orchestrator_proto_rawDescGZIP(), []int{0}
}

func (x *CreateContainerRequest) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *CreateContainerRequest) GetResources() *Resources {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *CreateContainerRequest) GetEnvironment() map[string]string {
	if x != nil {
		return x.Environment
	}
	return nil
}

func (x *CreateContainerRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *CreateContainerRequest) GetCommand() []string {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *CreateContainerRequest) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

type Container struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ImageId       string                 `protobuf:"bytes,2,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	State         ContainerState         `protobuf:"varint,3,opt,name=state,proto3,enum=obsidian.orchestrator.v1.ContainerState" json:"state,omitempty"`
	Resources     *Resources             `protobuf:"bytes,4,opt,name=resources,proto3" json:"resources,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	StartedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Container) Reset() {
	*x = Container{}
	mi := &file_api_proto_orchestrator_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Container) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Container) ProtoMessage() {}

func (x *Container) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_orchestrator_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Container.ProtoReflect.Descriptor instead.
func (*Container) Descriptor() ([]byte, []int) {
	return file_api_proto_orchestrator_proto_rawDescGZIP(), []int{1}
}

func (x *Container) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Container) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *Container) GetState() ContainerState {
	if x != nil {
		return x.State
	}
	return ContainerState_CONTAINER_STATE_UNSPECIFIED
}

func (x *Container) GetResources() *Resources {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *Container) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Container) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *Container) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type ContainerID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerID) Reset() {
	*x = ContainerID{}
	mi := &file_api_proto_orchestrator_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerID) ProtoMessage() {}

func (x *ContainerID) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_orchestrator_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerID.ProtoReflect.Descriptor instead.
func (*ContainerID) Descriptor() ([]byte, []int) {
	return file_api_proto_orchestrator_proto_rawDescGZIP(), []int{2}
}

func (x *ContainerID) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type TaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerId   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Payload       []byte                 `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	Timeout       *durationpb.Duration   `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskRequest) Reset() {
	*x = TaskRequest{}
	mi := &file_api_proto_orchestrator_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskRequest) ProtoMessage() {}

func (x *TaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_orchestrator_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskRequest.ProtoReflect.Descriptor instead.
func (*TaskRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_orchestrator_proto_rawDescGZIP(), []int{3}
}

func (x *TaskRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *TaskRequest) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *TaskRequest) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *TaskRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type TaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Result        []byte                 `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	Metrics       *TaskMetrics           `protobuf:"bytes,3,opt,name=metrics,proto3" json:"metrics,omitempty"`
	CompletedAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskResponse) Reset() {
	*x = TaskResponse{}
	mi := &file_api_proto_orchestrator_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResponse) ProtoMessage() {}

func (x *TaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_orchestrator_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResponse.ProtoReflect.Descriptor instead.
func (*TaskResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_orchestrator_proto_rawDescGZIP(), []int{4}
}

func (x *TaskResponse) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskResponse) GetResult() []byte {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *TaskResponse) GetMetrics() *TaskMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *TaskResponse) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

type TaskID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskID) Reset() {
	*x = TaskID{}
	mi := &file_api_proto_orchestrator_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskID) ProtoMessage() {}

func (x *TaskID) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_orchestrator_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskID.ProtoReflect.Descriptor instead.
func (*TaskID) Descriptor() ([]byte, []int) {
	return file_api_proto_orchestrator_proto_rawDescGZIP(), []int{5}
}

func (x *TaskID) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type TaskStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	State         TaskState              `protobuf:"varint,2,opt,name=state,proto3,enum=obsidian.orchestrator.v1.TaskState" json:"state,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Metrics       *TaskMetrics           `protobuf:"bytes,4,opt,name=metrics,proto3" json:"metrics,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	StartedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	CompletedAt   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskStatus) Reset() {
	*x = TaskStatus{}
	mi := &file_api_proto_orchestrator_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskStatus) ProtoMessage() {}

func (x *TaskStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_orchestrator_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskStatus.ProtoReflect.Descriptor instead.
func (*TaskStatus) Descriptor() ([]byte, []int) {
	return file_api_proto_orchestrator_proto_rawDescGZIP(), []int{6}
}

func (x *TaskStatus) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskStatus) GetState() TaskState {
	if x != nil {
		return x.State
	}
	return TaskState_TASK_STATE_UNSPECIFIED
}

func (x *TaskStatus) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *TaskStatus) GetMetrics() *TaskMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *TaskStatus) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *TaskStatus) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *TaskStatus) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

type Resources struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CpuLimit      string                 `protobuf:"bytes,1,opt,name=cpu_limit,json=cpuLimit,proto3" json:"cpu_limit,omitempty"`          // e.g., "4" cores
	MemoryLimit   string                 `protobuf:"bytes,2,opt,name=memory_limit,json=memoryLimit,proto3" json:"memory_limit,omitempty"` // e.g., "8Gi"
	DiskLimit     string                 `protobuf:"bytes,3,opt,name=disk_limit,json=diskLimit,proto3" json:"disk_limit,omitempty"`       // e.g., "50Gi"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Resources) Reset() {
	*x = Resources{}
	mi := &file_api_proto_orchestrator_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Resources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resources) ProtoMessage() {}

func (x *Resources) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_orchestrator_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resources.ProtoReflect.Descriptor instead.
func (*Resources) Descriptor() ([]byte, []int) {
	return file_api_proto_orchestrator_proto_rawDescGZIP(), []int{7}
}

func (x *Resources) GetCpuLimit() string {
	if x != nil {
		return x.CpuLimit
	}
	return ""
}

func (x *Resources) GetMemoryLimit() string {
	if x != nil {
		return x.MemoryLimit
	}
	return ""
}

func (x *Resources) GetDiskLimit() string {
	if x != nil {
		return x.DiskLimit
	}
	return ""
}

type TaskMetrics struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	CpuUsage         float64                `protobuf:"fixed64,1,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	MemoryUsageBytes int64                  `protobuf:"varint,2,opt,name=memory_usage_bytes,json=memoryUsageBytes,proto3" json:"memory_usage_bytes,omitempty"`
	DiskUsageBytes   int64                  `protobuf:"varint,3,opt,name=disk_usage_bytes,json=diskUsageBytes,proto3" json:"disk_usage_bytes,omitempty"`
	ExecutionTime    *durationpb.Duration   `protobuf:"bytes,4,opt,name=execution_time,json=executionTime,proto3" json:"execution_time,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TaskMetrics) Reset() {
	*x = TaskMetrics{}
	mi := &file_api_proto_orchestrator_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskMetrics) ProtoMessage() {}

func (x *TaskMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_orchestrator_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskMetrics.ProtoReflect.Descriptor instead.
func (*TaskMetrics) Descriptor() ([]byte, []int) {
	return file_api_proto_orchestrator_proto_rawDescGZIP(), []int{8}
}

func (x *TaskMetrics) GetCpuUsage() float64 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *TaskMetrics) GetMemoryUsageBytes() int64 {
	if x != nil {
		return x.MemoryUsageBytes
	}
	return 0
}

func (x *TaskMetrics) GetDiskUsageBytes() int64 {
	if x != nil {
		return x.DiskUsageBytes
	}
	return 0
}

func (x *TaskMetrics) GetExecutionTime() *durationpb.Duration {
	if x != nil {
		return x.ExecutionTime
	}
	return nil
}

type HealthStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Healthy       bool                   `protobuf:"varint,1,opt,name=healthy,proto3" json:"healthy,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	LastCheck     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=last_check,json=lastCheck,proto3" json:"last_check,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthStatus) Reset() {
	*x = HealthStatus{}
	mi := &file_api_proto_orchestrator_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthStatus) ProtoMessage() {}

func (x *HealthStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_orchestrator_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthStatus.ProtoReflect.Descriptor instead.
func (*HealthStatus) Descriptor() ([]byte, []int) {
	return file_api_proto_orchestrator_proto_rawDescGZIP(), []int{9}
}

func (x *HealthStatus) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *HealthStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HealthStatus) GetLastCheck() *timestamppb.Timestamp {
	if x != nil {
		return x.LastCheck
	}
	return nil
}

type Metrics struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	RunningContainers int32                  `protobuf:"varint,1,opt,name=running_containers,json=runningContainers,proto3" json:"running_containers,omitempty"`
	TotalContainers   int32                  `protobuf:"varint,2,opt,name=total_containers,json=totalContainers,proto3" json:"total_containers,omitempty"`
	QueueDepth        int32                  `protobuf:"varint,3,opt,name=queue_depth,json=queueDepth,proto3" json:"queue_depth,omitempty"`
	CpuUtilization    float64                `protobuf:"fixed64,4,opt,name=cpu_utilization,json=cpuUtilization,proto3" json:"cpu_utilization,omitempty"`
	MemoryUtilization float64                `protobuf:"fixed64,5,opt,name=memory_utilization,json=memoryUtilization,proto3" json:"memory_utilization,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Metrics) Reset() {
	*x = Metrics{}
	mi := &file_api_proto_orchestrator_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metrics) ProtoMessage() {}

func (x *Metrics) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_orchestrator_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metrics.ProtoReflect.Descriptor instead.
func (*Metrics) Descriptor() ([]byte, []int) {
	return file_api_proto_orchestrator_proto_rawDescGZIP(), []int{10}
}

func (x *Metrics) GetRunningContainers() int32 {
	if x != nil {
		return x.RunningContainers
	}
	return 0
}

func (x *Metrics) GetTotalContainers() int32 {
	if x != nil {
		return x.TotalContainers
	}
	return 0
}

func (x *Metrics) GetQueueDepth() int32 {
	if x != nil {
		return x.QueueDepth
	}
	return 0
}

func (x *Metrics) GetCpuUtilization() float64 {
	if x != nil {
		return x.CpuUtilization
	}
	return 0
}

func (x *Metrics) GetMemoryUtilization() float64 {
	if x != nil {
		return x.MemoryUtilization
	}
	return 0
}

var File_api_proto_orchestrator_proto protoreflect.FileDescriptor

const file_api_proto_orchestrator_proto_rawDesc = "" +
	"\n" +
	"\x1capi/proto/orchestrator.proto\x12\x18obsidian.orchestrator.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1bgoogle/protobuf/empty.proto\"\xe3\x02\n" +
	"\x16CreateContainerRequest\x12\x19\n" +
	"\bimage_id\x18\x01 \x01(\tR\aimageId\x12A\n" +
	"\tresources\x18\x02 \x01(\v2#.obsidian.orchestrator.v1.ResourcesR\tresources\x12c\n" +
	"\venvironment\x18\x03 \x03(\v2A.obsidian.orchestrator.v1.CreateContainerRequest.EnvironmentEntryR\venvironment\x12\x18\n" +
	"\anetwork\x18\x04 \x01(\tR\anetwork\x12\x18\n" +
	"\acommand\x18\x05 \x03(\tR\acommand\x12\x12\n" +
	"\x04args\x18\x06 \x03(\tR\x04args\x1a>\n" +
	"\x10EnvironmentEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb3\x03\n" +
	"\tContainer\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\bimage_id\x18\x02 \x01(\tR\aimageId\x12>\n" +
	"\x05state\x18\x03 \x01(\x0e2(.obsidian.orchestrator.v1.ContainerStateR\x05state\x12A\n" +
	"\tresources\x18\x04 \x01(\v2#.obsidian.orchestrator.v1.ResourcesR\tresources\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"started_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x12G\n" +
	"\x06labels\x18\a \x03(\v2/.obsidian.orchestrator.v1.Container.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x1d\n" +
	"\vContainerID\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x8d\x02\n" +
	"\vTaskRequest\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12\x18\n" +
	"\apayload\x18\x02 \x01(\fR\apayload\x123\n" +
	"\atimeout\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\atimeout\x12O\n" +
	"\bmetadata\x18\x04 \x03(\v23.obsidian.orchestrator.v1.TaskRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xbf\x01\n" +
	"\fTaskResponse\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x16\n" +
	"\x06result\x18\x02 \x01(\fR\x06result\x12?\n" +
	"\ametrics\x18\x03 \x01(\v2%.obsidian.orchestrator.v1.TaskMetricsR\ametrics\x12=\n" +
	"\fcompleted_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\vcompletedAt\"\x18\n" +
	"\x06TaskID\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\xfb\x02\n" +
	"\n" +
	"TaskStatus\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x129\n" +
	"\x05state\x18\x02 \x01(\x0e2#.obsidian.orchestrator.v1.TaskStateR\x05state\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\x12?\n" +
	"\ametrics\x18\x04 \x01(\v2%.obsidian.orchestrator.v1.TaskMetricsR\ametrics\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"started_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x12=\n" +
	"\fcompleted_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\vcompletedAt\"j\n" +
	"\tResources\x12\x1b\n" +
	"\tcpu_limit\x18\x01 \x01(\tR\bcpuLimit\x12!\n" +
	"\fmemory_limit\x18\x02 \x01(\tR\vmemoryLimit\x12\x1d\n" +
	"\n" +
	"disk_limit\x18\x03 \x01(\tR\tdiskLimit\"\xc4\x01\n" +
	"\vTaskMetrics\x12\x1b\n" +
	"\tcpu_usage\x18\x01 \x01(\x01R\bcpuUsage\x12,\n" +
	"\x12memory_usage_bytes\x18\x02 \x01(\x03R\x10memoryUsageBytes\x12(\n" +
	"\x10disk_usage_bytes\x18\x03 \x01(\x03R\x0ediskUsageBytes\x12@\n" +
	"\x0eexecution_time\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\rexecutionTime\"}\n" +
	"\fHealthStatus\x12\x18\n" +
	"\ahealthy\x18\x01 \x01(\bR\ahealthy\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x129\n" +
	"\n" +
	"last_check\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tlastCheck\"\xdc\x01\n" +
	"\aMetrics\x12-\n" +
	"\x12running_containers\x18\x01 \x01(\x05R\x11runningContainers\x12)\n" +
	"\x10total_containers\x18\x02 \x01(\x05R\x0ftotalContainers\x12\x1f\n" +
	"\vqueue_depth\x18\x03 \x01(\x05R\n" +
	"queueDepth\x12'\n" +
	"\x0fcpu_utilization\x18\x04 \x01(\x01R\x0ecpuUtilization\x12-\n" +
	"\x12memory_utilization\x18\x05 \x01(\x01R\x11memoryUtilization*\xa4\x01\n" +
	"\x0eContainerState\x12\x1f\n" +
	"\x1bCONTAINER_STATE_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17CONTAINER_STATE_CREATED\x10\x01\x12\x1b\n" +
	"\x17CONTAINER_STATE_RUNNING\x10\x02\x12\x1b\n" +
	"\x17CONTAINER_STATE_STOPPED\x10\x03\x12\x1a\n" +
	"\x16CONTAINER_STATE_FAILED\x10\x04*\xb7\x01\n" +
	"\tTaskState\x12\x1a\n" +
	"\x16TASK_STATE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11TASK_STATE_QUEUED\x10\x01\x12\x16\n" +
	"\x12TASK_STATE_RUNNING\x10\x02\x12\x16\n" +
	"\x12TASK_STATE_SUCCESS\x10\x03\x12\x15\n" +
	"\x11TASK_STATE_FAILED\x10\x04\x12\x16\n" +
	"\x12TASK_STATE_TIMEOUT\x10\x05\x12\x18\n" +
	"\x14TASK_STATE_CANCELLED\x10\x062\xa0\x06\n" +
	"\x13OrchestratorService\x12h\n" +
	"\x0fCreateContainer\x120.obsidian.orchestrator.v1.CreateContainerRequest\x1a#.obsidian.orchestrator.v1.Container\x12\\\n" +
	"\x0eStartContainer\x12%.obsidian.orchestrator.v1.ContainerID\x1a#.obsidian.orchestrator.v1.Container\x12[\n" +
	"\rStopContainer\x12%.obsidian.orchestrator.v1.ContainerID\x1a#.obsidian.orchestrator.v1.Container\x12P\n" +
	"\x0fRemoveContainer\x12%.obsidian.orchestrator.v1.ContainerID\x1a\x16.google.protobuf.Empty\x12[\n" +
	"\n" +
	"SubmitTask\x12%.obsidian.orchestrator.v1.TaskRequest\x1a&.obsidian.orchestrator.v1.TaskResponse\x12W\n" +
	"\rGetTaskStatus\x12 .obsidian.orchestrator.v1.TaskID\x1a$.obsidian.orchestrator.v1.TaskStatus\x12F\n" +
	"\n" +
	"CancelTask\x12 .obsidian.orchestrator.v1.TaskID\x1a\x16.google.protobuf.Empty\x12K\n" +
	"\tGetHealth\x12\x16.google.protobuf.Empty\x1a&.obsidian.orchestrator.v1.HealthStatus\x12G\n" +
	"\n" +
	"GetMetrics\x12\x16.google.protobuf.Empty\x1a!.obsidian.orchestrator.v1.MetricsB6Z4github.com/hourglass/obsidian/api/proto/orchestratorb\x06proto3"

var (
	file_api_proto_orchestrator_proto_rawDescOnce sync.Once
	file_api_proto_orchestrator_proto_rawDescData []byte
)

func file_api_proto_orchestrator_proto_rawDescGZIP() []byte {
	file_api_proto_orchestrator_proto_rawDescOnce.Do(func() {
		file_api_proto_orchestrator_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_orchestrator_proto_rawDesc), len(file_api_proto_orchestrator_proto_rawDesc)))
	})
	return file_api_proto_orchestrator_proto_rawDescData
}

var file_api_proto_orchestrator_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_proto_orchestrator_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_api_proto_orchestrator_proto_goTypes = []any{
	(ContainerState)(0),            // 0: obsidian.orchestrator.v1.ContainerState
	(TaskState)(0),                 // 1: obsidian.orchestrator.v1.TaskState
	(*CreateContainerRequest)(nil), // 2: obsidian.orchestrator.v1.CreateContainerRequest
	(*Container)(nil),              // 3: obsidian.orchestrator.v1.Container
	(*ContainerID)(nil),            // 4: obsidian.orchestrator.v1.ContainerID
	(*TaskRequest)(nil),            // 5: obsidian.orchestrator.v1.TaskRequest
	(*TaskResponse)(nil),           // 6: obsidian.orchestrator.v1.TaskResponse
	(*TaskID)(nil),                 // 7: obsidian.orchestrator.v1.TaskID
	(*TaskStatus)(nil),             // 8: obsidian.orchestrator.v1.TaskStatus
	(*Resources)(nil),              // 9: obsidian.orchestrator.v1.Resources
	(*TaskMetrics)(nil),            // 10: obsidian.orchestrator.v1.TaskMetrics
	(*HealthStatus)(nil),           // 11: obsidian.orchestrator.v1.HealthStatus
	(*Metrics)(nil),                // 12: obsidian.orchestrator.v1.Metrics
	nil,                            // 13: obsidian.orchestrator.v1.CreateContainerRequest.EnvironmentEntry
	nil,                            // 14: obsidian.orchestrator.v1.Container.LabelsEntry
	nil,                            // 15: obsidian.orchestrator.v1.TaskRequest.MetadataEntry
	(*timestamppb.Timestamp)(nil),  // 16: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),    // 17: google.protobuf.Duration
	(*emptypb.Empty)(nil),          // 18: google.protobuf.Empty
}
var file_api_proto_orchestrator_proto_depIdxs = []int32{
	9,  // 0: obsidian.orchestrator.v1.CreateContainerRequest.resources:type_name -> obsidian.orchestrator.v1.Resources
	13, // 1: obsidian.orchestrator.v1.CreateContainerRequest.environment:type_name -> obsidian.orchestrator.v1.CreateContainerRequest.EnvironmentEntry
	0,  // 2: obsidian.orchestrator.v1.Container.state:type_name -> obsidian.orchestrator.v1.ContainerState
	9,  // 3: obsidian.orchestrator.v1.Container.resources:type_name -> obsidian.orchestrator.v1.Resources
	16, // 4: obsidian.orchestrator.v1.Container.created_at:type_name -> google.protobuf.Timestamp
	16, // 5: obsidian.orchestrator.v1.Container.started_at:type_name -> google.protobuf.Timestamp
	14, // 6: obsidian.orchestrator.v1.Container.labels:type_name -> obsidian.orchestrator.v1.Container.LabelsEntry
	17, // 7: obsidian.orchestrator.v1.TaskRequest.timeout:type_name -> google.protobuf.Duration
	15, // 8: obsidian.orchestrator.v1.TaskRequest.metadata:type_name -> obsidian.orchestrator.v1.TaskRequest.MetadataEntry
	10, // 9: obsidian.orchestrator.v1.TaskResponse.metrics:type_name -> obsidian.orchestrator.v1.TaskMetrics
	16, // 10: obsidian.orchestrator.v1.TaskResponse.completed_at:type_name -> google.protobuf.Timestamp
	1,  // 11: obsidian.orchestrator.v1.TaskStatus.state:type_name -> obsidian.orchestrator.v1.TaskState
	10, // 12: obsidian.orchestrator.v1.TaskStatus.metrics:type_name -> obsidian.orchestrator.v1.TaskMetrics
	16, // 13: obsidian.orchestrator.v1.TaskStatus.created_at:type_name -> google.protobuf.Timestamp
	16, // 14: obsidian.orchestrator.v1.TaskStatus.started_at:type_name -> google.protobuf.Timestamp
	16, // 15: obsidian.orchestrator.v1.TaskStatus.completed_at:type_name -> google.protobuf.Timestamp
	17, // 16: obsidian.orchestrator.v1.TaskMetrics.execution_time:type_name -> google.protobuf.Duration
	16, // 17: obsidian.orchestrator.v1.HealthStatus.last_check:type_name -> google.protobuf.Timestamp
	2,  // 18: obsidian.orchestrator.v1.OrchestratorService.CreateContainer:input_type -> obsidian.orchestrator.v1.CreateContainerRequest
	4,  // 19: obsidian.orchestrator.v1.OrchestratorService.StartContainer:input_type -> obsidian.orchestrator.v1.ContainerID
	4,  // 20: obsidian.orchestrator.v1.OrchestratorService.StopContainer:input_type -> obsidian.orchestrator.v1.ContainerID
	4,  // 21: obsidian.orchestrator.v1.OrchestratorService.RemoveContainer:input_type -> obsidian.orchestrator.v1.ContainerID
	5,  // 22: obsidian.orchestrator.v1.OrchestratorService.SubmitTask:input_type -> obsidian.orchestrator.v1.TaskRequest
	7,  // 23: obsidian.orchestrator.v1.OrchestratorService.GetTaskStatus:input_type -> obsidian.orchestrator.v1.TaskID
	7,  // 24: obsidian.orchestrator.v1.OrchestratorService.CancelTask:input_type -> obsidian.orchestrator.v1.TaskID
	18, // 25: obsidian.orchestrator.v1.OrchestratorService.GetHealth:input_type -> google.protobuf.Empty
	18, // 26: obsidian.orchestrator.v1.OrchestratorService.GetMetrics:input_type -> google.protobuf.Empty
	3,  // 27: obsidian.orchestrator.v1.OrchestratorService.CreateContainer:output_type -> obsidian.orchestrator.v1.Container
	3,  // 28: obsidian.orchestrator.v1.OrchestratorService.StartContainer:output_type -> obsidian.orchestrator.v1.Container
	3,  // 29: obsidian.orchestrator.v1.OrchestratorService.StopContainer:output_type -> obsidian.orchestrator.v1.Container
	18, // 30: obsidian.orchestrator.v1.OrchestratorService.RemoveContainer:output_type -> google.protobuf.Empty
	6,  // 31: obsidian.orchestrator.v1.OrchestratorService.SubmitTask:output_type -> obsidian.orchestrator.v1.TaskResponse
	8,  // 32: obsidian.orchestrator.v1.OrchestratorService.GetTaskStatus:output_type -> obsidian.orchestrator.v1.TaskStatus
	18, // 33: obsidian.orchestrator.v1.OrchestratorService.CancelTask:output_type -> google.protobuf.Empty
	11, // 34: obsidian.orchestrator.v1.OrchestratorService.GetHealth:output_type -> obsidian.orchestrator.v1.HealthStatus
	12, // 35: obsidian.orchestrator.v1.OrchestratorService.GetMetrics:output_type -> obsidian.orchestrator.v1.Metrics
	27, // [27:36] is the sub-list for method output_type
	18, // [18:27] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_api_proto_orchestrator_proto_init() }
func file_api_proto_orchestrator_proto_init() {
	if File_api_proto_orchestrator_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_orchestrator_proto_rawDesc), len(file_api_proto_orchestrator_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_orchestrator_proto_goTypes,
		DependencyIndexes: file_api_proto_orchestrator_proto_depIdxs,
		EnumInfos:         file_api_proto_orchestrator_proto_enumTypes,
		MessageInfos:      file_api_proto_orchestrator_proto_msgTypes,
	}.Build()
	File_api_proto_orchestrator_proto = out.File
	file_api_proto_orchestrator_proto_goTypes = nil
	file_api_proto_orchestrator_proto_depIdxs = nil
}
