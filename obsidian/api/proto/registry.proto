syntax = "proto3";

package obsidian.registry.v1;

option go_package = "github.com/hourglass/obsidian/api/proto/registry";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

service RegistryService {
  // Image operations
  rpc PullImage(ImageReference) returns (Image);
  rpc GetImage(ImageID) returns (Image);
  rpc ListImages(ListImagesRequest) returns (ImageList);
  rpc DeleteImage(ImageID) returns (google.protobuf.Empty);
  
  // Registry management
  rpc AddRegistry(RegistryConfig) returns (Registry);
  rpc UpdateRegistryCredentials(RegistryCredentials) returns (google.protobuf.Empty);
  
  // Security
  rpc ScanImage(ImageID) returns (ScanResult);
  rpc GetImagePolicy(ImageID) returns (Policy);
}

message ImageReference {
  string reference = 1; // e.g., "ghcr.io/org/image:tag"
  string registry_name = 2;
}

message Image {
  string id = 1;
  string digest = 2;
  string reference = 3;
  int64 size_bytes = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp pulled_at = 6;
  repeated string tags = 7;
  map<string, string> labels = 8;
}

message ImageID {
  string id = 1;
}

message ListImagesRequest {
  string filter = 1;
  int32 page_size = 2;
  string page_token = 3;
}

message ImageList {
  repeated Image images = 1;
  string next_page_token = 2;
}

message RegistryConfig {
  string name = 1;
  RegistryType type = 2;
  string url = 3;
  string region = 4;
  CredentialSource credential_source = 5;
  string secret_name = 6;
}

message Registry {
  string name = 1;
  RegistryType type = 2;
  string url = 3;
  bool enabled = 4;
  google.protobuf.Timestamp created_at = 5;
}

message RegistryCredentials {
  string registry_name = 1;
  string username = 2;
  string password = 3;
  string token = 4;
}

message ScanResult {
  string image_id = 1;
  google.protobuf.Timestamp scanned_at = 2;
  int32 critical_vulnerabilities = 3;
  int32 high_vulnerabilities = 4;
  int32 medium_vulnerabilities = 5;
  int32 low_vulnerabilities = 6;
  repeated Vulnerability vulnerabilities = 7;
}

message Vulnerability {
  string cve_id = 1;
  string severity = 2;
  string package_name = 3;
  string installed_version = 4;
  string fixed_version = 5;
  string description = 6;
}

message Policy {
  string image_id = 1;
  bool allowed = 2;
  repeated string violations = 3;
  google.protobuf.Timestamp evaluated_at = 4;
}

enum RegistryType {
  REGISTRY_TYPE_UNSPECIFIED = 0;
  REGISTRY_TYPE_ECR = 1;
  REGISTRY_TYPE_GHCR = 2;
  REGISTRY_TYPE_DOCKER_HUB = 3;
}

enum CredentialSource {
  CREDENTIAL_SOURCE_UNSPECIFIED = 0;
  CREDENTIAL_SOURCE_IAM_ROLE = 1;
  CREDENTIAL_SOURCE_SECRET = 2;
  CREDENTIAL_SOURCE_ENV = 3;
}