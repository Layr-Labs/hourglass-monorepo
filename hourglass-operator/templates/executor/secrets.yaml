# Secret for storing operator private keys
apiVersion: v1
kind: Secret
metadata:
  name: ${EXECUTOR_NAME}-keys
  namespace: ${NAMESPACE}
  labels:
    app: ${EXECUTOR_NAME}
    component: executor-secrets
type: Opaque
data:
  # ECDSA private key (base64 encoded)
  # Replace with actual base64-encoded private key
  ecdsa-private-key: ${ECDSA_PRIVATE_KEY_B64}
  
  # BLS private key (base64 encoded, optional)
  # Replace with actual base64-encoded private key
  bls-private-key: ${BLS_PRIVATE_KEY_B64}

---
# Optional: Secret for private container registry access
apiVersion: v1
kind: Secret
metadata:
  name: ${EXECUTOR_NAME}-registry-secret
  namespace: ${NAMESPACE}
  labels:
    app: ${EXECUTOR_NAME}
    component: executor-secrets
type: kubernetes.io/dockerconfigjson
data:
  # Docker config JSON (base64 encoded)
  # Generate with: kubectl create secret docker-registry --dry-run=client -o yaml
  .dockerconfigjson: ${DOCKER_CONFIG_JSON_B64}

---
# Optional: Secret for TLS certificates (if using TLS with aggregator)
apiVersion: v1
kind: Secret
metadata:
  name: ${EXECUTOR_NAME}-tls
  namespace: ${NAMESPACE}
  labels:
    app: ${EXECUTOR_NAME}
    component: executor-secrets
type: kubernetes.io/tls
data:
  # TLS certificate (base64 encoded)
  tls.crt: ${TLS_CERT_B64}
  
  # TLS private key (base64 encoded)
  tls.key: ${TLS_KEY_B64}
  
  # CA certificate (base64 encoded)
  ca.crt: ${CA_CERT_B64}