// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package TaskMailbox

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// BN254G1Point is an auto generated low-level Go binding around an user-defined struct.
type BN254G1Point struct {
	X *big.Int
	Y *big.Int
}

// BN254G2Point is an auto generated low-level Go binding around an user-defined struct.
type BN254G2Point struct {
	X [2]*big.Int
	Y [2]*big.Int
}

// IBN254CertificateVerifierBN254Certificate is an auto generated low-level Go binding around an user-defined struct.
type IBN254CertificateVerifierBN254Certificate struct {
	ReferenceTimestamp uint32
	MessageHash        [32]byte
	Sig                BN254G1Point
	Apk                BN254G2Point
	NonsignerIndices   []uint32
	NonSignerWitnesses []IBN254CertificateVerifierBN254OperatorInfoWitness
}

// IBN254CertificateVerifierBN254OperatorInfo is an auto generated low-level Go binding around an user-defined struct.
type IBN254CertificateVerifierBN254OperatorInfo struct {
	Pubkey  BN254G1Point
	Weights []*big.Int
}

// IBN254CertificateVerifierBN254OperatorInfoWitness is an auto generated low-level Go binding around an user-defined struct.
type IBN254CertificateVerifierBN254OperatorInfoWitness struct {
	OperatorIndex      uint32
	OperatorInfoProofs []byte
	OperatorInfo       IBN254CertificateVerifierBN254OperatorInfo
}

// ITaskMailboxTypesAvsConfig is an auto generated low-level Go binding around an user-defined struct.
type ITaskMailboxTypesAvsConfig struct {
	AggregatorOperatorSetId uint32
	ExecutorOperatorSetIds  []uint32
}

// ITaskMailboxTypesExecutorOperatorSetTaskConfig is an auto generated low-level Go binding around an user-defined struct.
type ITaskMailboxTypesExecutorOperatorSetTaskConfig struct {
	CertificateVerifier      common.Address
	TaskHook                 common.Address
	FeeToken                 common.Address
	FeeCollector             common.Address
	TaskSLA                  *big.Int
	StakeProportionThreshold uint16
	TaskMetadata             []byte
}

// ITaskMailboxTypesTask is an auto generated low-level Go binding around an user-defined struct.
type ITaskMailboxTypesTask struct {
	Creator                       common.Address
	CreationTime                  *big.Int
	Status                        uint8
	Avs                           common.Address
	ExecutorOperatorSetId         uint32
	AggregatorOperatorSetId       uint32
	RefundCollector               common.Address
	AvsFee                        *big.Int
	FeeSplit                      uint16
	ExecutorOperatorSetTaskConfig ITaskMailboxTypesExecutorOperatorSetTaskConfig
	Payload                       []byte
	Result                        []byte
}

// ITaskMailboxTypesTaskParams is an auto generated low-level Go binding around an user-defined struct.
type ITaskMailboxTypesTaskParams struct {
	RefundCollector     common.Address
	AvsFee              *big.Int
	ExecutorOperatorSet OperatorSet
	Payload             []byte
}

// OperatorSet is an auto generated low-level Go binding around an user-defined struct.
type OperatorSet struct {
	Avs common.Address
	Id  uint32
}

// TaskMailboxMetaData contains all meta data concerning the TaskMailbox contract.
var TaskMailboxMetaData = &bind.MetaData{
	ABI: "[{\"type\":\"function\",\"name\":\"avsConfigs\",\"inputs\":[{\"name\":\"avs\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"aggregatorOperatorSetId\",\"type\":\"uint32\",\"internalType\":\"uint32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"cancelTask\",\"inputs\":[{\"name\":\"taskHash\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"createTask\",\"inputs\":[{\"name\":\"taskParams\",\"type\":\"tuple\",\"internalType\":\"structITaskMailboxTypes.TaskParams\",\"components\":[{\"name\":\"refundCollector\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"avsFee\",\"type\":\"uint96\",\"internalType\":\"uint96\"},{\"name\":\"executorOperatorSet\",\"type\":\"tuple\",\"internalType\":\"structOperatorSet\",\"components\":[{\"name\":\"avs\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"id\",\"type\":\"uint32\",\"internalType\":\"uint32\"}]},{\"name\":\"payload\",\"type\":\"bytes\",\"internalType\":\"bytes\"}]}],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"executorOperatorSetTaskConfigs\",\"inputs\":[{\"name\":\"operatorSetKey\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"outputs\":[{\"name\":\"certificateVerifier\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"taskHook\",\"type\":\"address\",\"internalType\":\"contractIAVSTaskHook\"},{\"name\":\"feeToken\",\"type\":\"address\",\"internalType\":\"contractIERC20\"},{\"name\":\"feeCollector\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"taskSLA\",\"type\":\"uint96\",\"internalType\":\"uint96\"},{\"name\":\"stakeProportionThreshold\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"taskMetadata\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getAvsConfig\",\"inputs\":[{\"name\":\"avs\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"tuple\",\"internalType\":\"structITaskMailboxTypes.AvsConfig\",\"components\":[{\"name\":\"aggregatorOperatorSetId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"executorOperatorSetIds\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"}]}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getExecutorOperatorSetTaskConfig\",\"inputs\":[{\"name\":\"operatorSet\",\"type\":\"tuple\",\"internalType\":\"structOperatorSet\",\"components\":[{\"name\":\"avs\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"id\",\"type\":\"uint32\",\"internalType\":\"uint32\"}]}],\"outputs\":[{\"name\":\"\",\"type\":\"tuple\",\"internalType\":\"structITaskMailboxTypes.ExecutorOperatorSetTaskConfig\",\"components\":[{\"name\":\"certificateVerifier\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"taskHook\",\"type\":\"address\",\"internalType\":\"contractIAVSTaskHook\"},{\"name\":\"feeToken\",\"type\":\"address\",\"internalType\":\"contractIERC20\"},{\"name\":\"feeCollector\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"taskSLA\",\"type\":\"uint96\",\"internalType\":\"uint96\"},{\"name\":\"stakeProportionThreshold\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"taskMetadata\",\"type\":\"bytes\",\"internalType\":\"bytes\"}]}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getTaskInfo\",\"inputs\":[{\"name\":\"taskHash\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"outputs\":[{\"name\":\"\",\"type\":\"tuple\",\"internalType\":\"structITaskMailboxTypes.Task\",\"components\":[{\"name\":\"creator\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"creationTime\",\"type\":\"uint96\",\"internalType\":\"uint96\"},{\"name\":\"status\",\"type\":\"uint8\",\"internalType\":\"enumITaskMailboxTypes.TaskStatus\"},{\"name\":\"avs\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"executorOperatorSetId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"aggregatorOperatorSetId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"refundCollector\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"avsFee\",\"type\":\"uint96\",\"internalType\":\"uint96\"},{\"name\":\"feeSplit\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"executorOperatorSetTaskConfig\",\"type\":\"tuple\",\"internalType\":\"structITaskMailboxTypes.ExecutorOperatorSetTaskConfig\",\"components\":[{\"name\":\"certificateVerifier\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"taskHook\",\"type\":\"address\",\"internalType\":\"contractIAVSTaskHook\"},{\"name\":\"feeToken\",\"type\":\"address\",\"internalType\":\"contractIERC20\"},{\"name\":\"feeCollector\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"taskSLA\",\"type\":\"uint96\",\"internalType\":\"uint96\"},{\"name\":\"stakeProportionThreshold\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"taskMetadata\",\"type\":\"bytes\",\"internalType\":\"bytes\"}]},{\"name\":\"payload\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"result\",\"type\":\"bytes\",\"internalType\":\"bytes\"}]}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getTaskResult\",\"inputs\":[{\"name\":\"taskHash\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getTaskStatus\",\"inputs\":[{\"name\":\"taskHash\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint8\",\"internalType\":\"enumITaskMailboxTypes.TaskStatus\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"isAvsRegistered\",\"inputs\":[{\"name\":\"avs\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"isRegistered\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"isExecutorOperatorSetRegistered\",\"inputs\":[{\"name\":\"operatorSetKey\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"outputs\":[{\"name\":\"isRegistered\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"registerAvs\",\"inputs\":[{\"name\":\"avs\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"isRegistered\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"setAvsConfig\",\"inputs\":[{\"name\":\"avs\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"config\",\"type\":\"tuple\",\"internalType\":\"structITaskMailboxTypes.AvsConfig\",\"components\":[{\"name\":\"aggregatorOperatorSetId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"executorOperatorSetIds\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"setExecutorOperatorSetTaskConfig\",\"inputs\":[{\"name\":\"operatorSet\",\"type\":\"tuple\",\"internalType\":\"structOperatorSet\",\"components\":[{\"name\":\"avs\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"id\",\"type\":\"uint32\",\"internalType\":\"uint32\"}]},{\"name\":\"config\",\"type\":\"tuple\",\"internalType\":\"structITaskMailboxTypes.ExecutorOperatorSetTaskConfig\",\"components\":[{\"name\":\"certificateVerifier\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"taskHook\",\"type\":\"address\",\"internalType\":\"contractIAVSTaskHook\"},{\"name\":\"feeToken\",\"type\":\"address\",\"internalType\":\"contractIERC20\"},{\"name\":\"feeCollector\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"taskSLA\",\"type\":\"uint96\",\"internalType\":\"uint96\"},{\"name\":\"stakeProportionThreshold\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"taskMetadata\",\"type\":\"bytes\",\"internalType\":\"bytes\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"submitResult\",\"inputs\":[{\"name\":\"taskHash\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"cert\",\"type\":\"tuple\",\"internalType\":\"structIBN254CertificateVerifier.BN254Certificate\",\"components\":[{\"name\":\"referenceTimestamp\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"messageHash\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"sig\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"apk\",\"type\":\"tuple\",\"internalType\":\"structBN254.G2Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"}]},{\"name\":\"nonsignerIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"nonSignerWitnesses\",\"type\":\"tuple[]\",\"internalType\":\"structIBN254CertificateVerifier.BN254OperatorInfoWitness[]\",\"components\":[{\"name\":\"operatorIndex\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"operatorInfoProofs\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"operatorInfo\",\"type\":\"tuple\",\"internalType\":\"structIBN254CertificateVerifier.BN254OperatorInfo\",\"components\":[{\"name\":\"pubkey\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"weights\",\"type\":\"uint96[]\",\"internalType\":\"uint96[]\"}]}]}]},{\"name\":\"result\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"event\",\"name\":\"AvsConfigSet\",\"inputs\":[{\"name\":\"caller\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"avs\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"aggregatorOperatorSetId\",\"type\":\"uint32\",\"indexed\":false,\"internalType\":\"uint32\"},{\"name\":\"executorOperatorSetIds\",\"type\":\"uint32[]\",\"indexed\":false,\"internalType\":\"uint32[]\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"AvsRegistered\",\"inputs\":[{\"name\":\"caller\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"avs\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"isRegistered\",\"type\":\"bool\",\"indexed\":false,\"internalType\":\"bool\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"ExecutorOperatorSetTaskConfigSet\",\"inputs\":[{\"name\":\"caller\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"avs\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"executorOperatorSetId\",\"type\":\"uint32\",\"indexed\":true,\"internalType\":\"uint32\"},{\"name\":\"config\",\"type\":\"tuple\",\"indexed\":false,\"internalType\":\"structITaskMailboxTypes.ExecutorOperatorSetTaskConfig\",\"components\":[{\"name\":\"certificateVerifier\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"taskHook\",\"type\":\"address\",\"internalType\":\"contractIAVSTaskHook\"},{\"name\":\"feeToken\",\"type\":\"address\",\"internalType\":\"contractIERC20\"},{\"name\":\"feeCollector\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"taskSLA\",\"type\":\"uint96\",\"internalType\":\"uint96\"},{\"name\":\"stakeProportionThreshold\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"taskMetadata\",\"type\":\"bytes\",\"internalType\":\"bytes\"}]}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"TaskCanceled\",\"inputs\":[{\"name\":\"creator\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"taskHash\",\"type\":\"bytes32\",\"indexed\":true,\"internalType\":\"bytes32\"},{\"name\":\"avs\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"executorOperatorSetId\",\"type\":\"uint32\",\"indexed\":false,\"internalType\":\"uint32\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"TaskCreated\",\"inputs\":[{\"name\":\"creator\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"taskHash\",\"type\":\"bytes32\",\"indexed\":true,\"internalType\":\"bytes32\"},{\"name\":\"avs\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"executorOperatorSetId\",\"type\":\"uint32\",\"indexed\":false,\"internalType\":\"uint32\"},{\"name\":\"refundCollector\",\"type\":\"address\",\"indexed\":false,\"internalType\":\"address\"},{\"name\":\"avsFee\",\"type\":\"uint96\",\"indexed\":false,\"internalType\":\"uint96\"},{\"name\":\"taskDeadline\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"},{\"name\":\"payload\",\"type\":\"bytes\",\"indexed\":false,\"internalType\":\"bytes\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"TaskVerified\",\"inputs\":[{\"name\":\"aggregator\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"taskHash\",\"type\":\"bytes32\",\"indexed\":true,\"internalType\":\"bytes32\"},{\"name\":\"avs\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"executorOperatorSetId\",\"type\":\"uint32\",\"indexed\":false,\"internalType\":\"uint32\"},{\"name\":\"result\",\"type\":\"bytes\",\"indexed\":false,\"internalType\":\"bytes\"}],\"anonymous\":false},{\"type\":\"error\",\"name\":\"AvsNotRegistered\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"CertificateVerificationFailed\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"DuplicateExecutorOperatorSetId\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"ExecutorOperatorSetNotRegistered\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"ExecutorOperatorSetTaskConfigNotSet\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"InvalidAddressZero\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"InvalidAggregatorOperatorSetId\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"InvalidTaskCreator\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"InvalidTaskStatus\",\"inputs\":[{\"name\":\"expected\",\"type\":\"uint8\",\"internalType\":\"enumITaskMailboxTypes.TaskStatus\"},{\"name\":\"actual\",\"type\":\"uint8\",\"internalType\":\"enumITaskMailboxTypes.TaskStatus\"}]},{\"type\":\"error\",\"name\":\"PayloadIsEmpty\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"TaskSLAIsZero\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"TimestampAtCreation\",\"inputs\":[]}]",
	Bin: "0x6080806040523460195760015f5561305a908161001e8239f35b5f80fdfe60806040526004361015610011575f80fd5b5f5f3560e01c80630443b7a01461199e57806314e51b6c1461195e5780631c7edb17146118bc5780632bf6cc79146118815780633b433719146111595780634ad52e0214610f105780634e138f3914610b8157806362fee03714610af15780636bf6fad514610a9b578063867f1267146104d6578063a401ba41146102ad578063e3d276ab1461026e578063ee8ca3b51461016d578063ef1a14d7146100f05763fa2c0b37146100bf575f80fd5b346100ed5760203660031901126100ed5760ff60406020926004358152600584522054166040519015158152f35b80fd5b50346100ed5760403660031901126100ed5761010a612760565b602435908115158092036101695760018060a01b03169081835260036020526040832060ff1981541660ff83161790556040519081527f8157f276d267ffc7b002873c20b83d9bd091016e124bf541534269a90702956260203392a380f35b8280fd5b50346100ed5760203660031901126100ed5760043580825260026020526040822061019f61019a82612ba8565b612f07565b600481101561025a578061023e575080546001600160a01b038116330361022f5760a01c42111561022057600101600160ff1982541617815554906040519163ffffffff8160a81c16835260018060a01b039060081c16917f3e701c33cc740e1f61ccdcafcf97e5e65a0d7f4617aed0e8ae51be092ac18a5960203392a480f35b63015a4b7560e51b8352600483fd5b63d6f63bd360e01b8452600484fd5b83610258604492634091b18960e11b835282600452612952565bfd5b634e487b7160e01b84526021600452602484fd5b50346100ed5760203660031901126100ed5760209060ff906040906001600160a01b03610299612760565b168152600384522054166040519015158152f35b50346100ed5760203660031901126100ed576102c7612760565b606060206040516102d7816126ed565b84815201526001600160a01b0316815260046020526040808220905190600190610300836126ed565b63ffffffff8154168352016040519283602083549182815201928252602082205b81600784011061045557946103ad9381936103849363ffffffff985491818110610442575b81811061042d575b818110610417575b818110610401575b8181106103eb575b8181106103d5575b8181106103bf575b106103b1575b50038261273f565b602083019081526040519384936020855251166020840152516040808401526060830190612ade565b0390f35b60e01c81526020015f61037c565b9260206001918b8560c01c168152019301610376565b9260206001918b8560a01c16815201930161036e565b9260206001918b8560801c168152019301610366565b9260206001918b8560601c16815201930161035e565b9260206001918b8560401c168152019301610356565b9260206001918b85831c16815201930161034e565b9260206001918b85168152019301610346565b926001610100600892865463ffffffff8116825263ffffffff8160201c16602083015263ffffffff8160401c16604083015263ffffffff8160601c16606083015263ffffffff8160801c16608083015263ffffffff8160a01c1660a083015263ffffffff8160c01c1660c083015260e01c60e0820152019401920191610321565b50346100ed5760403660031901126100ed576104f0612760565b6024356001600160401b0381116101695760406003198236030112610169576040519061051c826126ed565b6105288160040161279e565b82526024810135906001600160401b038211610a9757600461054d9236920101612a05565b916020820192835260018060a01b0316908184526004602052604084209260016040519461057a866126ed565b63ffffffff8154168652019360405180958691602082549182815201918952602089209089915b816007840110610a1057916105fe9391602096959354918181106109fb575b8181106109e4575b8181106109cb575b8181106109b2575b818110610999575b818110610980575b818110610967575b1061095a575b50038761273f565b01938452845b84518051821015610659579061064063ffffffff61062483600195612c67565b511660405190610633826126ed565b8782526020820152612ea8565b8752600560205260408720805460ff1916905501610604565b50509250835b835180518210156106ff576106798263ffffffff92612c67565b511660405190610688826126ed565b84825280602083015263ffffffff845116146106f0576106a781612ea8565b8652600560205260ff6040872054166106e157906106c6600192612ea8565b8652600560205260408620805460ff1916831790550161065f565b631efe361b60e21b8652600486fd5b6311eef66d60e01b8652600486fd5b85848685828452600360205260ff60408520541615610910575b828452600460205260016040852063ffffffff83511663ffffffff198254161781550182518051906001600160401b0382116108fc576801000000000000000082116108fc5760209083548385558084106108ae575b5001918652602086208160031c91875b83811061086c57506007198116900380610816575b5050505063ffffffff9051169051906040519060408201908252604060208301528251809152602060608301930190855b8181106107fa57505050807fc5e4272bacf3a88a902bbb2920ed1308c295273ff00838766ed22d5e050087ca9133930390a380f35b825163ffffffff168552602094850194909201916001016107c5565b928793885b81811061083457505050015563ffffffff858080610794565b909194602061086260019263ffffffff895116908560021b63ffffffff809160031b9316831b921b19161790565b960192910161081b565b88895b6008811061088457508382015560010161077f565b865190969160019160209163ffffffff60058b901b81811b199092169216901b179201960161086f565b6108dc90858a52838a20600780870160031c820192601c8860021b16806108e2575b500160031c0190612b92565b8861076f565b5f198501908154905f19908a0360031b1c1690558d6108d0565b634e487b7160e01b87526041600452602487fd5b828452600360205260408420600160ff1982541617905582604051600181527f8157f276d267ffc7b002873c20b83d9bd091016e124bf541534269a90702956260203392a3610719565b60e01c815284015f6105f6565b928760019163ffffffff8560c01c1681520193016105f0565b928760019163ffffffff8560a01c1681520193016105e8565b928760019163ffffffff8560801c1681520193016105e0565b928760019163ffffffff8560601c1681520193016105d8565b928760019163ffffffff8560401c1681520193016105d0565b82881c63ffffffff168452928701926001016105c8565b63ffffffff83168452928701926001016105c0565b935090916001610100600892865463ffffffff8116825263ffffffff8160201c16602083015263ffffffff8160401c16604083015263ffffffff8160601c16606083015263ffffffff8160801c16608083015263ffffffff8160a01c1660a083015263ffffffff8160c01c1660c083015260e01c60e08201520194019201908893926105a1565b8480fd5b50346100ed5760403660031901126100ed57610add60406103ad92610ad0610ac2366127af565b610aca612e1e565b50612ea8565b8152600660205220612b17565b604051918291602083526020830190612a6a565b50346100ed5760203660031901126100ed5760043581526002602052610b1960408220612ba8565b90610b2382612f07565b6004811015610b6d5760028103610b51576103ad61016084015160405191829160208352602083019061292e565b634091b18960e11b825260026004526044919061025890612952565b634e487b7160e01b82526021600452602482fd5b50346100ed5760603660031901126100ed57610b9c366127af565b604435906001600160401b0382116101695760e060031983360301126101695760405191610bc983612724565b610bd581600401612776565b835260248101356001600160a01b0381168103610a9757602084019081526044820135916001600160a01b0383168303610f0c5760408501928352610c1c60648201612776565b60608601908152610c2f6084830161278a565b6080870190815260a48301359261ffff84168403610f085760a0880193845260c4810135906001600160401b038211610f04576004610c719236920101612810565b9460c08801958652610c8287612ea8565b8952600560205260ff60408a20541615610ef55787516001600160a01b031615610ee65784516001600160a01b031615610ee6576001600160601b0382511615610ed75761ffff926001600160601b036005969593610d5f93610ce48b612ea8565b8d52600660205260408d208c51815460a086811b9182166001600160a01b039384161784559a51600184018054831691841691909117905592516002830180548516918316919091179055945160038201805494519490931686169516949094179190921690961b6001600160a01b03191695909517909455565b511661ffff60048301911661ffff198254161790550190518051906001600160401b038211610ec3578190610d948454612856565b601f8111610e88575b50602090601f8311600114610e26578792610e1b575b50508160011b915f199060031b1c19161790555b63ffffffff602060018060a01b0383511692015116917fb4758fe2b1355bebcbc78c10619457fcaa54e85fb3b994318238b92a097f54256040516020815280610e1533946020830190612a6a565b0390a480f35b015190505f80610db3565b8488528188209250601f198416885b818110610e705750908460019594939210610e58575b505050811b019055610dc7565b01515f1960f88460031b161c191690555f8080610e4b565b92936020600181928786015181550195019301610e35565b610eb39085895260208920601f850160051c81019160208610610eb9575b601f0160051c0190612b92565b5f610d9d565b9091508190610ea6565b634e487b7160e01b86526041600452602486fd5b63568added60e11b8952600489fd5b630863a45360e11b8952600489fd5b63c292b29760e01b8952600489fd5b8980fd5b8880fd5b8580fd5b50346100ed5760203660031901126100ed57604051610f2e81612708565b8181528160208201528160408201528160608201528160808201528160a08201528160c08201528160e082015281610100820152610f6a612e1e565b61012082015261014081016060905261016001606090526004358152600260205260409020610f9890612ba8565b805160208201516001600160601b0316916001600160a01b0390911690610fbe81612f07565b90600160a01b60019003606082015116608082015163ffffffff1660a083015163ffffffff16600160a01b6001900360c08501511660e08501516001600160601b03169161010086015161ffff169361012087015195610140880151976101600151986040519a61102e8c612708565b8b5260208b019b8c5260408b01906110469082612b86565b60608b0191825260808b0192835260a08b0193845260c08b0194855260e08b019586526101008b019687526101208b019788526101408b019889526101608b01998a526040519b8c9b60208d52600160a01b6001900390511660208d0152516001600160601b031660408c01525160608b016110c191612974565b516001600160a01b0390811660808b0152905163ffffffff90811660a08b0152915190911660c089015290511660e0870152516001600160601b03166101008601525161ffff1661012085015251610180610140850152611127906101a0850190612a6a565b9051838203601f1901610160850152611140919061292e565b9051828203601f19016101808401526103ad919061292e565b50346100ed5760603660031901126100ed576024356004356001600160401b0382116101695781360391610140600319840112611713576040519260c084018481106001600160401b03821117610ec3576040526080906111bc6004840161279e565b8552602483013560208601526111d53660448501612981565b60408601526083190112611713576040516111ef816126ed565b6111fc36608484016129a9565b815261120b3660c484016129a9565b602082015260608401526101048101356001600160401b038111610a97576112399060043691840101612a05565b6080840152610124810135906001600160401b038211610a9757013660238201121561171357600481013561126d816129ee565b9161127b604051938461273f565b818352602060048185019360051b830101019036821161187d5760248101925b828410611717575050505060a08301526044356001600160401b038111611713576112ca903690600401612810565b6112d2612e54565b8184526002602052604084206112ea61019a82612ba8565b60048110156116ff57806116e55750805460a01c4211156116d6576040938451611314868261273f565b6001815260208101601f19870136823761ffff6008850154168251156116c2578152600484810154885163644fdedf60e11b815291820189905290926001600160a01b03909116918391602061136d6044850188612cce565b8481036003190160248601529151808352910191908b5b8181106116a55750505091818060209403915afa90811561169b57879161166c575b501561165d576001820191600260ff19845416178355600b8101938051906001600160401b0382116116495790889392916113e18754612856565b601f8111611619575b50602090601f83116001146115b057859190836115a5575b50508160011b915f199060031b1c19161785555b600501546001600160a01b0316803b156101695761145a83929183928951948580948193631e5e831360e01b83528c60048401528d60248401526044830190612cce565b03925af1801561159b57611586575b50505483519363ffffffff8260a81c1685528060208601528592805461148e81612856565b80938801526001811690815f1461154357506001146114e8575b505060081c6001600160a01b03169233917fd7eb53a86d7419ffc42bf17e0a61b4a2a8ab7f2e62c19368cee7d8822ea9f453919081900390a46001815580f35b9091925085526020852085905b82821061152c575084016060019190507fd7eb53a86d7419ffc42bf17e0a61b4a2a8ab7f2e62c19368cee7d8822ea9f4535f6114a8565b600181602092546060858a010152019101906114f5565b90507fd7eb53a86d7419ffc42bf17e0a61b4a2a8ab7f2e62c19368cee7d8822ea9f453939450606092915060ff191682870152151560051b85010191905f6114a8565b816115909161273f565b610a9757845f611469565b86513d84823e3d90fd5b015190505f80611402565b878652818620601f19841696959493929091865b8881106115fe575083600195969798106115e6575b505050811b018555611416565b01515f1960f88460031b161c191690555f80806115d9565b8183015184558d9750600190930192602092830192016115c4565b6116439088875260208720601f850160051c81019160208610610eb957601f0160051c0190612b92565b5f6113ea565b634e487b7160e01b89526041600452602489fd5b63efcb98e760e01b8652600486fd5b61168e915060203d602011611694575b611686818361273f565b810190612c8f565b5f6113a6565b503d61167c565b86513d89823e3d90fd5b825161ffff16845286945060209384019390920191600101611384565b634e487b7160e01b89526032600452602489fd5b63015a4b7560e51b8552600485fd5b85610258604492634091b18960e11b835282600452612952565b634e487b7160e01b86526021600452602486fd5b8380fd5b83356001600160401b038111610f08576004908301016060601f198236030112610f085760405190606082018281106001600160401b03821117611869576040526117646020820161279e565b825260408101356001600160401b038111611861576117899060203691840101612810565b602083015260608101356001600160401b038111611861576020910101606081360312610f0457604051906117bd826126ed565b6117c73682612981565b82526040810135906001600160401b038211611865570136601f82011215611861578035906117f5826129ee565b91611803604051938461273f565b80835260208084019160051b8301019136831161185d57602001905b82821061184557505050918160209492938580950152604082015281520193019261129b565b602080916118528461278a565b81520191019061181f565b8d80fd5b8a80fd5b8b80fd5b634e487b7160e01b8b52604160045260248bfd5b8680fd5b50346100ed5760203660031901126100ed576118ad61019a604060209360043581526002855220612ba8565b6118ba6040518092612974565bf35b50346100ed5760203660031901126100ed57604090600435815260066020522060018060a01b038154166103ad60018060a01b036001840154169260018060a01b0360028201541690600381015461191f600561ffff600485015416930161288e565b9260405196879687526020870152604086015260018060a01b038116606086015260a01c608085015260a084015260e060c084015260e083019061292e565b50346100ed5760203660031901126100ed5760209063ffffffff906040906001600160a01b0361198c612760565b16815260048452205416604051908152f35b503461266d57602036600319011261266d576004356001600160401b03811161266d5780360360a060031982011261266d576101009060409182526119e583600401612776565b6080526119f46024840161278a565b60a052604319011261266d57604051611a0c816126ed565b611a1860448301612776565b8152611a266064830161279e565b602082015260c0526084810135906001600160401b03821161266d576004611a519236920101612810565b60e0908152611a5e612e54565b60c051516001600160a01b03165f9081526003602052604090205460ff16156126ca5760c051611a8d90612ea8565b5f52600560205260ff60405f205416156126bb57805151156126ac5760c051611ab590612ea8565b5f526006602052611ac860405f20612b17565b80519092906001600160a01b0316151580612696575b80612680575b1561267157602083015160c05183516001600160a01b0390921691823b1561266d57604051637283813d60e11b815233600482015282516001600160a01b0316602482015260209092015163ffffffff16604483015290915f9183919082908190611b5a9060806064840152608483019061292e565b03915afa80156126625761264f575b5060015491604051602081019084825230604082015246606082015260808082015260018060a01b036080511660a08201526001600160601b036020608001511660c0820152611bda60406080015160e083019063ffffffff6020809260018060a01b038151168552015116910152565b611c0481611bf6855160a061012084015261014083019061292e565b03601f19810183528261273f565b519020926001810180911161263b57600190815560c051516001600160a01b03168352600460205260408084209051959190611c3f876126ed565b63ffffffff815416875201604051808260208294549384815201908752602087209287905b8060078301106125b457611cb894549181811061259d575b818110612584575b81811061256a575b818110612550575b818110612536575b81811061251c575b81811061250257106103b15750038261273f565b60208601526001600160601b0342116124ae5760c0518051602091820151965160805160a0518651604051959a6001600160a01b0395861695919488948c949316926001600160601b0316918d9163ffffffff9182169116611d1a838b61273f565b8c8a5260405198611d2a8a612708565b338a528d848b0190426001600160601b0316825260408c019581875260608d0193845260808d0195865260a08d0194855260c08d0198895260e08d019788526101008d01998d838c52610120019b8c528d61014081019d8e52610160019e8f52825260029052604090209a600160a01b6001900390600160a01b60019003905116166001600160601b0360a01b8c5416178b55516001600160601b0316611dee908b908154906001600160601b0360a01b9060a01b169060018060a01b0316179055565b60018a019351600481101561249a5784549151935192516001600160e81b031990921660ff9091161760089390931b610100600160a81b03169290921760a89190911b63ffffffff60a81b161760c89190911b63ffffffff60c81b161790559051905160a01b6001600160a01b0319166001600160a01b039190911617600285015561ffff905160038501805461ffff191661ffff93909216929092161790555180516004840180546001600160a01b03199081166001600160a01b03938416179091558a8301516005860180548316918416919091179055604083015160068601805483169184169190911790556060830151608084015160a01b909116911617600784015561ffff60a08201511661ffff60088501911661ffff1982541617905560c0600984019101518051906001600160401b038211611649578190611f378454612856565b8c601f821161246c575b50508b90601f8311600114612408578a926123fd575b50508160011b915f199060031b1c19161790555b518051600a8301916001600160401b0382116123e957611f8b8354612856565b601f81116123bb575b508990601f831160011461235557600b9493929189918361234a575b50508160011b915f199060031b1c19161790555b0190518051906001600160401b038211610ec3578190611fe48454612856565b601f811161231c575b508890601f83116001146122ba5787926122af575b50508160011b915f199060031b1c19161790555b60408101516001600160a01b03168015158061229b575b612156575b5060208101516001600160a01b0316803b1561171357838091602460405180948193638679c78160e01b83528a60048401525af1801561214b57908491612136575b50506040608001519163ffffffff8660018060a01b03855116940151169060018060a01b0360805116926001600160601b03608081602060800151169201511642019182421161212257926001969594927f4a09af06a0e08fd1c053a8b400de7833019c88066be8a2d3b3b17174a74fe31792899551946040519384528b8401526040830152606082015260a0608082015280612116339460a083019061292e565b0390a455604051908152f35b634e487b7160e01b87526011600452602487fd5b816121409161273f565b61016957825f612074565b6040513d86823e3d90fd5b612207906001600160601b0360206080015116908580604051938a8501906323b872dd60e01b825233602487015230604487015260648601526064855261219e60848661273f565b604051946121ad60408761273f565b8b86527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648c870152519082855af13d15612293573d916121ec836127f5565b926121fa604051948561273f565b83523d888b85013e612f87565b80519086821592831561227b575b50505015612223575f612032565b60405162461bcd60e51b815260048101869052602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b61228b9350820181019101612c8f565b5f8681612215565b606091612f87565b5060a0516001600160601b0316151561202d565b015190505f80612002565b8488528988209250601f198416885b8b8282106123065750509084600195949392106122ee575b505050811b019055612016565b01515f1960f88460031b161c191690555f80806122e1565b60018596829396860151815501950193016122c9565b612344908589528a8920601f850160051c8101918c8610610eb957601f0160051c0190612b92565b5f611fed565b015190505f80611fb0565b8389528a89209190601f1984168a5b8d8282106123a5575050916001939185600b989796941061238d575b505050811b019055611fc4565b01515f1960f88460031b161c191690555f8080612380565b6001859682939686015181550195019301612364565b6123e390848a528b8a20601f850160051c8101918d8610610eb957601f0160051c0190612b92565b5f611f94565b634e487b7160e01b88526041600452602488fd5b015190505f80611f57565b848b528c8b209250601f1984168b8e5b82821061245457505090846001959493921061243c575b505050811b019055611f6b565b01515f1960f88460031b161c191690555f808061242f565b80600186978294978701518155019601940190612418565b858c52808c2061249392601f860160051c8201928610610eb957601f0160051c0190612b92565b5f8c611f41565b634e487b7160e01b8f52602160045260248ffd5b60405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203960448201526536206269747360d01b6064820152608490fd5b92602060019163ffffffff8560c01c168152019301610376565b92602060019163ffffffff8560a01c168152019301611ca4565b92602060019163ffffffff8560801c168152019301611c9c565b92602060019163ffffffff8560601c168152019301611c94565b92602060019163ffffffff8560401c168152019301611c8c565b92602060019163ffffffff85831c168152019301611c84565b92602060019163ffffffff85168152019301611c7c565b916008919350610100600191865463ffffffff8116825263ffffffff8160201c16602083015263ffffffff8160401c16604083015263ffffffff8160601c16606083015263ffffffff8160801c16608083015263ffffffff8160a01c1660a083015263ffffffff8160c01c1660c083015260e01c60e0820152019401920184929391611c64565b634e487b7160e01b83526011600452602483fd5b61265b91505f9061273f565b5f5f611b69565b6040513d5f823e3d90fd5b5f80fd5b6314b0a41d60e11b5f5260045ffd5b506001600160601b036080840151161515611ae4565b5060208301516001600160a01b03161515611ade565b636b1a1b6960e11b5f5260045ffd5b63c292b29760e01b5f5260045ffd5b6308c7f00160e31b5f5260045ffd5b634e487b7160e01b5f52604160045260245ffd5b604081019081106001600160401b038211176126d957604052565b61018081019081106001600160401b038211176126d957604052565b60e081019081106001600160401b038211176126d957604052565b90601f801991011681019081106001600160401b038211176126d957604052565b600435906001600160a01b038216820361266d57565b35906001600160a01b038216820361266d57565b35906001600160601b038216820361266d57565b359063ffffffff8216820361266d57565b604090600319011261266d57604051906127c8826126ed565b816004356001600160a01b038116810361266d5781526024359063ffffffff8216820361266d5760200152565b6001600160401b0381116126d957601f01601f191660200190565b81601f8201121561266d57803590612827826127f5565b92612835604051948561273f565b8284526020838301011161266d57815f926020809301838601378301015290565b90600182811c92168015612884575b602083101461287057565b634e487b7160e01b5f52602260045260245ffd5b91607f1691612865565b9060405191825f8254926128a184612856565b808452936001811690811561290c57506001146128c8575b506128c69250038361273f565b565b90505f9291925260205f20905f915b8183106128f05750509060206128c6928201015f6128b9565b60209193508060019154838589010152019101909184926128d7565b9050602092506128c694915060ff191682840152151560051b8201015f6128b9565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b600481101561296057602452565b634e487b7160e01b5f52602160045260245ffd5b9060048210156129605752565b919082604091031261266d57604051612999816126ed565b6020808294803584520135910152565b9080601f8301121561266d57604051916129c2836126ed565b82906040810192831161266d57905b8282106129de5750505090565b81358152602091820191016129d1565b6001600160401b0381116126d95760051b60200190565b9080601f8301121561266d578135612a1c816129ee565b92612a2a604051948561273f565b81845260208085019260051b82010192831161266d57602001905b828210612a525750505090565b60208091612a5f8461279e565b815201910190612a45565b80516001600160a01b039081168352602080830151821690840152604080830151821690840152606080830151909116908301526080808201516001600160601b03169083015260a08082015161ffff169083015260c09081015160e0918301829052612adb92919091019061292e565b90565b90602080835192838152019201905f5b818110612afb5750505090565b825163ffffffff16845260209384019390920191600101612aee565b90604051612b2481612724565b82546001600160a01b0390811682526001840154811660208301526002840154811660408301526003840154908116606083015260a090811c6080830152600484015461ffff169082015291829060c090612b819060050161288e565b910152565b60048210156129605752565b818110612b9d575050565b5f8155600101612b92565b90604051612bb581612708565b610160612b81600b8395805460018060a01b038116865260a01c602086015263ffffffff6001820154612bee60ff821660408901612b86565b60018060a01b038160081c166060880152818160a81c16608088015260c81c1660a0860152600281015460018060a01b03811660c087015260a01c60e086015261ffff600382015416610100860152612c4960048201612b17565b610120860152612c5b600a820161288e565b6101408601520161288e565b8051821015612c7b5760209160051b010190565b634e487b7160e01b5f52603260045260245ffd5b9081602091031261266d5751801515810361266d5790565b905f905b60028210612cb857505050565b6020806001928551815201930191019091612cab565b63ffffffff815116825260208101516020830152602060408201518051604085015201516060830152612d1b60206060830151612d0f608086018251612ca7565b015160c0840190612ca7565b60a0612d396080830151610140610100860152610140850190612ade565b91015191610120818303910152815180825260208201916020808360051b8301019401925f915b838310612d6f57505050505090565b9091929394601f1982820301835285519063ffffffff82511681526040612da5602084015160606020850152606084019061292e565b9201519060408184039101526020608081606085019381815180518852015182870152015193606060408201528451809452019201905f905b808210612dfd5750505060208060019297019301930191939290612d60565b9091926020806001926001600160601b038751168152019401920190612dde565b60405190612e2b82612724565b606060c0835f81525f60208201525f60408201525f838201525f60808201525f60a08201520152565b60025f5414612e635760025f55565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b602081519101516040519060208201926001600160601b03199060601b16835263ffffffff60a01b9060a01b16603482015260208152612ee960408261273f565b5190519060208110612ef9575090565b5f199060200360031b1b1690565b60408101908151600481101561296057159081612f37575b50612f31575160048110156129605790565b50600390565b90506001600160601b03608061012082602085015116930151015116016001600160601b038111612f73576001600160601b031642115f612f1f565b634e487b7160e01b5f52601160045260245ffd5b91929015612fe95750815115612f9b575090565b3b15612fa45790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015612ffc5750805190602001fd5b60405162461bcd60e51b81526020600482015290819061302090602483019061292e565b0390fdfea26469706673582212207f4f316c1451b8bf2bde6bcde50af5b3935296879a476f9d716310602758c6b064736f6c634300081b0033",
}

// TaskMailboxABI is the input ABI used to generate the binding from.
// Deprecated: Use TaskMailboxMetaData.ABI instead.
var TaskMailboxABI = TaskMailboxMetaData.ABI

// TaskMailboxBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use TaskMailboxMetaData.Bin instead.
var TaskMailboxBin = TaskMailboxMetaData.Bin

// DeployTaskMailbox deploys a new Ethereum contract, binding an instance of TaskMailbox to it.
func DeployTaskMailbox(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *TaskMailbox, error) {
	parsed, err := TaskMailboxMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(TaskMailboxBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &TaskMailbox{TaskMailboxCaller: TaskMailboxCaller{contract: contract}, TaskMailboxTransactor: TaskMailboxTransactor{contract: contract}, TaskMailboxFilterer: TaskMailboxFilterer{contract: contract}}, nil
}

// TaskMailbox is an auto generated Go binding around an Ethereum contract.
type TaskMailbox struct {
	TaskMailboxCaller     // Read-only binding to the contract
	TaskMailboxTransactor // Write-only binding to the contract
	TaskMailboxFilterer   // Log filterer for contract events
}

// TaskMailboxCaller is an auto generated read-only Go binding around an Ethereum contract.
type TaskMailboxCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TaskMailboxTransactor is an auto generated write-only Go binding around an Ethereum contract.
type TaskMailboxTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TaskMailboxFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type TaskMailboxFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TaskMailboxSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type TaskMailboxSession struct {
	Contract     *TaskMailbox      // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// TaskMailboxCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type TaskMailboxCallerSession struct {
	Contract *TaskMailboxCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts      // Call options to use throughout this session
}

// TaskMailboxTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type TaskMailboxTransactorSession struct {
	Contract     *TaskMailboxTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts      // Transaction auth options to use throughout this session
}

// TaskMailboxRaw is an auto generated low-level Go binding around an Ethereum contract.
type TaskMailboxRaw struct {
	Contract *TaskMailbox // Generic contract binding to access the raw methods on
}

// TaskMailboxCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type TaskMailboxCallerRaw struct {
	Contract *TaskMailboxCaller // Generic read-only contract binding to access the raw methods on
}

// TaskMailboxTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type TaskMailboxTransactorRaw struct {
	Contract *TaskMailboxTransactor // Generic write-only contract binding to access the raw methods on
}

// NewTaskMailbox creates a new instance of TaskMailbox, bound to a specific deployed contract.
func NewTaskMailbox(address common.Address, backend bind.ContractBackend) (*TaskMailbox, error) {
	contract, err := bindTaskMailbox(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &TaskMailbox{TaskMailboxCaller: TaskMailboxCaller{contract: contract}, TaskMailboxTransactor: TaskMailboxTransactor{contract: contract}, TaskMailboxFilterer: TaskMailboxFilterer{contract: contract}}, nil
}

// NewTaskMailboxCaller creates a new read-only instance of TaskMailbox, bound to a specific deployed contract.
func NewTaskMailboxCaller(address common.Address, caller bind.ContractCaller) (*TaskMailboxCaller, error) {
	contract, err := bindTaskMailbox(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &TaskMailboxCaller{contract: contract}, nil
}

// NewTaskMailboxTransactor creates a new write-only instance of TaskMailbox, bound to a specific deployed contract.
func NewTaskMailboxTransactor(address common.Address, transactor bind.ContractTransactor) (*TaskMailboxTransactor, error) {
	contract, err := bindTaskMailbox(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &TaskMailboxTransactor{contract: contract}, nil
}

// NewTaskMailboxFilterer creates a new log filterer instance of TaskMailbox, bound to a specific deployed contract.
func NewTaskMailboxFilterer(address common.Address, filterer bind.ContractFilterer) (*TaskMailboxFilterer, error) {
	contract, err := bindTaskMailbox(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &TaskMailboxFilterer{contract: contract}, nil
}

// bindTaskMailbox binds a generic wrapper to an already deployed contract.
func bindTaskMailbox(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := TaskMailboxMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_TaskMailbox *TaskMailboxRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _TaskMailbox.Contract.TaskMailboxCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_TaskMailbox *TaskMailboxRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TaskMailbox.Contract.TaskMailboxTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_TaskMailbox *TaskMailboxRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _TaskMailbox.Contract.TaskMailboxTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_TaskMailbox *TaskMailboxCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _TaskMailbox.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_TaskMailbox *TaskMailboxTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TaskMailbox.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_TaskMailbox *TaskMailboxTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _TaskMailbox.Contract.contract.Transact(opts, method, params...)
}

// AvsConfigs is a free data retrieval call binding the contract method 0x14e51b6c.
//
// Solidity: function avsConfigs(address avs) view returns(uint32 aggregatorOperatorSetId)
func (_TaskMailbox *TaskMailboxCaller) AvsConfigs(opts *bind.CallOpts, avs common.Address) (uint32, error) {
	var out []interface{}
	err := _TaskMailbox.contract.Call(opts, &out, "avsConfigs", avs)

	if err != nil {
		return *new(uint32), err
	}

	out0 := *abi.ConvertType(out[0], new(uint32)).(*uint32)

	return out0, err

}

// AvsConfigs is a free data retrieval call binding the contract method 0x14e51b6c.
//
// Solidity: function avsConfigs(address avs) view returns(uint32 aggregatorOperatorSetId)
func (_TaskMailbox *TaskMailboxSession) AvsConfigs(avs common.Address) (uint32, error) {
	return _TaskMailbox.Contract.AvsConfigs(&_TaskMailbox.CallOpts, avs)
}

// AvsConfigs is a free data retrieval call binding the contract method 0x14e51b6c.
//
// Solidity: function avsConfigs(address avs) view returns(uint32 aggregatorOperatorSetId)
func (_TaskMailbox *TaskMailboxCallerSession) AvsConfigs(avs common.Address) (uint32, error) {
	return _TaskMailbox.Contract.AvsConfigs(&_TaskMailbox.CallOpts, avs)
}

// ExecutorOperatorSetTaskConfigs is a free data retrieval call binding the contract method 0x1c7edb17.
//
// Solidity: function executorOperatorSetTaskConfigs(bytes32 operatorSetKey) view returns(address certificateVerifier, address taskHook, address feeToken, address feeCollector, uint96 taskSLA, uint16 stakeProportionThreshold, bytes taskMetadata)
func (_TaskMailbox *TaskMailboxCaller) ExecutorOperatorSetTaskConfigs(opts *bind.CallOpts, operatorSetKey [32]byte) (struct {
	CertificateVerifier      common.Address
	TaskHook                 common.Address
	FeeToken                 common.Address
	FeeCollector             common.Address
	TaskSLA                  *big.Int
	StakeProportionThreshold uint16
	TaskMetadata             []byte
}, error) {
	var out []interface{}
	err := _TaskMailbox.contract.Call(opts, &out, "executorOperatorSetTaskConfigs", operatorSetKey)

	outstruct := new(struct {
		CertificateVerifier      common.Address
		TaskHook                 common.Address
		FeeToken                 common.Address
		FeeCollector             common.Address
		TaskSLA                  *big.Int
		StakeProportionThreshold uint16
		TaskMetadata             []byte
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.CertificateVerifier = *abi.ConvertType(out[0], new(common.Address)).(*common.Address)
	outstruct.TaskHook = *abi.ConvertType(out[1], new(common.Address)).(*common.Address)
	outstruct.FeeToken = *abi.ConvertType(out[2], new(common.Address)).(*common.Address)
	outstruct.FeeCollector = *abi.ConvertType(out[3], new(common.Address)).(*common.Address)
	outstruct.TaskSLA = *abi.ConvertType(out[4], new(*big.Int)).(**big.Int)
	outstruct.StakeProportionThreshold = *abi.ConvertType(out[5], new(uint16)).(*uint16)
	outstruct.TaskMetadata = *abi.ConvertType(out[6], new([]byte)).(*[]byte)

	return *outstruct, err

}

// ExecutorOperatorSetTaskConfigs is a free data retrieval call binding the contract method 0x1c7edb17.
//
// Solidity: function executorOperatorSetTaskConfigs(bytes32 operatorSetKey) view returns(address certificateVerifier, address taskHook, address feeToken, address feeCollector, uint96 taskSLA, uint16 stakeProportionThreshold, bytes taskMetadata)
func (_TaskMailbox *TaskMailboxSession) ExecutorOperatorSetTaskConfigs(operatorSetKey [32]byte) (struct {
	CertificateVerifier      common.Address
	TaskHook                 common.Address
	FeeToken                 common.Address
	FeeCollector             common.Address
	TaskSLA                  *big.Int
	StakeProportionThreshold uint16
	TaskMetadata             []byte
}, error) {
	return _TaskMailbox.Contract.ExecutorOperatorSetTaskConfigs(&_TaskMailbox.CallOpts, operatorSetKey)
}

// ExecutorOperatorSetTaskConfigs is a free data retrieval call binding the contract method 0x1c7edb17.
//
// Solidity: function executorOperatorSetTaskConfigs(bytes32 operatorSetKey) view returns(address certificateVerifier, address taskHook, address feeToken, address feeCollector, uint96 taskSLA, uint16 stakeProportionThreshold, bytes taskMetadata)
func (_TaskMailbox *TaskMailboxCallerSession) ExecutorOperatorSetTaskConfigs(operatorSetKey [32]byte) (struct {
	CertificateVerifier      common.Address
	TaskHook                 common.Address
	FeeToken                 common.Address
	FeeCollector             common.Address
	TaskSLA                  *big.Int
	StakeProportionThreshold uint16
	TaskMetadata             []byte
}, error) {
	return _TaskMailbox.Contract.ExecutorOperatorSetTaskConfigs(&_TaskMailbox.CallOpts, operatorSetKey)
}

// GetAvsConfig is a free data retrieval call binding the contract method 0xa401ba41.
//
// Solidity: function getAvsConfig(address avs) view returns((uint32,uint32[]))
func (_TaskMailbox *TaskMailboxCaller) GetAvsConfig(opts *bind.CallOpts, avs common.Address) (ITaskMailboxTypesAvsConfig, error) {
	var out []interface{}
	err := _TaskMailbox.contract.Call(opts, &out, "getAvsConfig", avs)

	if err != nil {
		return *new(ITaskMailboxTypesAvsConfig), err
	}

	out0 := *abi.ConvertType(out[0], new(ITaskMailboxTypesAvsConfig)).(*ITaskMailboxTypesAvsConfig)

	return out0, err

}

// GetAvsConfig is a free data retrieval call binding the contract method 0xa401ba41.
//
// Solidity: function getAvsConfig(address avs) view returns((uint32,uint32[]))
func (_TaskMailbox *TaskMailboxSession) GetAvsConfig(avs common.Address) (ITaskMailboxTypesAvsConfig, error) {
	return _TaskMailbox.Contract.GetAvsConfig(&_TaskMailbox.CallOpts, avs)
}

// GetAvsConfig is a free data retrieval call binding the contract method 0xa401ba41.
//
// Solidity: function getAvsConfig(address avs) view returns((uint32,uint32[]))
func (_TaskMailbox *TaskMailboxCallerSession) GetAvsConfig(avs common.Address) (ITaskMailboxTypesAvsConfig, error) {
	return _TaskMailbox.Contract.GetAvsConfig(&_TaskMailbox.CallOpts, avs)
}

// GetExecutorOperatorSetTaskConfig is a free data retrieval call binding the contract method 0x6bf6fad5.
//
// Solidity: function getExecutorOperatorSetTaskConfig((address,uint32) operatorSet) view returns((address,address,address,address,uint96,uint16,bytes))
func (_TaskMailbox *TaskMailboxCaller) GetExecutorOperatorSetTaskConfig(opts *bind.CallOpts, operatorSet OperatorSet) (ITaskMailboxTypesExecutorOperatorSetTaskConfig, error) {
	var out []interface{}
	err := _TaskMailbox.contract.Call(opts, &out, "getExecutorOperatorSetTaskConfig", operatorSet)

	if err != nil {
		return *new(ITaskMailboxTypesExecutorOperatorSetTaskConfig), err
	}

	out0 := *abi.ConvertType(out[0], new(ITaskMailboxTypesExecutorOperatorSetTaskConfig)).(*ITaskMailboxTypesExecutorOperatorSetTaskConfig)

	return out0, err

}

// GetExecutorOperatorSetTaskConfig is a free data retrieval call binding the contract method 0x6bf6fad5.
//
// Solidity: function getExecutorOperatorSetTaskConfig((address,uint32) operatorSet) view returns((address,address,address,address,uint96,uint16,bytes))
func (_TaskMailbox *TaskMailboxSession) GetExecutorOperatorSetTaskConfig(operatorSet OperatorSet) (ITaskMailboxTypesExecutorOperatorSetTaskConfig, error) {
	return _TaskMailbox.Contract.GetExecutorOperatorSetTaskConfig(&_TaskMailbox.CallOpts, operatorSet)
}

// GetExecutorOperatorSetTaskConfig is a free data retrieval call binding the contract method 0x6bf6fad5.
//
// Solidity: function getExecutorOperatorSetTaskConfig((address,uint32) operatorSet) view returns((address,address,address,address,uint96,uint16,bytes))
func (_TaskMailbox *TaskMailboxCallerSession) GetExecutorOperatorSetTaskConfig(operatorSet OperatorSet) (ITaskMailboxTypesExecutorOperatorSetTaskConfig, error) {
	return _TaskMailbox.Contract.GetExecutorOperatorSetTaskConfig(&_TaskMailbox.CallOpts, operatorSet)
}

// GetTaskInfo is a free data retrieval call binding the contract method 0x4ad52e02.
//
// Solidity: function getTaskInfo(bytes32 taskHash) view returns((address,uint96,uint8,address,uint32,uint32,address,uint96,uint16,(address,address,address,address,uint96,uint16,bytes),bytes,bytes))
func (_TaskMailbox *TaskMailboxCaller) GetTaskInfo(opts *bind.CallOpts, taskHash [32]byte) (ITaskMailboxTypesTask, error) {
	var out []interface{}
	err := _TaskMailbox.contract.Call(opts, &out, "getTaskInfo", taskHash)

	if err != nil {
		return *new(ITaskMailboxTypesTask), err
	}

	out0 := *abi.ConvertType(out[0], new(ITaskMailboxTypesTask)).(*ITaskMailboxTypesTask)

	return out0, err

}

// GetTaskInfo is a free data retrieval call binding the contract method 0x4ad52e02.
//
// Solidity: function getTaskInfo(bytes32 taskHash) view returns((address,uint96,uint8,address,uint32,uint32,address,uint96,uint16,(address,address,address,address,uint96,uint16,bytes),bytes,bytes))
func (_TaskMailbox *TaskMailboxSession) GetTaskInfo(taskHash [32]byte) (ITaskMailboxTypesTask, error) {
	return _TaskMailbox.Contract.GetTaskInfo(&_TaskMailbox.CallOpts, taskHash)
}

// GetTaskInfo is a free data retrieval call binding the contract method 0x4ad52e02.
//
// Solidity: function getTaskInfo(bytes32 taskHash) view returns((address,uint96,uint8,address,uint32,uint32,address,uint96,uint16,(address,address,address,address,uint96,uint16,bytes),bytes,bytes))
func (_TaskMailbox *TaskMailboxCallerSession) GetTaskInfo(taskHash [32]byte) (ITaskMailboxTypesTask, error) {
	return _TaskMailbox.Contract.GetTaskInfo(&_TaskMailbox.CallOpts, taskHash)
}

// GetTaskResult is a free data retrieval call binding the contract method 0x62fee037.
//
// Solidity: function getTaskResult(bytes32 taskHash) view returns(bytes)
func (_TaskMailbox *TaskMailboxCaller) GetTaskResult(opts *bind.CallOpts, taskHash [32]byte) ([]byte, error) {
	var out []interface{}
	err := _TaskMailbox.contract.Call(opts, &out, "getTaskResult", taskHash)

	if err != nil {
		return *new([]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([]byte)).(*[]byte)

	return out0, err

}

// GetTaskResult is a free data retrieval call binding the contract method 0x62fee037.
//
// Solidity: function getTaskResult(bytes32 taskHash) view returns(bytes)
func (_TaskMailbox *TaskMailboxSession) GetTaskResult(taskHash [32]byte) ([]byte, error) {
	return _TaskMailbox.Contract.GetTaskResult(&_TaskMailbox.CallOpts, taskHash)
}

// GetTaskResult is a free data retrieval call binding the contract method 0x62fee037.
//
// Solidity: function getTaskResult(bytes32 taskHash) view returns(bytes)
func (_TaskMailbox *TaskMailboxCallerSession) GetTaskResult(taskHash [32]byte) ([]byte, error) {
	return _TaskMailbox.Contract.GetTaskResult(&_TaskMailbox.CallOpts, taskHash)
}

// GetTaskStatus is a free data retrieval call binding the contract method 0x2bf6cc79.
//
// Solidity: function getTaskStatus(bytes32 taskHash) view returns(uint8)
func (_TaskMailbox *TaskMailboxCaller) GetTaskStatus(opts *bind.CallOpts, taskHash [32]byte) (uint8, error) {
	var out []interface{}
	err := _TaskMailbox.contract.Call(opts, &out, "getTaskStatus", taskHash)

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// GetTaskStatus is a free data retrieval call binding the contract method 0x2bf6cc79.
//
// Solidity: function getTaskStatus(bytes32 taskHash) view returns(uint8)
func (_TaskMailbox *TaskMailboxSession) GetTaskStatus(taskHash [32]byte) (uint8, error) {
	return _TaskMailbox.Contract.GetTaskStatus(&_TaskMailbox.CallOpts, taskHash)
}

// GetTaskStatus is a free data retrieval call binding the contract method 0x2bf6cc79.
//
// Solidity: function getTaskStatus(bytes32 taskHash) view returns(uint8)
func (_TaskMailbox *TaskMailboxCallerSession) GetTaskStatus(taskHash [32]byte) (uint8, error) {
	return _TaskMailbox.Contract.GetTaskStatus(&_TaskMailbox.CallOpts, taskHash)
}

// IsAvsRegistered is a free data retrieval call binding the contract method 0xe3d276ab.
//
// Solidity: function isAvsRegistered(address avs) view returns(bool isRegistered)
func (_TaskMailbox *TaskMailboxCaller) IsAvsRegistered(opts *bind.CallOpts, avs common.Address) (bool, error) {
	var out []interface{}
	err := _TaskMailbox.contract.Call(opts, &out, "isAvsRegistered", avs)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsAvsRegistered is a free data retrieval call binding the contract method 0xe3d276ab.
//
// Solidity: function isAvsRegistered(address avs) view returns(bool isRegistered)
func (_TaskMailbox *TaskMailboxSession) IsAvsRegistered(avs common.Address) (bool, error) {
	return _TaskMailbox.Contract.IsAvsRegistered(&_TaskMailbox.CallOpts, avs)
}

// IsAvsRegistered is a free data retrieval call binding the contract method 0xe3d276ab.
//
// Solidity: function isAvsRegistered(address avs) view returns(bool isRegistered)
func (_TaskMailbox *TaskMailboxCallerSession) IsAvsRegistered(avs common.Address) (bool, error) {
	return _TaskMailbox.Contract.IsAvsRegistered(&_TaskMailbox.CallOpts, avs)
}

// IsExecutorOperatorSetRegistered is a free data retrieval call binding the contract method 0xfa2c0b37.
//
// Solidity: function isExecutorOperatorSetRegistered(bytes32 operatorSetKey) view returns(bool isRegistered)
func (_TaskMailbox *TaskMailboxCaller) IsExecutorOperatorSetRegistered(opts *bind.CallOpts, operatorSetKey [32]byte) (bool, error) {
	var out []interface{}
	err := _TaskMailbox.contract.Call(opts, &out, "isExecutorOperatorSetRegistered", operatorSetKey)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsExecutorOperatorSetRegistered is a free data retrieval call binding the contract method 0xfa2c0b37.
//
// Solidity: function isExecutorOperatorSetRegistered(bytes32 operatorSetKey) view returns(bool isRegistered)
func (_TaskMailbox *TaskMailboxSession) IsExecutorOperatorSetRegistered(operatorSetKey [32]byte) (bool, error) {
	return _TaskMailbox.Contract.IsExecutorOperatorSetRegistered(&_TaskMailbox.CallOpts, operatorSetKey)
}

// IsExecutorOperatorSetRegistered is a free data retrieval call binding the contract method 0xfa2c0b37.
//
// Solidity: function isExecutorOperatorSetRegistered(bytes32 operatorSetKey) view returns(bool isRegistered)
func (_TaskMailbox *TaskMailboxCallerSession) IsExecutorOperatorSetRegistered(operatorSetKey [32]byte) (bool, error) {
	return _TaskMailbox.Contract.IsExecutorOperatorSetRegistered(&_TaskMailbox.CallOpts, operatorSetKey)
}

// CancelTask is a paid mutator transaction binding the contract method 0xee8ca3b5.
//
// Solidity: function cancelTask(bytes32 taskHash) returns()
func (_TaskMailbox *TaskMailboxTransactor) CancelTask(opts *bind.TransactOpts, taskHash [32]byte) (*types.Transaction, error) {
	return _TaskMailbox.contract.Transact(opts, "cancelTask", taskHash)
}

// CancelTask is a paid mutator transaction binding the contract method 0xee8ca3b5.
//
// Solidity: function cancelTask(bytes32 taskHash) returns()
func (_TaskMailbox *TaskMailboxSession) CancelTask(taskHash [32]byte) (*types.Transaction, error) {
	return _TaskMailbox.Contract.CancelTask(&_TaskMailbox.TransactOpts, taskHash)
}

// CancelTask is a paid mutator transaction binding the contract method 0xee8ca3b5.
//
// Solidity: function cancelTask(bytes32 taskHash) returns()
func (_TaskMailbox *TaskMailboxTransactorSession) CancelTask(taskHash [32]byte) (*types.Transaction, error) {
	return _TaskMailbox.Contract.CancelTask(&_TaskMailbox.TransactOpts, taskHash)
}

// CreateTask is a paid mutator transaction binding the contract method 0x0443b7a0.
//
// Solidity: function createTask((address,uint96,(address,uint32),bytes) taskParams) returns(bytes32)
func (_TaskMailbox *TaskMailboxTransactor) CreateTask(opts *bind.TransactOpts, taskParams ITaskMailboxTypesTaskParams) (*types.Transaction, error) {
	return _TaskMailbox.contract.Transact(opts, "createTask", taskParams)
}

// CreateTask is a paid mutator transaction binding the contract method 0x0443b7a0.
//
// Solidity: function createTask((address,uint96,(address,uint32),bytes) taskParams) returns(bytes32)
func (_TaskMailbox *TaskMailboxSession) CreateTask(taskParams ITaskMailboxTypesTaskParams) (*types.Transaction, error) {
	return _TaskMailbox.Contract.CreateTask(&_TaskMailbox.TransactOpts, taskParams)
}

// CreateTask is a paid mutator transaction binding the contract method 0x0443b7a0.
//
// Solidity: function createTask((address,uint96,(address,uint32),bytes) taskParams) returns(bytes32)
func (_TaskMailbox *TaskMailboxTransactorSession) CreateTask(taskParams ITaskMailboxTypesTaskParams) (*types.Transaction, error) {
	return _TaskMailbox.Contract.CreateTask(&_TaskMailbox.TransactOpts, taskParams)
}

// RegisterAvs is a paid mutator transaction binding the contract method 0xef1a14d7.
//
// Solidity: function registerAvs(address avs, bool isRegistered) returns()
func (_TaskMailbox *TaskMailboxTransactor) RegisterAvs(opts *bind.TransactOpts, avs common.Address, isRegistered bool) (*types.Transaction, error) {
	return _TaskMailbox.contract.Transact(opts, "registerAvs", avs, isRegistered)
}

// RegisterAvs is a paid mutator transaction binding the contract method 0xef1a14d7.
//
// Solidity: function registerAvs(address avs, bool isRegistered) returns()
func (_TaskMailbox *TaskMailboxSession) RegisterAvs(avs common.Address, isRegistered bool) (*types.Transaction, error) {
	return _TaskMailbox.Contract.RegisterAvs(&_TaskMailbox.TransactOpts, avs, isRegistered)
}

// RegisterAvs is a paid mutator transaction binding the contract method 0xef1a14d7.
//
// Solidity: function registerAvs(address avs, bool isRegistered) returns()
func (_TaskMailbox *TaskMailboxTransactorSession) RegisterAvs(avs common.Address, isRegistered bool) (*types.Transaction, error) {
	return _TaskMailbox.Contract.RegisterAvs(&_TaskMailbox.TransactOpts, avs, isRegistered)
}

// SetAvsConfig is a paid mutator transaction binding the contract method 0x867f1267.
//
// Solidity: function setAvsConfig(address avs, (uint32,uint32[]) config) returns()
func (_TaskMailbox *TaskMailboxTransactor) SetAvsConfig(opts *bind.TransactOpts, avs common.Address, config ITaskMailboxTypesAvsConfig) (*types.Transaction, error) {
	return _TaskMailbox.contract.Transact(opts, "setAvsConfig", avs, config)
}

// SetAvsConfig is a paid mutator transaction binding the contract method 0x867f1267.
//
// Solidity: function setAvsConfig(address avs, (uint32,uint32[]) config) returns()
func (_TaskMailbox *TaskMailboxSession) SetAvsConfig(avs common.Address, config ITaskMailboxTypesAvsConfig) (*types.Transaction, error) {
	return _TaskMailbox.Contract.SetAvsConfig(&_TaskMailbox.TransactOpts, avs, config)
}

// SetAvsConfig is a paid mutator transaction binding the contract method 0x867f1267.
//
// Solidity: function setAvsConfig(address avs, (uint32,uint32[]) config) returns()
func (_TaskMailbox *TaskMailboxTransactorSession) SetAvsConfig(avs common.Address, config ITaskMailboxTypesAvsConfig) (*types.Transaction, error) {
	return _TaskMailbox.Contract.SetAvsConfig(&_TaskMailbox.TransactOpts, avs, config)
}

// SetExecutorOperatorSetTaskConfig is a paid mutator transaction binding the contract method 0x4e138f39.
//
// Solidity: function setExecutorOperatorSetTaskConfig((address,uint32) operatorSet, (address,address,address,address,uint96,uint16,bytes) config) returns()
func (_TaskMailbox *TaskMailboxTransactor) SetExecutorOperatorSetTaskConfig(opts *bind.TransactOpts, operatorSet OperatorSet, config ITaskMailboxTypesExecutorOperatorSetTaskConfig) (*types.Transaction, error) {
	return _TaskMailbox.contract.Transact(opts, "setExecutorOperatorSetTaskConfig", operatorSet, config)
}

// SetExecutorOperatorSetTaskConfig is a paid mutator transaction binding the contract method 0x4e138f39.
//
// Solidity: function setExecutorOperatorSetTaskConfig((address,uint32) operatorSet, (address,address,address,address,uint96,uint16,bytes) config) returns()
func (_TaskMailbox *TaskMailboxSession) SetExecutorOperatorSetTaskConfig(operatorSet OperatorSet, config ITaskMailboxTypesExecutorOperatorSetTaskConfig) (*types.Transaction, error) {
	return _TaskMailbox.Contract.SetExecutorOperatorSetTaskConfig(&_TaskMailbox.TransactOpts, operatorSet, config)
}

// SetExecutorOperatorSetTaskConfig is a paid mutator transaction binding the contract method 0x4e138f39.
//
// Solidity: function setExecutorOperatorSetTaskConfig((address,uint32) operatorSet, (address,address,address,address,uint96,uint16,bytes) config) returns()
func (_TaskMailbox *TaskMailboxTransactorSession) SetExecutorOperatorSetTaskConfig(operatorSet OperatorSet, config ITaskMailboxTypesExecutorOperatorSetTaskConfig) (*types.Transaction, error) {
	return _TaskMailbox.Contract.SetExecutorOperatorSetTaskConfig(&_TaskMailbox.TransactOpts, operatorSet, config)
}

// SubmitResult is a paid mutator transaction binding the contract method 0x3b433719.
//
// Solidity: function submitResult(bytes32 taskHash, (uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),uint32[],(uint32,bytes,((uint256,uint256),uint96[]))[]) cert, bytes result) returns()
func (_TaskMailbox *TaskMailboxTransactor) SubmitResult(opts *bind.TransactOpts, taskHash [32]byte, cert IBN254CertificateVerifierBN254Certificate, result []byte) (*types.Transaction, error) {
	return _TaskMailbox.contract.Transact(opts, "submitResult", taskHash, cert, result)
}

// SubmitResult is a paid mutator transaction binding the contract method 0x3b433719.
//
// Solidity: function submitResult(bytes32 taskHash, (uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),uint32[],(uint32,bytes,((uint256,uint256),uint96[]))[]) cert, bytes result) returns()
func (_TaskMailbox *TaskMailboxSession) SubmitResult(taskHash [32]byte, cert IBN254CertificateVerifierBN254Certificate, result []byte) (*types.Transaction, error) {
	return _TaskMailbox.Contract.SubmitResult(&_TaskMailbox.TransactOpts, taskHash, cert, result)
}

// SubmitResult is a paid mutator transaction binding the contract method 0x3b433719.
//
// Solidity: function submitResult(bytes32 taskHash, (uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),uint32[],(uint32,bytes,((uint256,uint256),uint96[]))[]) cert, bytes result) returns()
func (_TaskMailbox *TaskMailboxTransactorSession) SubmitResult(taskHash [32]byte, cert IBN254CertificateVerifierBN254Certificate, result []byte) (*types.Transaction, error) {
	return _TaskMailbox.Contract.SubmitResult(&_TaskMailbox.TransactOpts, taskHash, cert, result)
}

// TaskMailboxAvsConfigSetIterator is returned from FilterAvsConfigSet and is used to iterate over the raw logs and unpacked data for AvsConfigSet events raised by the TaskMailbox contract.
type TaskMailboxAvsConfigSetIterator struct {
	Event *TaskMailboxAvsConfigSet // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TaskMailboxAvsConfigSetIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TaskMailboxAvsConfigSet)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TaskMailboxAvsConfigSet)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TaskMailboxAvsConfigSetIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TaskMailboxAvsConfigSetIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TaskMailboxAvsConfigSet represents a AvsConfigSet event raised by the TaskMailbox contract.
type TaskMailboxAvsConfigSet struct {
	Caller                  common.Address
	Avs                     common.Address
	AggregatorOperatorSetId uint32
	ExecutorOperatorSetIds  []uint32
	Raw                     types.Log // Blockchain specific contextual infos
}

// FilterAvsConfigSet is a free log retrieval operation binding the contract event 0xc5e4272bacf3a88a902bbb2920ed1308c295273ff00838766ed22d5e050087ca.
//
// Solidity: event AvsConfigSet(address indexed caller, address indexed avs, uint32 aggregatorOperatorSetId, uint32[] executorOperatorSetIds)
func (_TaskMailbox *TaskMailboxFilterer) FilterAvsConfigSet(opts *bind.FilterOpts, caller []common.Address, avs []common.Address) (*TaskMailboxAvsConfigSetIterator, error) {

	var callerRule []interface{}
	for _, callerItem := range caller {
		callerRule = append(callerRule, callerItem)
	}
	var avsRule []interface{}
	for _, avsItem := range avs {
		avsRule = append(avsRule, avsItem)
	}

	logs, sub, err := _TaskMailbox.contract.FilterLogs(opts, "AvsConfigSet", callerRule, avsRule)
	if err != nil {
		return nil, err
	}
	return &TaskMailboxAvsConfigSetIterator{contract: _TaskMailbox.contract, event: "AvsConfigSet", logs: logs, sub: sub}, nil
}

// WatchAvsConfigSet is a free log subscription operation binding the contract event 0xc5e4272bacf3a88a902bbb2920ed1308c295273ff00838766ed22d5e050087ca.
//
// Solidity: event AvsConfigSet(address indexed caller, address indexed avs, uint32 aggregatorOperatorSetId, uint32[] executorOperatorSetIds)
func (_TaskMailbox *TaskMailboxFilterer) WatchAvsConfigSet(opts *bind.WatchOpts, sink chan<- *TaskMailboxAvsConfigSet, caller []common.Address, avs []common.Address) (event.Subscription, error) {

	var callerRule []interface{}
	for _, callerItem := range caller {
		callerRule = append(callerRule, callerItem)
	}
	var avsRule []interface{}
	for _, avsItem := range avs {
		avsRule = append(avsRule, avsItem)
	}

	logs, sub, err := _TaskMailbox.contract.WatchLogs(opts, "AvsConfigSet", callerRule, avsRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TaskMailboxAvsConfigSet)
				if err := _TaskMailbox.contract.UnpackLog(event, "AvsConfigSet", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAvsConfigSet is a log parse operation binding the contract event 0xc5e4272bacf3a88a902bbb2920ed1308c295273ff00838766ed22d5e050087ca.
//
// Solidity: event AvsConfigSet(address indexed caller, address indexed avs, uint32 aggregatorOperatorSetId, uint32[] executorOperatorSetIds)
func (_TaskMailbox *TaskMailboxFilterer) ParseAvsConfigSet(log types.Log) (*TaskMailboxAvsConfigSet, error) {
	event := new(TaskMailboxAvsConfigSet)
	if err := _TaskMailbox.contract.UnpackLog(event, "AvsConfigSet", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TaskMailboxAvsRegisteredIterator is returned from FilterAvsRegistered and is used to iterate over the raw logs and unpacked data for AvsRegistered events raised by the TaskMailbox contract.
type TaskMailboxAvsRegisteredIterator struct {
	Event *TaskMailboxAvsRegistered // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TaskMailboxAvsRegisteredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TaskMailboxAvsRegistered)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TaskMailboxAvsRegistered)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TaskMailboxAvsRegisteredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TaskMailboxAvsRegisteredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TaskMailboxAvsRegistered represents a AvsRegistered event raised by the TaskMailbox contract.
type TaskMailboxAvsRegistered struct {
	Caller       common.Address
	Avs          common.Address
	IsRegistered bool
	Raw          types.Log // Blockchain specific contextual infos
}

// FilterAvsRegistered is a free log retrieval operation binding the contract event 0x8157f276d267ffc7b002873c20b83d9bd091016e124bf541534269a907029562.
//
// Solidity: event AvsRegistered(address indexed caller, address indexed avs, bool isRegistered)
func (_TaskMailbox *TaskMailboxFilterer) FilterAvsRegistered(opts *bind.FilterOpts, caller []common.Address, avs []common.Address) (*TaskMailboxAvsRegisteredIterator, error) {

	var callerRule []interface{}
	for _, callerItem := range caller {
		callerRule = append(callerRule, callerItem)
	}
	var avsRule []interface{}
	for _, avsItem := range avs {
		avsRule = append(avsRule, avsItem)
	}

	logs, sub, err := _TaskMailbox.contract.FilterLogs(opts, "AvsRegistered", callerRule, avsRule)
	if err != nil {
		return nil, err
	}
	return &TaskMailboxAvsRegisteredIterator{contract: _TaskMailbox.contract, event: "AvsRegistered", logs: logs, sub: sub}, nil
}

// WatchAvsRegistered is a free log subscription operation binding the contract event 0x8157f276d267ffc7b002873c20b83d9bd091016e124bf541534269a907029562.
//
// Solidity: event AvsRegistered(address indexed caller, address indexed avs, bool isRegistered)
func (_TaskMailbox *TaskMailboxFilterer) WatchAvsRegistered(opts *bind.WatchOpts, sink chan<- *TaskMailboxAvsRegistered, caller []common.Address, avs []common.Address) (event.Subscription, error) {

	var callerRule []interface{}
	for _, callerItem := range caller {
		callerRule = append(callerRule, callerItem)
	}
	var avsRule []interface{}
	for _, avsItem := range avs {
		avsRule = append(avsRule, avsItem)
	}

	logs, sub, err := _TaskMailbox.contract.WatchLogs(opts, "AvsRegistered", callerRule, avsRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TaskMailboxAvsRegistered)
				if err := _TaskMailbox.contract.UnpackLog(event, "AvsRegistered", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAvsRegistered is a log parse operation binding the contract event 0x8157f276d267ffc7b002873c20b83d9bd091016e124bf541534269a907029562.
//
// Solidity: event AvsRegistered(address indexed caller, address indexed avs, bool isRegistered)
func (_TaskMailbox *TaskMailboxFilterer) ParseAvsRegistered(log types.Log) (*TaskMailboxAvsRegistered, error) {
	event := new(TaskMailboxAvsRegistered)
	if err := _TaskMailbox.contract.UnpackLog(event, "AvsRegistered", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TaskMailboxExecutorOperatorSetTaskConfigSetIterator is returned from FilterExecutorOperatorSetTaskConfigSet and is used to iterate over the raw logs and unpacked data for ExecutorOperatorSetTaskConfigSet events raised by the TaskMailbox contract.
type TaskMailboxExecutorOperatorSetTaskConfigSetIterator struct {
	Event *TaskMailboxExecutorOperatorSetTaskConfigSet // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TaskMailboxExecutorOperatorSetTaskConfigSetIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TaskMailboxExecutorOperatorSetTaskConfigSet)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TaskMailboxExecutorOperatorSetTaskConfigSet)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TaskMailboxExecutorOperatorSetTaskConfigSetIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TaskMailboxExecutorOperatorSetTaskConfigSetIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TaskMailboxExecutorOperatorSetTaskConfigSet represents a ExecutorOperatorSetTaskConfigSet event raised by the TaskMailbox contract.
type TaskMailboxExecutorOperatorSetTaskConfigSet struct {
	Caller                common.Address
	Avs                   common.Address
	ExecutorOperatorSetId uint32
	Config                ITaskMailboxTypesExecutorOperatorSetTaskConfig
	Raw                   types.Log // Blockchain specific contextual infos
}

// FilterExecutorOperatorSetTaskConfigSet is a free log retrieval operation binding the contract event 0xb4758fe2b1355bebcbc78c10619457fcaa54e85fb3b994318238b92a097f5425.
//
// Solidity: event ExecutorOperatorSetTaskConfigSet(address indexed caller, address indexed avs, uint32 indexed executorOperatorSetId, (address,address,address,address,uint96,uint16,bytes) config)
func (_TaskMailbox *TaskMailboxFilterer) FilterExecutorOperatorSetTaskConfigSet(opts *bind.FilterOpts, caller []common.Address, avs []common.Address, executorOperatorSetId []uint32) (*TaskMailboxExecutorOperatorSetTaskConfigSetIterator, error) {

	var callerRule []interface{}
	for _, callerItem := range caller {
		callerRule = append(callerRule, callerItem)
	}
	var avsRule []interface{}
	for _, avsItem := range avs {
		avsRule = append(avsRule, avsItem)
	}
	var executorOperatorSetIdRule []interface{}
	for _, executorOperatorSetIdItem := range executorOperatorSetId {
		executorOperatorSetIdRule = append(executorOperatorSetIdRule, executorOperatorSetIdItem)
	}

	logs, sub, err := _TaskMailbox.contract.FilterLogs(opts, "ExecutorOperatorSetTaskConfigSet", callerRule, avsRule, executorOperatorSetIdRule)
	if err != nil {
		return nil, err
	}
	return &TaskMailboxExecutorOperatorSetTaskConfigSetIterator{contract: _TaskMailbox.contract, event: "ExecutorOperatorSetTaskConfigSet", logs: logs, sub: sub}, nil
}

// WatchExecutorOperatorSetTaskConfigSet is a free log subscription operation binding the contract event 0xb4758fe2b1355bebcbc78c10619457fcaa54e85fb3b994318238b92a097f5425.
//
// Solidity: event ExecutorOperatorSetTaskConfigSet(address indexed caller, address indexed avs, uint32 indexed executorOperatorSetId, (address,address,address,address,uint96,uint16,bytes) config)
func (_TaskMailbox *TaskMailboxFilterer) WatchExecutorOperatorSetTaskConfigSet(opts *bind.WatchOpts, sink chan<- *TaskMailboxExecutorOperatorSetTaskConfigSet, caller []common.Address, avs []common.Address, executorOperatorSetId []uint32) (event.Subscription, error) {

	var callerRule []interface{}
	for _, callerItem := range caller {
		callerRule = append(callerRule, callerItem)
	}
	var avsRule []interface{}
	for _, avsItem := range avs {
		avsRule = append(avsRule, avsItem)
	}
	var executorOperatorSetIdRule []interface{}
	for _, executorOperatorSetIdItem := range executorOperatorSetId {
		executorOperatorSetIdRule = append(executorOperatorSetIdRule, executorOperatorSetIdItem)
	}

	logs, sub, err := _TaskMailbox.contract.WatchLogs(opts, "ExecutorOperatorSetTaskConfigSet", callerRule, avsRule, executorOperatorSetIdRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TaskMailboxExecutorOperatorSetTaskConfigSet)
				if err := _TaskMailbox.contract.UnpackLog(event, "ExecutorOperatorSetTaskConfigSet", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseExecutorOperatorSetTaskConfigSet is a log parse operation binding the contract event 0xb4758fe2b1355bebcbc78c10619457fcaa54e85fb3b994318238b92a097f5425.
//
// Solidity: event ExecutorOperatorSetTaskConfigSet(address indexed caller, address indexed avs, uint32 indexed executorOperatorSetId, (address,address,address,address,uint96,uint16,bytes) config)
func (_TaskMailbox *TaskMailboxFilterer) ParseExecutorOperatorSetTaskConfigSet(log types.Log) (*TaskMailboxExecutorOperatorSetTaskConfigSet, error) {
	event := new(TaskMailboxExecutorOperatorSetTaskConfigSet)
	if err := _TaskMailbox.contract.UnpackLog(event, "ExecutorOperatorSetTaskConfigSet", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TaskMailboxTaskCanceledIterator is returned from FilterTaskCanceled and is used to iterate over the raw logs and unpacked data for TaskCanceled events raised by the TaskMailbox contract.
type TaskMailboxTaskCanceledIterator struct {
	Event *TaskMailboxTaskCanceled // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TaskMailboxTaskCanceledIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TaskMailboxTaskCanceled)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TaskMailboxTaskCanceled)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TaskMailboxTaskCanceledIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TaskMailboxTaskCanceledIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TaskMailboxTaskCanceled represents a TaskCanceled event raised by the TaskMailbox contract.
type TaskMailboxTaskCanceled struct {
	Creator               common.Address
	TaskHash              [32]byte
	Avs                   common.Address
	ExecutorOperatorSetId uint32
	Raw                   types.Log // Blockchain specific contextual infos
}

// FilterTaskCanceled is a free log retrieval operation binding the contract event 0x3e701c33cc740e1f61ccdcafcf97e5e65a0d7f4617aed0e8ae51be092ac18a59.
//
// Solidity: event TaskCanceled(address indexed creator, bytes32 indexed taskHash, address indexed avs, uint32 executorOperatorSetId)
func (_TaskMailbox *TaskMailboxFilterer) FilterTaskCanceled(opts *bind.FilterOpts, creator []common.Address, taskHash [][32]byte, avs []common.Address) (*TaskMailboxTaskCanceledIterator, error) {

	var creatorRule []interface{}
	for _, creatorItem := range creator {
		creatorRule = append(creatorRule, creatorItem)
	}
	var taskHashRule []interface{}
	for _, taskHashItem := range taskHash {
		taskHashRule = append(taskHashRule, taskHashItem)
	}
	var avsRule []interface{}
	for _, avsItem := range avs {
		avsRule = append(avsRule, avsItem)
	}

	logs, sub, err := _TaskMailbox.contract.FilterLogs(opts, "TaskCanceled", creatorRule, taskHashRule, avsRule)
	if err != nil {
		return nil, err
	}
	return &TaskMailboxTaskCanceledIterator{contract: _TaskMailbox.contract, event: "TaskCanceled", logs: logs, sub: sub}, nil
}

// WatchTaskCanceled is a free log subscription operation binding the contract event 0x3e701c33cc740e1f61ccdcafcf97e5e65a0d7f4617aed0e8ae51be092ac18a59.
//
// Solidity: event TaskCanceled(address indexed creator, bytes32 indexed taskHash, address indexed avs, uint32 executorOperatorSetId)
func (_TaskMailbox *TaskMailboxFilterer) WatchTaskCanceled(opts *bind.WatchOpts, sink chan<- *TaskMailboxTaskCanceled, creator []common.Address, taskHash [][32]byte, avs []common.Address) (event.Subscription, error) {

	var creatorRule []interface{}
	for _, creatorItem := range creator {
		creatorRule = append(creatorRule, creatorItem)
	}
	var taskHashRule []interface{}
	for _, taskHashItem := range taskHash {
		taskHashRule = append(taskHashRule, taskHashItem)
	}
	var avsRule []interface{}
	for _, avsItem := range avs {
		avsRule = append(avsRule, avsItem)
	}

	logs, sub, err := _TaskMailbox.contract.WatchLogs(opts, "TaskCanceled", creatorRule, taskHashRule, avsRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TaskMailboxTaskCanceled)
				if err := _TaskMailbox.contract.UnpackLog(event, "TaskCanceled", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTaskCanceled is a log parse operation binding the contract event 0x3e701c33cc740e1f61ccdcafcf97e5e65a0d7f4617aed0e8ae51be092ac18a59.
//
// Solidity: event TaskCanceled(address indexed creator, bytes32 indexed taskHash, address indexed avs, uint32 executorOperatorSetId)
func (_TaskMailbox *TaskMailboxFilterer) ParseTaskCanceled(log types.Log) (*TaskMailboxTaskCanceled, error) {
	event := new(TaskMailboxTaskCanceled)
	if err := _TaskMailbox.contract.UnpackLog(event, "TaskCanceled", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TaskMailboxTaskCreatedIterator is returned from FilterTaskCreated and is used to iterate over the raw logs and unpacked data for TaskCreated events raised by the TaskMailbox contract.
type TaskMailboxTaskCreatedIterator struct {
	Event *TaskMailboxTaskCreated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TaskMailboxTaskCreatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TaskMailboxTaskCreated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TaskMailboxTaskCreated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TaskMailboxTaskCreatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TaskMailboxTaskCreatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TaskMailboxTaskCreated represents a TaskCreated event raised by the TaskMailbox contract.
type TaskMailboxTaskCreated struct {
	Creator               common.Address
	TaskHash              [32]byte
	Avs                   common.Address
	ExecutorOperatorSetId uint32
	RefundCollector       common.Address
	AvsFee                *big.Int
	TaskDeadline          *big.Int
	Payload               []byte
	Raw                   types.Log // Blockchain specific contextual infos
}

// FilterTaskCreated is a free log retrieval operation binding the contract event 0x4a09af06a0e08fd1c053a8b400de7833019c88066be8a2d3b3b17174a74fe317.
//
// Solidity: event TaskCreated(address indexed creator, bytes32 indexed taskHash, address indexed avs, uint32 executorOperatorSetId, address refundCollector, uint96 avsFee, uint256 taskDeadline, bytes payload)
func (_TaskMailbox *TaskMailboxFilterer) FilterTaskCreated(opts *bind.FilterOpts, creator []common.Address, taskHash [][32]byte, avs []common.Address) (*TaskMailboxTaskCreatedIterator, error) {

	var creatorRule []interface{}
	for _, creatorItem := range creator {
		creatorRule = append(creatorRule, creatorItem)
	}
	var taskHashRule []interface{}
	for _, taskHashItem := range taskHash {
		taskHashRule = append(taskHashRule, taskHashItem)
	}
	var avsRule []interface{}
	for _, avsItem := range avs {
		avsRule = append(avsRule, avsItem)
	}

	logs, sub, err := _TaskMailbox.contract.FilterLogs(opts, "TaskCreated", creatorRule, taskHashRule, avsRule)
	if err != nil {
		return nil, err
	}
	return &TaskMailboxTaskCreatedIterator{contract: _TaskMailbox.contract, event: "TaskCreated", logs: logs, sub: sub}, nil
}

// WatchTaskCreated is a free log subscription operation binding the contract event 0x4a09af06a0e08fd1c053a8b400de7833019c88066be8a2d3b3b17174a74fe317.
//
// Solidity: event TaskCreated(address indexed creator, bytes32 indexed taskHash, address indexed avs, uint32 executorOperatorSetId, address refundCollector, uint96 avsFee, uint256 taskDeadline, bytes payload)
func (_TaskMailbox *TaskMailboxFilterer) WatchTaskCreated(opts *bind.WatchOpts, sink chan<- *TaskMailboxTaskCreated, creator []common.Address, taskHash [][32]byte, avs []common.Address) (event.Subscription, error) {

	var creatorRule []interface{}
	for _, creatorItem := range creator {
		creatorRule = append(creatorRule, creatorItem)
	}
	var taskHashRule []interface{}
	for _, taskHashItem := range taskHash {
		taskHashRule = append(taskHashRule, taskHashItem)
	}
	var avsRule []interface{}
	for _, avsItem := range avs {
		avsRule = append(avsRule, avsItem)
	}

	logs, sub, err := _TaskMailbox.contract.WatchLogs(opts, "TaskCreated", creatorRule, taskHashRule, avsRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TaskMailboxTaskCreated)
				if err := _TaskMailbox.contract.UnpackLog(event, "TaskCreated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTaskCreated is a log parse operation binding the contract event 0x4a09af06a0e08fd1c053a8b400de7833019c88066be8a2d3b3b17174a74fe317.
//
// Solidity: event TaskCreated(address indexed creator, bytes32 indexed taskHash, address indexed avs, uint32 executorOperatorSetId, address refundCollector, uint96 avsFee, uint256 taskDeadline, bytes payload)
func (_TaskMailbox *TaskMailboxFilterer) ParseTaskCreated(log types.Log) (*TaskMailboxTaskCreated, error) {
	event := new(TaskMailboxTaskCreated)
	if err := _TaskMailbox.contract.UnpackLog(event, "TaskCreated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TaskMailboxTaskVerifiedIterator is returned from FilterTaskVerified and is used to iterate over the raw logs and unpacked data for TaskVerified events raised by the TaskMailbox contract.
type TaskMailboxTaskVerifiedIterator struct {
	Event *TaskMailboxTaskVerified // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TaskMailboxTaskVerifiedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TaskMailboxTaskVerified)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TaskMailboxTaskVerified)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TaskMailboxTaskVerifiedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TaskMailboxTaskVerifiedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TaskMailboxTaskVerified represents a TaskVerified event raised by the TaskMailbox contract.
type TaskMailboxTaskVerified struct {
	Aggregator            common.Address
	TaskHash              [32]byte
	Avs                   common.Address
	ExecutorOperatorSetId uint32
	Result                []byte
	Raw                   types.Log // Blockchain specific contextual infos
}

// FilterTaskVerified is a free log retrieval operation binding the contract event 0xd7eb53a86d7419ffc42bf17e0a61b4a2a8ab7f2e62c19368cee7d8822ea9f453.
//
// Solidity: event TaskVerified(address indexed aggregator, bytes32 indexed taskHash, address indexed avs, uint32 executorOperatorSetId, bytes result)
func (_TaskMailbox *TaskMailboxFilterer) FilterTaskVerified(opts *bind.FilterOpts, aggregator []common.Address, taskHash [][32]byte, avs []common.Address) (*TaskMailboxTaskVerifiedIterator, error) {

	var aggregatorRule []interface{}
	for _, aggregatorItem := range aggregator {
		aggregatorRule = append(aggregatorRule, aggregatorItem)
	}
	var taskHashRule []interface{}
	for _, taskHashItem := range taskHash {
		taskHashRule = append(taskHashRule, taskHashItem)
	}
	var avsRule []interface{}
	for _, avsItem := range avs {
		avsRule = append(avsRule, avsItem)
	}

	logs, sub, err := _TaskMailbox.contract.FilterLogs(opts, "TaskVerified", aggregatorRule, taskHashRule, avsRule)
	if err != nil {
		return nil, err
	}
	return &TaskMailboxTaskVerifiedIterator{contract: _TaskMailbox.contract, event: "TaskVerified", logs: logs, sub: sub}, nil
}

// WatchTaskVerified is a free log subscription operation binding the contract event 0xd7eb53a86d7419ffc42bf17e0a61b4a2a8ab7f2e62c19368cee7d8822ea9f453.
//
// Solidity: event TaskVerified(address indexed aggregator, bytes32 indexed taskHash, address indexed avs, uint32 executorOperatorSetId, bytes result)
func (_TaskMailbox *TaskMailboxFilterer) WatchTaskVerified(opts *bind.WatchOpts, sink chan<- *TaskMailboxTaskVerified, aggregator []common.Address, taskHash [][32]byte, avs []common.Address) (event.Subscription, error) {

	var aggregatorRule []interface{}
	for _, aggregatorItem := range aggregator {
		aggregatorRule = append(aggregatorRule, aggregatorItem)
	}
	var taskHashRule []interface{}
	for _, taskHashItem := range taskHash {
		taskHashRule = append(taskHashRule, taskHashItem)
	}
	var avsRule []interface{}
	for _, avsItem := range avs {
		avsRule = append(avsRule, avsItem)
	}

	logs, sub, err := _TaskMailbox.contract.WatchLogs(opts, "TaskVerified", aggregatorRule, taskHashRule, avsRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TaskMailboxTaskVerified)
				if err := _TaskMailbox.contract.UnpackLog(event, "TaskVerified", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTaskVerified is a log parse operation binding the contract event 0xd7eb53a86d7419ffc42bf17e0a61b4a2a8ab7f2e62c19368cee7d8822ea9f453.
//
// Solidity: event TaskVerified(address indexed aggregator, bytes32 indexed taskHash, address indexed avs, uint32 executorOperatorSetId, bytes result)
func (_TaskMailbox *TaskMailboxFilterer) ParseTaskVerified(log types.Log) (*TaskMailboxTaskVerified, error) {
	event := new(TaskMailboxTaskVerified)
	if err := _TaskMailbox.contract.UnpackLog(event, "TaskVerified", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
